{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/legacy/swiper.bundle-a0ff558a.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Swiper","tslib__WEBPACK_IMPORTED_MODULE_0__","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","arr","self","i","length","$","selector","context","els","tempParent","html_1","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","_i","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents_1","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles_1","styles","offsetWidth","parseFloat","outerHeight","styles_2","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","html","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","next_1","prev","previousElementSibling","prevAll","prevEls","prev_1","parent","parentNode","parent_1","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","Object","keys","forEach","methodName","Utils","deleteProps","obj","object","nextTick","delay","now","getTranslate","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","parseUrlQuery","url","params","param","query","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","extend","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","get","gestures","SwiperClass","eventsListeners","eventName","priority","method","once","onceHandler","eventHandler","index$$1","emit","data$$1","Array","isArray","slice","eventsArray","handlers_1","useModulesParams","instanceParams","instance","modules","moduleName","module","useModules","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","set","components","use","configurable","installModule","name","proto","static","install","m","concat","updateSize","width","height","swiper","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","slidesNumberEvenToRows","slideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","newSlidesGrid","slidesPerRow","numFullColumns","slide_1","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize_1","slideSizeValue","allSlidesOffset_1","snap","snapIndex","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slide_2","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","activeSlide","realIndex","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","z","previousTranslate","transitionStart","runCallbacks","direction","autoHeight","dir","transitionEnd$1","animating","transition$1","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","prevIndex","normalizedTranslate","normalizedSnapGrid","prevSnap","slideReset","slideToClosest","translate_1","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","pow","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","currentPos","touchEndTime","timeDiff","lastClickTime","clickTimeout","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition_1","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","_a","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams_1","paramValue","breakpointParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","Browser","isSafari","isIE","isEdge","isUiWebView","test","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","extendedDefaults","_super","_this","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers_1","containerEl","newParams","touchEventsTouch","touchEventsDesktop","spv","breakLoop","translated","translateValue","destroy","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","attach","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","observeSlideChildren","disconnect","Observer$1","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","handle","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","returnValue","enable","eventsTarged","disable","Pagination","pagination","current","total","paginationType","bullets","firstIndex_1","lastIndex_1","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","lockClass","render","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","hideOnClick","number","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","click","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","setDragPosition","pointerPosition","positionRatio","clientX","clientY","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragClass","dragEl","draggable","Zoom","getDistanceBetweenTouches","x1","y1","x2","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$slideEl","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","onGestureChange","scaleMove","currentScale","minRatio","onGestureEnd","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","slideEl","touchStart","touchEnd","doubleTap","Autoplay","run","$activeSlideEl","reverseDirection","stopOnLastSlide","running","pause","paused","waitForTransition","disableOnInteraction","beforeTransitionStart","sliderFirstMove"],"mappings":"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","file":"js/chunk-2d0b6ee7.2d470603.js","sourcesContent":["import * as tslib_1 from \"tslib\";\n/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() { },\n    removeEventListener: function removeEventListener() { },\n    activeElement: {\n        blur: function blur() { },\n        nodeName: '',\n    },\n    querySelector: function querySelector() {\n        return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n        return [];\n    },\n    getElementById: function getElementById() {\n        return null;\n    },\n    createEvent: function createEvent() {\n        return {\n            initEvent: function initEvent() { },\n        };\n    },\n    createElement: function createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute: function setAttribute() { },\n            getElementsByTagName: function getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    location: { hash: '' },\n} : document; // eslint-disable-line\nvar win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n        userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener: function addEventListener() { },\n    removeEventListener: function removeEventListener() { },\n    getComputedStyle: function getComputedStyle() {\n        return {\n            getPropertyValue: function getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image: function Image() { },\n    Date: function Date() { },\n    screen: {},\n    setTimeout: function setTimeout() { },\n    clearTimeout: function clearTimeout() { },\n} : window; // eslint-disable-line\n/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nvar Dom7 = /** @class */ (function () {\n    function Dom7(arr) {\n        var self = this;\n        // Create array-like object\n        for (var i = 0; i < arr.length; i += 1) {\n            self[i] = arr[i];\n        }\n        self.length = arr.length;\n        // Return collection with methods\n        return this;\n    }\n    return Dom7;\n}());\nfunction $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n        if (selector instanceof Dom7) {\n            return selector;\n        }\n    }\n    if (selector) {\n        // String\n        if (typeof selector === 'string') {\n            var els = void 0;\n            var tempParent = void 0;\n            var html_1 = selector.trim();\n            if (html_1.indexOf('<') >= 0 && html_1.indexOf('>') >= 0) {\n                var toCreate = 'div';\n                if (html_1.indexOf('<li') === 0)\n                    toCreate = 'ul';\n                if (html_1.indexOf('<tr') === 0)\n                    toCreate = 'tbody';\n                if (html_1.indexOf('<td') === 0 || html_1.indexOf('<th') === 0)\n                    toCreate = 'tr';\n                if (html_1.indexOf('<tbody') === 0)\n                    toCreate = 'table';\n                if (html_1.indexOf('<option') === 0)\n                    toCreate = 'select';\n                tempParent = doc.createElement(toCreate);\n                tempParent.innerHTML = html_1;\n                for (i = 0; i < tempParent.childNodes.length; i += 1) {\n                    arr.push(tempParent.childNodes[i]);\n                }\n            }\n            else {\n                if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n                    // Pure ID selector\n                    els = [doc.getElementById(selector.trim().split('#')[1])];\n                }\n                else {\n                    // Other selectors\n                    els = (context || doc).querySelectorAll(selector.trim());\n                }\n                for (i = 0; i < els.length; i += 1) {\n                    if (els[i])\n                        arr.push(els[i]);\n                }\n            }\n        }\n        else if (selector.nodeType || selector === win || selector === doc) {\n            // Node/element\n            arr.push(selector);\n        }\n        else if (selector.length > 0 && selector[0].nodeType) {\n            // Array of elements or instance of Dom\n            for (i = 0; i < selector.length; i += 1) {\n                arr.push(selector[i]);\n            }\n        }\n    }\n    return new Dom7(arr);\n}\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\nfunction unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n        if (uniqueArray.indexOf(arr[i]) === -1)\n            uniqueArray.push(arr[i]);\n    }\n    return uniqueArray;\n}\n// Classes and attributes\nfunction addClass(className) {\n    if (typeof className === 'undefined') {\n        return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n        for (var j = 0; j < this.length; j += 1) {\n            if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined')\n                this[j].classList.add(classes[i]);\n        }\n    }\n    return this;\n}\nfunction removeClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n        for (var j = 0; j < this.length; j += 1) {\n            if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined')\n                this[j].classList.remove(classes[i]);\n        }\n    }\n    return this;\n}\nfunction hasClass(className) {\n    if (!this[0])\n        return false;\n    return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n        for (var j = 0; j < this.length; j += 1) {\n            if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined')\n                this[j].classList.toggle(classes[i]);\n        }\n    }\n    return this;\n}\nfunction attr(attrs, value) {\n    if (arguments.length === 1 && typeof attrs === 'string') {\n        // Get attr\n        if (this[0])\n            return this[0].getAttribute(attrs);\n        return undefined;\n    }\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n        if (arguments.length === 2) {\n            // String\n            this[i].setAttribute(attrs, value);\n        }\n        else {\n            // Object\n            // eslint-disable-next-line\n            for (var attrName in attrs) {\n                this[i][attrName] = attrs[attrName];\n                this[i].setAttribute(attrName, attrs[attrName]);\n            }\n        }\n    }\n    return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n        this[i].removeAttribute(attr);\n    }\n    return this;\n}\nfunction data(key, value) {\n    var el;\n    if (typeof value === 'undefined') {\n        el = this[0];\n        // Get value\n        if (el) {\n            if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n                return el.dom7ElementDataStorage[key];\n            }\n            var dataKey = el.getAttribute(\"data-\" + key);\n            if (dataKey) {\n                return dataKey;\n            }\n            return undefined;\n        }\n        return undefined;\n    }\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n        el = this[i];\n        if (!el.dom7ElementDataStorage)\n            el.dom7ElementDataStorage = {};\n        el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n        var elStyle = this[i].style;\n        elStyle.webkitTransform = transform;\n        elStyle.transform = transform;\n    }\n    return this;\n}\nfunction transition(duration) {\n    if (typeof duration !== 'string') {\n        duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n        var elStyle = this[i].style;\n        elStyle.webkitTransitionDuration = duration;\n        elStyle.transitionDuration = duration;\n    }\n    return this;\n}\n// Events\nfunction on() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var eventType = args[0], targetSelector = args[1], listener = args[2], capture = args[3];\n    if (typeof args[1] === 'function') {\n        eventType = args[0], listener = args[1], capture = args[2];\n        targetSelector = undefined;\n    }\n    if (!capture)\n        capture = false;\n    function handleLiveEvent(e) {\n        var target = e.target;\n        if (!target)\n            return;\n        var eventData = e.target.dom7EventData || [];\n        if (eventData.indexOf(e) < 0) {\n            eventData.unshift(e);\n        }\n        if ($(target).is(targetSelector))\n            listener.apply(target, eventData);\n        else {\n            var parents_1 = $(target).parents(); // eslint-disable-line\n            for (var k = 0; k < parents_1.length; k += 1) {\n                if ($(parents_1[k]).is(targetSelector))\n                    listener.apply(parents_1[k], eventData);\n            }\n        }\n    }\n    function handleEvent(e) {\n        var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n        if (eventData.indexOf(e) < 0) {\n            eventData.unshift(e);\n        }\n        listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n        var el = this[i];\n        if (!targetSelector) {\n            for (j = 0; j < events.length; j += 1) {\n                var event = events[j];\n                if (!el.dom7Listeners)\n                    el.dom7Listeners = {};\n                if (!el.dom7Listeners[event])\n                    el.dom7Listeners[event] = [];\n                el.dom7Listeners[event].push({\n                    listener: listener,\n                    proxyListener: handleEvent,\n                });\n                el.addEventListener(event, handleEvent, capture);\n            }\n        }\n        else {\n            // Live events\n            for (j = 0; j < events.length; j += 1) {\n                var event = events[j];\n                if (!el.dom7LiveListeners)\n                    el.dom7LiveListeners = {};\n                if (!el.dom7LiveListeners[event])\n                    el.dom7LiveListeners[event] = [];\n                el.dom7LiveListeners[event].push({\n                    listener: listener,\n                    proxyListener: handleLiveEvent,\n                });\n                el.addEventListener(event, handleLiveEvent, capture);\n            }\n        }\n    }\n    return this;\n}\nfunction off() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var eventType = args[0], targetSelector = args[1], listener = args[2], capture = args[3];\n    if (typeof args[1] === 'function') {\n        eventType = args[0], listener = args[1], capture = args[2];\n        targetSelector = undefined;\n    }\n    if (!capture)\n        capture = false;\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n        var event = events[i];\n        for (var j = 0; j < this.length; j += 1) {\n            var el = this[j];\n            var handlers = void 0;\n            if (!targetSelector && el.dom7Listeners) {\n                handlers = el.dom7Listeners[event];\n            }\n            else if (targetSelector && el.dom7LiveListeners) {\n                handlers = el.dom7LiveListeners[event];\n            }\n            if (handlers && handlers.length) {\n                for (var k = handlers.length - 1; k >= 0; k -= 1) {\n                    var handler = handlers[k];\n                    if (listener && handler.listener === listener) {\n                        el.removeEventListener(event, handler.proxyListener, capture);\n                        handlers.splice(k, 1);\n                    }\n                    else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n                        el.removeEventListener(event, handler.proxyListener, capture);\n                        handlers.splice(k, 1);\n                    }\n                    else if (!listener) {\n                        el.removeEventListener(event, handler.proxyListener, capture);\n                        handlers.splice(k, 1);\n                    }\n                }\n            }\n        }\n    }\n    return this;\n}\nfunction trigger() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n        var event = events[i];\n        for (var j = 0; j < this.length; j += 1) {\n            var el = this[j];\n            var evt = void 0;\n            try {\n                evt = new win.CustomEvent(event, {\n                    detail: eventData,\n                    bubbles: true,\n                    cancelable: true,\n                });\n            }\n            catch (e) {\n                evt = doc.createEvent('Event');\n                evt.initEvent(event, true, true);\n                evt.detail = eventData;\n            }\n            // eslint-disable-next-line\n            el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n            el.dispatchEvent(evt);\n            el.dom7EventData = [];\n            delete el.dom7EventData;\n        }\n    }\n    return this;\n}\nfunction transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n        /* jshint validthis:true */\n        if (e.target !== this)\n            return;\n        callback.call(this, e);\n        for (i = 0; i < events.length; i += 1) {\n            dom.off(events[i], fireCallBack);\n        }\n    }\n    if (callback) {\n        for (i = 0; i < events.length; i += 1) {\n            dom.on(events[i], fireCallBack);\n        }\n    }\n    return this;\n}\nfunction outerWidth(includeMargins) {\n    if (this.length > 0) {\n        if (includeMargins) {\n            // eslint-disable-next-line\n            var styles_1 = this.styles();\n            return this[0].offsetWidth + parseFloat(styles_1.getPropertyValue('margin-right')) + parseFloat(styles_1.getPropertyValue('margin-left'));\n        }\n        return this[0].offsetWidth;\n    }\n    return null;\n}\nfunction outerHeight(includeMargins) {\n    if (this.length > 0) {\n        if (includeMargins) {\n            // eslint-disable-next-line\n            var styles_2 = this.styles();\n            return this[0].offsetHeight + parseFloat(styles_2.getPropertyValue('margin-top')) + parseFloat(styles_2.getPropertyValue('margin-bottom'));\n        }\n        return this[0].offsetHeight;\n    }\n    return null;\n}\nfunction offset() {\n    if (this.length > 0) {\n        var el = this[0];\n        var box = el.getBoundingClientRect();\n        var body = doc.body;\n        var clientTop = el.clientTop || body.clientTop || 0;\n        var clientLeft = el.clientLeft || body.clientLeft || 0;\n        var scrollTop = el === win ? win.scrollY : el.scrollTop;\n        var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n        return {\n            top: (box.top + scrollTop) - clientTop,\n            left: (box.left + scrollLeft) - clientLeft,\n        };\n    }\n    return null;\n}\nfunction styles() {\n    if (this[0])\n        return win.getComputedStyle(this[0], null);\n    return {};\n}\nfunction css(props, value) {\n    var i;\n    if (arguments.length === 1) {\n        if (typeof props === 'string') {\n            if (this[0])\n                return win.getComputedStyle(this[0], null).getPropertyValue(props);\n        }\n        else {\n            for (i = 0; i < this.length; i += 1) {\n                // eslint-disable-next-line\n                for (var prop in props) {\n                    this[i].style[prop] = props[prop];\n                }\n            }\n            return this;\n        }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n        for (i = 0; i < this.length; i += 1) {\n            this[i].style[props] = value;\n        }\n        return this;\n    }\n    return this;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n    // Don't bother continuing without a callback\n    if (!callback)\n        return this;\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n        // If the callback returns false\n        if (callback.call(this[i], i, this[i]) === false) {\n            // End the loop early\n            return this;\n        }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n}\n// eslint-disable-next-line\nfunction html(html) {\n    if (typeof html === 'undefined') {\n        return this[0] ? this[0].innerHTML : undefined;\n    }\n    for (var i = 0; i < this.length; i += 1) {\n        this[i].innerHTML = html;\n    }\n    return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n    if (typeof text === 'undefined') {\n        if (this[0]) {\n            return this[0].textContent.trim();\n        }\n        return null;\n    }\n    for (var i = 0; i < this.length; i += 1) {\n        this[i].textContent = text;\n    }\n    return this;\n}\nfunction is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined')\n        return false;\n    if (typeof selector === 'string') {\n        if (el.matches)\n            return el.matches(selector);\n        else if (el.webkitMatchesSelector)\n            return el.webkitMatchesSelector(selector);\n        else if (el.msMatchesSelector)\n            return el.msMatchesSelector(selector);\n        compareWith = $(selector);\n        for (i = 0; i < compareWith.length; i += 1) {\n            if (compareWith[i] === el)\n                return true;\n        }\n        return false;\n    }\n    else if (selector === doc)\n        return el === doc;\n    else if (selector === win)\n        return el === win;\n    if (selector.nodeType || selector instanceof Dom7) {\n        compareWith = selector.nodeType ? [selector] : selector;\n        for (i = 0; i < compareWith.length; i += 1) {\n            if (compareWith[i] === el)\n                return true;\n        }\n        return false;\n    }\n    return false;\n}\nfunction index() {\n    var child = this[0];\n    var i;\n    if (child) {\n        i = 0;\n        // eslint-disable-next-line\n        while ((child = child.previousSibling) !== null) {\n            if (child.nodeType === 1)\n                i += 1;\n        }\n        return i;\n    }\n    return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n    if (typeof index === 'undefined')\n        return this;\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n        return new Dom7([]);\n    }\n    if (index < 0) {\n        returnIndex = length + index;\n        if (returnIndex < 0)\n            return new Dom7([]);\n        return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n}\nfunction append() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var newChild;\n    for (var k = 0; k < args.length; k += 1) {\n        newChild = args[k];\n        for (var i = 0; i < this.length; i += 1) {\n            if (typeof newChild === 'string') {\n                var tempDiv = doc.createElement('div');\n                tempDiv.innerHTML = newChild;\n                while (tempDiv.firstChild) {\n                    this[i].appendChild(tempDiv.firstChild);\n                }\n            }\n            else if (newChild instanceof Dom7) {\n                for (var j = 0; j < newChild.length; j += 1) {\n                    this[i].appendChild(newChild[j]);\n                }\n            }\n            else {\n                this[i].appendChild(newChild);\n            }\n        }\n    }\n    return this;\n}\nfunction prepend(newChild) {\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n            var tempDiv = doc.createElement('div');\n            tempDiv.innerHTML = newChild;\n            for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n                this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n            }\n        }\n        else if (newChild instanceof Dom7) {\n            for (j = 0; j < newChild.length; j += 1) {\n                this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n            }\n        }\n        else {\n            this[i].insertBefore(newChild, this[i].childNodes[0]);\n        }\n    }\n    return this;\n}\nfunction next(selector) {\n    if (this.length > 0) {\n        if (selector) {\n            if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n                return new Dom7([this[0].nextElementSibling]);\n            }\n            return new Dom7([]);\n        }\n        if (this[0].nextElementSibling)\n            return new Dom7([this[0].nextElementSibling]);\n        return new Dom7([]);\n    }\n    return new Dom7([]);\n}\nfunction nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el)\n        return new Dom7([]);\n    while (el.nextElementSibling) {\n        var next_1 = el.nextElementSibling; // eslint-disable-line\n        if (selector) {\n            if ($(next_1).is(selector))\n                nextEls.push(next_1);\n        }\n        else\n            nextEls.push(next_1);\n        el = next_1;\n    }\n    return new Dom7(nextEls);\n}\nfunction prev(selector) {\n    if (this.length > 0) {\n        var el = this[0];\n        if (selector) {\n            if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n                return new Dom7([el.previousElementSibling]);\n            }\n            return new Dom7([]);\n        }\n        if (el.previousElementSibling)\n            return new Dom7([el.previousElementSibling]);\n        return new Dom7([]);\n    }\n    return new Dom7([]);\n}\nfunction prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el)\n        return new Dom7([]);\n    while (el.previousElementSibling) {\n        var prev_1 = el.previousElementSibling; // eslint-disable-line\n        if (selector) {\n            if ($(prev_1).is(selector))\n                prevEls.push(prev_1);\n        }\n        else\n            prevEls.push(prev_1);\n        el = prev_1;\n    }\n    return new Dom7(prevEls);\n}\nfunction parent(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n        if (this[i].parentNode !== null) {\n            if (selector) {\n                if ($(this[i].parentNode).is(selector))\n                    parents.push(this[i].parentNode);\n            }\n            else {\n                parents.push(this[i].parentNode);\n            }\n        }\n    }\n    return $(unique(parents));\n}\nfunction parents(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n        var parent_1 = this[i].parentNode; // eslint-disable-line\n        while (parent_1) {\n            if (selector) {\n                if ($(parent_1).is(selector))\n                    parents.push(parent_1);\n            }\n            else {\n                parents.push(parent_1);\n            }\n            parent_1 = parent_1.parentNode;\n        }\n    }\n    return $(unique(parents));\n}\nfunction closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n        return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n        closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n}\nfunction find(selector) {\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n        var found = this[i].querySelectorAll(selector);\n        for (var j = 0; j < found.length; j += 1) {\n            foundElements.push(found[j]);\n        }\n    }\n    return new Dom7(foundElements);\n}\nfunction children(selector) {\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n        var childNodes = this[i].childNodes;\n        for (var j = 0; j < childNodes.length; j += 1) {\n            if (!selector) {\n                if (childNodes[j].nodeType === 1)\n                    children.push(childNodes[j]);\n            }\n            else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n                children.push(childNodes[j]);\n            }\n        }\n    }\n    return new Dom7(unique(children));\n}\nfunction remove() {\n    for (var i = 0; i < this.length; i += 1) {\n        if (this[i].parentNode)\n            this[i].parentNode.removeChild(this[i]);\n    }\n    return this;\n}\nfunction add() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n        var toAdd = $(args[i]);\n        for (j = 0; j < toAdd.length; j += 1) {\n            dom[dom.length] = toAdd[j];\n            dom.length += 1;\n        }\n    }\n    return dom;\n}\n/**\n * Swiper 4.4.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: December 19, 2018\n */\nvar Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n};\nObject.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n});\nvar Utils = {\n    deleteProps: function (obj) {\n        var object = obj;\n        Object.keys(object).forEach(function (key) {\n            try {\n                object[key] = null;\n            }\n            catch (e) {\n                // no getter for object\n            }\n            try {\n                delete object[key];\n            }\n            catch (e) {\n                // something got wrong\n            }\n        });\n    },\n    nextTick: function (callback, delay) {\n        if (delay === void 0) { delay = 0; }\n        return setTimeout(callback, delay);\n    },\n    now: function () {\n        return Date.now();\n    },\n    getTranslate: function (el, axis) {\n        if (axis === void 0) { axis = 'x'; }\n        var matrix;\n        var curTransform;\n        var transformMatrix;\n        var curStyle = win.getComputedStyle(el, null);\n        if (win.WebKitCSSMatrix) {\n            curTransform = curStyle.transform || curStyle.webkitTransform;\n            if (curTransform.split(',').length > 6) {\n                curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n            }\n            // Some old versions of Webkit choke when 'none' is passed; pass\n            // empty string instead in this case\n            transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n        }\n        else {\n            transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n            matrix = transformMatrix.toString().split(',');\n        }\n        if (axis === 'x') {\n            // Latest Chrome and webkits Fix\n            if (win.WebKitCSSMatrix)\n                curTransform = transformMatrix.m41;\n            // Crazy IE10 Matrix\n            else if (matrix.length === 16)\n                curTransform = parseFloat(matrix[12]);\n            // Normal Browsers\n            else\n                curTransform = parseFloat(matrix[4]);\n        }\n        if (axis === 'y') {\n            // Latest Chrome and webkits Fix\n            if (win.WebKitCSSMatrix)\n                curTransform = transformMatrix.m42;\n            // Crazy IE10 Matrix\n            else if (matrix.length === 16)\n                curTransform = parseFloat(matrix[13]);\n            // Normal Browsers\n            else\n                curTransform = parseFloat(matrix[5]);\n        }\n        return curTransform || 0;\n    },\n    parseUrlQuery: function (url) {\n        var query = {};\n        var urlToParse = url || win.location.href;\n        var i;\n        var params;\n        var param;\n        var length;\n        if (typeof urlToParse === 'string' && urlToParse.length) {\n            urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n            params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n            length = params.length;\n            for (i = 0; i < length; i += 1) {\n                param = params[i].replace(/#\\S+/g, '').split('=');\n                query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n            }\n        }\n        return query;\n    },\n    isObject: function (o) {\n        return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var to = Object(args[0]);\n        for (var i = 1; i < args.length; i += 1) {\n            var nextSource = args[i];\n            if (nextSource !== undefined && nextSource !== null) {\n                var keysArray = Object.keys(Object(nextSource));\n                for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                    if (desc !== undefined && desc.enumerable) {\n                        if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                            Utils.extend(to[nextKey], nextSource[nextKey]);\n                        }\n                        else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                            to[nextKey] = {};\n                            Utils.extend(to[nextKey], nextSource[nextKey]);\n                        }\n                        else {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n        }\n        return to;\n    },\n};\nvar Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n        touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n            return !!((win.navigator.maxTouchPoints > 0) || ('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n        }()),\n        pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent || ('maxTouchPoints' in win.navigator)),\n        prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n        transition: (function checkTransition() {\n            var style = testDiv.style;\n            return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n        }()),\n        transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n            var style = testDiv.style;\n            return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n        }()),\n        flexbox: (function checkFlexbox() {\n            var style = testDiv.style;\n            var styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n            for (var i = 0; i < styles$$1.length; i += 1) {\n                if (styles$$1[i] in style)\n                    return true;\n            }\n            return false;\n        }()),\n        observer: (function checkObserver() {\n            return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n        }()),\n        passiveListener: (function checkPassiveListener() {\n            var supportsPassive = false;\n            try {\n                var opts = Object.defineProperty({}, 'passive', {\n                    // eslint-disable-next-line\n                    get: function () {\n                        supportsPassive = true;\n                    },\n                });\n                win.addEventListener('testPassiveListener', null, opts);\n            }\n            catch (e) {\n                // No support\n            }\n            return supportsPassive;\n        }()),\n        gestures: (function checkGestures() {\n            return 'ongesturestart' in win;\n        }()),\n    };\n}());\nvar SwiperClass = /** @class */ (function () {\n    function SwiperClass(params) {\n        if (params === void 0) { params = {}; }\n        var self = this;\n        self.params = params;\n        // Events\n        self.eventsListeners = {};\n        if (self.params && self.params.on) {\n            Object.keys(self.params.on).forEach(function (eventName) {\n                self.on(eventName, self.params.on[eventName]);\n            });\n        }\n    }\n    SwiperClass.prototype.on = function (events, handler, priority) {\n        var self = this;\n        if (typeof handler !== 'function')\n            return self;\n        var method = priority ? 'unshift' : 'push';\n        events.split(' ').forEach(function (event) {\n            if (!self.eventsListeners[event])\n                self.eventsListeners[event] = [];\n            self.eventsListeners[event][method](handler);\n        });\n        return self;\n    };\n    SwiperClass.prototype.once = function (events, handler, priority) {\n        var self = this;\n        if (typeof handler !== 'function')\n            return self;\n        function onceHandler() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            handler.apply(self, args);\n            self.off(events, onceHandler);\n        }\n        return self.on(events, onceHandler, priority);\n    };\n    SwiperClass.prototype.off = function (events, handler) {\n        var self = this;\n        if (!self.eventsListeners)\n            return self;\n        events.split(' ').forEach(function (event) {\n            if (typeof handler === 'undefined') {\n                self.eventsListeners[event] = [];\n            }\n            else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n                self.eventsListeners[event].forEach(function (eventHandler, index$$1) {\n                    if (eventHandler === handler) {\n                        self.eventsListeners[event].splice(index$$1, 1);\n                    }\n                });\n            }\n        });\n        return self;\n    };\n    SwiperClass.prototype.emit = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var self = this;\n        if (!self.eventsListeners)\n            return self;\n        var events;\n        var data$$1;\n        var context;\n        if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n            events = args[0];\n            data$$1 = args.slice(1, args.length);\n            context = self;\n        }\n        else {\n            events = args[0].events;\n            data$$1 = args[0].data;\n            context = args[0].context || self;\n        }\n        var eventsArray = Array.isArray(events) ? events : events.split(' ');\n        eventsArray.forEach(function (event) {\n            if (self.eventsListeners && self.eventsListeners[event]) {\n                var handlers_1 = [];\n                self.eventsListeners[event].forEach(function (eventHandler) {\n                    handlers_1.push(eventHandler);\n                });\n                handlers_1.forEach(function (eventHandler) {\n                    eventHandler.apply(context, data$$1);\n                });\n            }\n        });\n        return self;\n    };\n    SwiperClass.prototype.useModulesParams = function (instanceParams) {\n        var instance = this;\n        if (!instance.modules)\n            return;\n        Object.keys(instance.modules).forEach(function (moduleName) {\n            var module = instance.modules[moduleName];\n            // Extend params\n            if (module.params) {\n                Utils.extend(instanceParams, module.params);\n            }\n        });\n    };\n    SwiperClass.prototype.useModules = function (modulesParams) {\n        if (modulesParams === void 0) { modulesParams = {}; }\n        var instance = this;\n        if (!instance.modules)\n            return;\n        Object.keys(instance.modules).forEach(function (moduleName) {\n            var module = instance.modules[moduleName];\n            var moduleParams = modulesParams[moduleName] || {};\n            // Extend instance methods and props\n            if (module.instance) {\n                Object.keys(module.instance).forEach(function (modulePropName) {\n                    var moduleProp = module.instance[modulePropName];\n                    if (typeof moduleProp === 'function') {\n                        instance[modulePropName] = moduleProp.bind(instance);\n                    }\n                    else {\n                        instance[modulePropName] = moduleProp;\n                    }\n                });\n            }\n            // Add event listeners\n            if (module.on && instance.on) {\n                Object.keys(module.on).forEach(function (moduleEventName) {\n                    instance.on(moduleEventName, module.on[moduleEventName]);\n                });\n            }\n            // Module create callback\n            if (module.create) {\n                module.create.bind(instance)(moduleParams);\n            }\n        });\n    };\n    Object.defineProperty(SwiperClass, \"components\", {\n        set: function (components) {\n            var Class = this;\n            if (!Class.use)\n                return;\n            Class.use(components);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SwiperClass.installModule = function (module) {\n        var params = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            params[_i - 1] = arguments[_i];\n        }\n        var Class = this;\n        if (!Class.prototype.modules)\n            Class.prototype.modules = {};\n        var name = module.name || (Object.keys(Class.prototype.modules).length + \"_\" + Utils.now());\n        Class.prototype.modules[name] = module;\n        // Prototype\n        if (module.proto) {\n            Object.keys(module.proto).forEach(function (key) {\n                Class.prototype[key] = module.proto[key];\n            });\n        }\n        // Class\n        if (module.static) {\n            Object.keys(module.static).forEach(function (key) {\n                Class[key] = module.static[key];\n            });\n        }\n        // Callback\n        if (module.install) {\n            module.install.apply(Class, params);\n        }\n        return Class;\n    };\n    SwiperClass.use = function (module) {\n        var params = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            params[_i - 1] = arguments[_i];\n        }\n        var Class = this;\n        if (Array.isArray(module)) {\n            module.forEach(function (m) { return Class.installModule(m); });\n            return Class;\n        }\n        return Class.installModule.apply(Class, [module].concat(params));\n    };\n    return SwiperClass;\n}());\nfunction updateSize() {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n        width = swiper.params.width;\n    }\n    else {\n        width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n        height = swiper.params.height;\n    }\n    else {\n        height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n        return;\n    }\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n    Utils.extend(swiper, {\n        width: width,\n        height: height,\n        size: swiper.isHorizontal() ? width : height,\n    });\n}\nfunction updateSlides() {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl, swiperSize = swiper.size, rtl = swiper.rtlTranslate, wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n        offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n        offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index$$1 = 0;\n    if (typeof swiperSize === 'undefined') {\n        return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n        spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n    swiper.virtualSize = -spaceBetween;\n    // reset margins\n    if (rtl)\n        slides.css({ marginLeft: '', marginTop: '' });\n    else\n        slides.css({ marginRight: '', marginBottom: '' });\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n        if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n            slidesNumberEvenToRows = slidesLength;\n        }\n        else {\n            slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n        }\n        if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n            slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n        }\n    }\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n    for (var i = 0; i < slidesLength; i += 1) {\n        slideSize = 0;\n        var slide_1 = slides.eq(i);\n        if (params.slidesPerColumn > 1) {\n            // Set slides order\n            var newSlideOrderIndex = void 0;\n            var column = void 0;\n            var row = void 0;\n            if (params.slidesPerColumnFill === 'column') {\n                column = Math.floor(i / slidesPerColumn);\n                row = i - (column * slidesPerColumn);\n                if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n                    row += 1;\n                    if (row >= slidesPerColumn) {\n                        row = 0;\n                        column += 1;\n                    }\n                }\n                newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n                slide_1\n                    .css({\n                    '-webkit-box-ordinal-group': newSlideOrderIndex,\n                    '-moz-box-ordinal-group': newSlideOrderIndex,\n                    '-ms-flex-order': newSlideOrderIndex,\n                    '-webkit-order': newSlideOrderIndex,\n                    order: newSlideOrderIndex,\n                });\n            }\n            else {\n                row = Math.floor(i / slidesPerRow);\n                column = i - (row * slidesPerRow);\n            }\n            slide_1\n                .css(\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left'), (row !== 0 && params.spaceBetween) && (params.spaceBetween + \"px\"))\n                .attr('data-swiper-column', column)\n                .attr('data-swiper-row', row);\n        }\n        if (slide_1.css('display') === 'none')\n            continue; // eslint-disable-line\n        if (params.slidesPerView === 'auto') {\n            var slideStyles = win.getComputedStyle(slide_1[0], null);\n            var currentTransform = slide_1[0].style.transform;\n            var currentWebKitTransform = slide_1[0].style.webkitTransform;\n            if (currentTransform) {\n                slide_1[0].style.transform = 'none';\n            }\n            if (currentWebKitTransform) {\n                slide_1[0].style.webkitTransform = 'none';\n            }\n            if (params.roundLengths) {\n                slideSize = swiper.isHorizontal()\n                    ? slide_1.outerWidth(true)\n                    : slide_1.outerHeight(true);\n            }\n            else {\n                // eslint-disable-next-line\n                if (swiper.isHorizontal()) {\n                    var width = parseFloat(slideStyles.getPropertyValue('width'));\n                    var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n                    var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n                    var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n                    var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n                    var boxSizing = slideStyles.getPropertyValue('box-sizing');\n                    if (boxSizing && boxSizing === 'border-box') {\n                        slideSize = width + marginLeft + marginRight;\n                    }\n                    else {\n                        slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n                    }\n                }\n                else {\n                    var height = parseFloat(slideStyles.getPropertyValue('height'));\n                    var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n                    var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n                    var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n                    var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n                    var boxSizing = slideStyles.getPropertyValue('box-sizing');\n                    if (boxSizing && boxSizing === 'border-box') {\n                        slideSize = height + marginTop + marginBottom;\n                    }\n                    else {\n                        slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n                    }\n                }\n            }\n            if (currentTransform) {\n                slide_1[0].style.transform = currentTransform;\n            }\n            if (currentWebKitTransform) {\n                slide_1[0].style.webkitTransform = currentWebKitTransform;\n            }\n            if (params.roundLengths)\n                slideSize = Math.floor(slideSize);\n        }\n        else {\n            slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n            if (params.roundLengths)\n                slideSize = Math.floor(slideSize);\n            if (slides[i]) {\n                if (swiper.isHorizontal()) {\n                    slides[i].style.width = slideSize + \"px\";\n                }\n                else {\n                    slides[i].style.height = slideSize + \"px\";\n                }\n            }\n        }\n        if (slides[i]) {\n            slides[i].swiperSlideSize = slideSize;\n        }\n        slidesSizesGrid.push(slideSize);\n        if (params.centeredSlides) {\n            slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n            if (prevSlideSize === 0 && i !== 0)\n                slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n            if (i === 0)\n                slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n            if (Math.abs(slidePosition) < 1 / 1000)\n                slidePosition = 0;\n            if (params.roundLengths)\n                slidePosition = Math.floor(slidePosition);\n            if ((index$$1) % params.slidesPerGroup === 0)\n                snapGrid.push(slidePosition);\n            slidesGrid.push(slidePosition);\n        }\n        else {\n            if (params.roundLengths)\n                slidePosition = Math.floor(slidePosition);\n            if ((index$$1) % params.slidesPerGroup === 0)\n                snapGrid.push(slidePosition);\n            slidesGrid.push(slidePosition);\n            slidePosition = slidePosition + slideSize + spaceBetween;\n        }\n        swiper.virtualSize += slideSize + spaceBetween;\n        prevSlideSize = slideSize;\n        index$$1 += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n        $wrapperEl.css({ width: swiper.virtualSize + params.spaceBetween + \"px\" });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n        if (swiper.isHorizontal())\n            $wrapperEl.css({ width: swiper.virtualSize + params.spaceBetween + \"px\" });\n        else\n            $wrapperEl.css({ height: swiper.virtualSize + params.spaceBetween + \"px\" });\n    }\n    if (params.slidesPerColumn > 1) {\n        swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n        swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n        if (swiper.isHorizontal())\n            $wrapperEl.css({ width: swiper.virtualSize + params.spaceBetween + \"px\" });\n        else\n            $wrapperEl.css({ height: swiper.virtualSize + params.spaceBetween + \"px\" });\n        if (params.centeredSlides) {\n            newSlidesGrid = [];\n            for (var i = 0; i < snapGrid.length; i += 1) {\n                var slidesGridItem = snapGrid[i];\n                if (params.roundLengths)\n                    slidesGridItem = Math.floor(slidesGridItem);\n                if (snapGrid[i] < swiper.virtualSize + snapGrid[0])\n                    newSlidesGrid.push(slidesGridItem);\n            }\n            snapGrid = newSlidesGrid;\n        }\n    }\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i = 0; i < snapGrid.length; i += 1) {\n            var slidesGridItem = snapGrid[i];\n            if (params.roundLengths)\n                slidesGridItem = Math.floor(slidesGridItem);\n            if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n                newSlidesGrid.push(slidesGridItem);\n            }\n        }\n        snapGrid = newSlidesGrid;\n        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n            snapGrid.push(swiper.virtualSize - swiperSize);\n        }\n    }\n    if (snapGrid.length === 0)\n        snapGrid = [0];\n    if (params.spaceBetween !== 0) {\n        if (swiper.isHorizontal()) {\n            if (rtl)\n                slides.css({ marginLeft: spaceBetween + \"px\" });\n            else\n                slides.css({ marginRight: spaceBetween + \"px\" });\n        }\n        else\n            slides.css({ marginBottom: spaceBetween + \"px\" });\n    }\n    if (params.centerInsufficientSlides) {\n        var allSlidesSize_1 = 0;\n        slidesSizesGrid.forEach(function (slideSizeValue) {\n            allSlidesSize_1 += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n        });\n        allSlidesSize_1 -= params.spaceBetween;\n        if (allSlidesSize_1 < swiperSize) {\n            var allSlidesOffset_1 = (swiperSize - allSlidesSize_1) / 2;\n            snapGrid.forEach(function (snap, snapIndex) {\n                snapGrid[snapIndex] = snap - allSlidesOffset_1;\n            });\n            slidesGrid.forEach(function (snap, snapIndex) {\n                slidesGrid[snapIndex] = snap + allSlidesOffset_1;\n            });\n        }\n    }\n    Utils.extend(swiper, {\n        slides: slides,\n        snapGrid: snapGrid,\n        slidesGrid: slidesGrid,\n        slidesSizesGrid: slidesSizesGrid,\n    });\n    if (slidesLength !== previousSlidesLength) {\n        swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n        if (swiper.params.watchOverflow)\n            swiper.checkOverflow();\n        swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n        swiper.emit('slidesGridLengthChange');\n    }\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n        swiper.updateSlidesOffset();\n    }\n}\nfunction updateAutoHeight(speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n        swiper.setTransition(speed);\n    }\n    else if (speed === true) {\n        swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n            var index$$1 = swiper.activeIndex + i;\n            if (index$$1 > swiper.slides.length)\n                break;\n            activeSlides.push(swiper.slides.eq(index$$1)[0]);\n        }\n    }\n    else {\n        activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n        if (typeof activeSlides[i] !== 'undefined') {\n            var height = activeSlides[i].offsetHeight;\n            newHeight = height > newHeight ? height : newHeight;\n        }\n    }\n    // Update Height\n    if (newHeight)\n        swiper.$wrapperEl.css('height', newHeight + \"px\");\n}\nfunction updateSlidesOffset() {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n        slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n}\nfunction updateSlidesProgress(translate) {\n    if (translate === void 0) { translate = (this && this.translate) || 0; }\n    var swiper = this;\n    var params = swiper.params;\n    var slides = swiper.slides, rtl = swiper.rtlTranslate;\n    if (slides.length === 0)\n        return;\n    if (typeof slides[0].swiperSlideOffset === 'undefined')\n        swiper.updateSlidesOffset();\n    var offsetCenter = -translate;\n    if (rtl)\n        offsetCenter = translate;\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n    for (var i = 0; i < slides.length; i += 1) {\n        var slide_2 = slides[i];\n        var slideProgress = ((offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide_2.swiperSlideOffset) / (slide_2.swiperSlideSize + params.spaceBetween);\n        if (params.watchSlidesVisibility) {\n            var slideBefore = -(offsetCenter - slide_2.swiperSlideOffset);\n            var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n            var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n            if (isVisible) {\n                swiper.visibleSlides.push(slide_2);\n                swiper.visibleSlidesIndexes.push(i);\n                slides.eq(i).addClass(params.slideVisibleClass);\n            }\n        }\n        slide_2.progress = rtl ? -slideProgress : slideProgress;\n    }\n    swiper.visibleSlides = $(swiper.visibleSlides);\n}\nfunction updateProgress(translate) {\n    if (translate === void 0) { translate = (this && this.translate) || 0; }\n    var swiper = this;\n    var params = swiper.params;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress, isBeginning = swiper.isBeginning, isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n        progress = 0;\n        isBeginning = true;\n        isEnd = true;\n    }\n    else {\n        progress = (translate - swiper.minTranslate()) / (translatesDiff);\n        isBeginning = progress <= 0;\n        isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n        progress: progress,\n        isBeginning: isBeginning,\n        isEnd: isEnd,\n    });\n    if (params.watchSlidesProgress || params.watchSlidesVisibility)\n        swiper.updateSlidesProgress(translate);\n    if (isBeginning && !wasBeginning) {\n        swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n        swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n        swiper.emit('fromEdge');\n    }\n    swiper.emit('progress', progress);\n}\nfunction updateSlidesClasses() {\n    var swiper = this;\n    var slides = swiper.slides, params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex, realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    slides.removeClass(params.slideActiveClass + \" \" + params.slideNextClass + \" \" + params.slidePrevClass + \" \" + params.slideDuplicateActiveClass + \" \" + params.slideDuplicateNextClass + \" \" + params.slideDuplicatePrevClass);\n    var activeSlide;\n    if (isVirtual) {\n        activeSlide = swiper.$wrapperEl.find(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\");\n    }\n    else {\n        activeSlide = slides.eq(activeIndex);\n    }\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n    if (params.loop) {\n        // Duplicate to all looped slides\n        if (activeSlide.hasClass(params.slideDuplicateClass)) {\n            $wrapperEl\n                .children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\")\n                .addClass(params.slideDuplicateActiveClass);\n        }\n        else {\n            $wrapperEl\n                .children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\")\n                .addClass(params.slideDuplicateActiveClass);\n        }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll(\".\" + params.slideClass).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n        nextSlide = slides.eq(0);\n        nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll(\".\" + params.slideClass).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n        prevSlide = slides.eq(-1);\n        prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n        // Duplicate to all looped slides\n        if (nextSlide.hasClass(params.slideDuplicateClass)) {\n            $wrapperEl\n                .children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\")\n                .addClass(params.slideDuplicateNextClass);\n        }\n        else {\n            $wrapperEl\n                .children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\")\n                .addClass(params.slideDuplicateNextClass);\n        }\n        if (prevSlide.hasClass(params.slideDuplicateClass)) {\n            $wrapperEl\n                .children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\")\n                .addClass(params.slideDuplicatePrevClass);\n        }\n        else {\n            $wrapperEl\n                .children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\")\n                .addClass(params.slideDuplicatePrevClass);\n        }\n    }\n}\nfunction updateActiveIndex(newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid, snapGrid = swiper.snapGrid, params = swiper.params, previousIndex = swiper.activeIndex, previousRealIndex = swiper.realIndex, previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n        for (var i = 0; i < slidesGrid.length; i += 1) {\n            if (typeof slidesGrid[i + 1] !== 'undefined') {\n                if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n                    activeIndex = i;\n                }\n                else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n                    activeIndex = i + 1;\n                }\n            }\n            else if (translate >= slidesGrid[i]) {\n                activeIndex = i;\n            }\n        }\n        // Normalize slideIndex\n        if (params.normalizeSlideIndex) {\n            if (activeIndex < 0 || typeof activeIndex === 'undefined')\n                activeIndex = 0;\n        }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n        snapIndex = snapGrid.indexOf(translate);\n    }\n    else {\n        snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length)\n        snapIndex = snapGrid.length - 1;\n    if (activeIndex === previousIndex) {\n        if (snapIndex !== previousSnapIndex) {\n            swiper.snapIndex = snapIndex;\n            swiper.emit('snapIndexChange');\n        }\n        return;\n    }\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n    Utils.extend(swiper, {\n        snapIndex: snapIndex,\n        realIndex: realIndex,\n        previousIndex: previousIndex,\n        activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n        swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n}\nfunction updateClickedSlide(e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest(\".\" + params.slideClass)[0];\n    var slideFound = false;\n    if (slide) {\n        for (var i = 0; i < swiper.slides.length; i += 1) {\n            if (swiper.slides[i] === slide)\n                slideFound = true;\n        }\n    }\n    if (slide && slideFound) {\n        swiper.clickedSlide = slide;\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n            swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n        }\n        else {\n            swiper.clickedIndex = $(slide).index();\n        }\n    }\n    else {\n        swiper.clickedSlide = undefined;\n        swiper.clickedIndex = undefined;\n        return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n        swiper.slideToClickedSlide();\n    }\n}\nvar update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n};\nfunction getTranslate(axis) {\n    if (axis === void 0) { axis = this.isHorizontal() ? 'x' : 'y'; }\n    var swiper = this;\n    var params = swiper.params, rtl = swiper.rtlTranslate, translate = swiper.translate, $wrapperEl = swiper.$wrapperEl;\n    if (params.virtualTranslate) {\n        return rtl ? -translate : translate;\n    }\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl)\n        currentTranslate = -currentTranslate;\n    return currentTranslate || 0;\n}\nfunction setTranslate(translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate, params = swiper.params, $wrapperEl = swiper.$wrapperEl, progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    if (swiper.isHorizontal()) {\n        x = rtl ? -translate : translate;\n    }\n    else {\n        y = translate;\n    }\n    if (params.roundLengths) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n    }\n    if (!params.virtualTranslate) {\n        if (Support.transforms3d)\n            $wrapperEl.transform(\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\");\n        else\n            $wrapperEl.transform(\"translate(\" + x + \"px, \" + y + \"px)\");\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n        newProgress = 0;\n    }\n    else {\n        newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n        swiper.updateProgress(translate);\n    }\n    swiper.emit('setTranslate', swiper.translate, byController);\n}\nfunction minTranslate() {\n    return (-this.snapGrid[0]);\n}\nfunction maxTranslate() {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n}\nvar translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n};\nfunction setTransition(duration, byController) {\n    var swiper = this;\n    swiper.$wrapperEl.transition(duration);\n    swiper.emit('setTransition', duration, byController);\n}\nfunction transitionStart(runCallbacks, direction) {\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var activeIndex = swiper.activeIndex, params = swiper.params, previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n        swiper.updateAutoHeight();\n    }\n    var dir = direction;\n    if (!dir) {\n        if (activeIndex > previousIndex)\n            dir = 'next';\n        else if (activeIndex < previousIndex)\n            dir = 'prev';\n        else\n            dir = 'reset';\n    }\n    swiper.emit('transitionStart');\n    if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === 'reset') {\n            swiper.emit('slideResetTransitionStart');\n            return;\n        }\n        swiper.emit('slideChangeTransitionStart');\n        if (dir === 'next') {\n            swiper.emit('slideNextTransitionStart');\n        }\n        else {\n            swiper.emit('slidePrevTransitionStart');\n        }\n    }\n}\nfunction transitionEnd$1(runCallbacks, direction) {\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var activeIndex = swiper.activeIndex, previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n    var dir = direction;\n    if (!dir) {\n        if (activeIndex > previousIndex)\n            dir = 'next';\n        else if (activeIndex < previousIndex)\n            dir = 'prev';\n        else\n            dir = 'reset';\n    }\n    swiper.emit('transitionEnd');\n    if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === 'reset') {\n            swiper.emit('slideResetTransitionEnd');\n            return;\n        }\n        swiper.emit('slideChangeTransitionEnd');\n        if (dir === 'next') {\n            swiper.emit('slideNextTransitionEnd');\n        }\n        else {\n            swiper.emit('slidePrevTransitionEnd');\n        }\n    }\n}\nvar transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n};\nfunction slideTo(index$$1, speed, runCallbacks, internal) {\n    if (index$$1 === void 0) { index$$1 = 0; }\n    if (speed === void 0) { speed = this.params.speed; }\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var slideIndex = index$$1;\n    if (slideIndex < 0)\n        slideIndex = 0;\n    var params = swiper.params, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, previousIndex = swiper.previousIndex, activeIndex = swiper.activeIndex, rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n        return false;\n    }\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length)\n        snapIndex = snapGrid.length - 1;\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n        swiper.emit('beforeSlideChangeStart');\n    }\n    var translate = -snapGrid[snapIndex];\n    // Update progress\n    swiper.updateProgress(translate);\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n        for (var i = 0; i < slidesGrid.length; i += 1) {\n            if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n                slideIndex = i;\n            }\n        }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n        if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n            return false;\n        }\n        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n            if ((activeIndex || 0) !== slideIndex)\n                return false;\n        }\n    }\n    var direction;\n    if (slideIndex > activeIndex)\n        direction = 'next';\n    else if (slideIndex < activeIndex)\n        direction = 'prev';\n    else\n        direction = 'reset';\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n        swiper.updateActiveIndex(slideIndex);\n        // Update Height\n        if (params.autoHeight) {\n            swiper.updateAutoHeight();\n        }\n        swiper.updateSlidesClasses();\n        if (params.effect !== 'slide') {\n            swiper.setTranslate(translate);\n        }\n        if (direction !== 'reset') {\n            swiper.transitionStart(runCallbacks, direction);\n            swiper.transitionEnd(runCallbacks, direction);\n        }\n        return false;\n    }\n    if (speed === 0 || !Support.transition) {\n        swiper.setTransition(0);\n        swiper.setTranslate(translate);\n        swiper.updateActiveIndex(slideIndex);\n        swiper.updateSlidesClasses();\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n    }\n    else {\n        swiper.setTransition(speed);\n        swiper.setTranslate(translate);\n        swiper.updateActiveIndex(slideIndex);\n        swiper.updateSlidesClasses();\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.transitionStart(runCallbacks, direction);\n        if (!swiper.animating) {\n            swiper.animating = true;\n            if (!swiper.onSlideToWrapperTransitionEnd) {\n                swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n                    if (!swiper || swiper.destroyed)\n                        return;\n                    if (e.target !== this)\n                        return;\n                    swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n                    swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n                    swiper.onSlideToWrapperTransitionEnd = null;\n                    delete swiper.onSlideToWrapperTransitionEnd;\n                    swiper.transitionEnd(runCallbacks, direction);\n                };\n            }\n            swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n        }\n    }\n    return true;\n}\nfunction slideToLoop(index$$1, speed, runCallbacks, internal) {\n    if (index$$1 === void 0) { index$$1 = 0; }\n    if (speed === void 0) { speed = this.params.speed; }\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var newIndex = index$$1;\n    if (swiper.params.loop) {\n        newIndex += swiper.loopedSlides;\n    }\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext(speed, runCallbacks, internal) {\n    if (speed === void 0) { speed = this.params.speed; }\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var params = swiper.params, animating = swiper.animating;\n    if (params.loop) {\n        if (animating)\n            return false;\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev(speed, runCallbacks, internal) {\n    if (speed === void 0) { speed = this.params.speed; }\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var params = swiper.params, animating = swiper.animating, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, rtlTranslate = swiper.rtlTranslate;\n    if (params.loop) {\n        if (animating)\n            return false;\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n        if (val < 0)\n            return -Math.floor(Math.abs(val));\n        return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n        prevIndex = slidesGrid.indexOf(prevSnap);\n        if (prevIndex < 0)\n            prevIndex = swiper.activeIndex - 1;\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset(speed, runCallbacks, internal) {\n    if (speed === void 0) { speed = this.params.speed; }\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest(speed, runCallbacks, internal) {\n    if (speed === void 0) { speed = this.params.speed; }\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var index$$1 = swiper.activeIndex;\n    var snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n    if (snapIndex < swiper.snapGrid.length - 1) {\n        var translate_1 = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n        var currentSnap = swiper.snapGrid[snapIndex];\n        var nextSnap = swiper.snapGrid[snapIndex + 1];\n        if ((translate_1 - currentSnap) > (nextSnap - currentSnap) / 2) {\n            index$$1 = swiper.params.slidesPerGroup;\n        }\n    }\n    return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\nfunction slideToClickedSlide() {\n    var swiper = this;\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl;\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n        if (swiper.animating)\n            return;\n        realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n        if (params.centeredSlides) {\n            if ((slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n                || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))) {\n                swiper.loopFix();\n                slideToIndex = $wrapperEl\n                    .children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\")\n                    .eq(0)\n                    .index();\n                Utils.nextTick(function () {\n                    swiper.slideTo(slideToIndex);\n                });\n            }\n            else {\n                swiper.slideTo(slideToIndex);\n            }\n        }\n        else if (slideToIndex > swiper.slides.length - slidesPerView) {\n            swiper.loopFix();\n            slideToIndex = $wrapperEl\n                .children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\")\n                .eq(0)\n                .index();\n            Utils.nextTick(function () {\n                swiper.slideTo(slideToIndex);\n            });\n        }\n        else {\n            swiper.slideTo(slideToIndex);\n        }\n    }\n    else {\n        swiper.slideTo(slideToIndex);\n    }\n}\nvar slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n};\nfunction loopCreate() {\n    var swiper = this;\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass).remove();\n    var slides = $wrapperEl.children(\".\" + params.slideClass);\n    if (params.loopFillGroupWithBlank) {\n        var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n        if (blankSlidesNum !== params.slidesPerGroup) {\n            for (var i = 0; i < blankSlidesNum; i += 1) {\n                var blankNode = $(doc.createElement('div')).addClass(params.slideClass + \" \" + params.slideBlankClass);\n                $wrapperEl.append(blankNode);\n            }\n            slides = $wrapperEl.children(\".\" + params.slideClass);\n        }\n    }\n    if (params.slidesPerView === 'auto' && !params.loopedSlides)\n        params.loopedSlides = slides.length;\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n        swiper.loopedSlides = slides.length;\n    }\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index$$1, el) {\n        var slide = $(el);\n        if (index$$1 < swiper.loopedSlides)\n            appendSlides.push(el);\n        if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides)\n            prependSlides.push(el);\n        slide.attr('data-swiper-slide-index', index$$1);\n    });\n    for (var i = 0; i < appendSlides.length; i += 1) {\n        $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i = prependSlides.length - 1; i >= 0; i -= 1) {\n        $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n}\nfunction loopFix() {\n    var swiper = this;\n    var params = swiper.params, activeIndex = swiper.activeIndex, slides = swiper.slides, loopedSlides = swiper.loopedSlides, allowSlidePrev = swiper.allowSlidePrev, allowSlideNext = swiper.allowSlideNext, snapGrid = swiper.snapGrid, rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n        newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n        newIndex += loopedSlides;\n        var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n        if (slideChanged && diff !== 0) {\n            swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n        }\n    }\n    else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n        // Fix For Positive Oversliding\n        newIndex = -slides.length + activeIndex + loopedSlides;\n        newIndex += loopedSlides;\n        var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n        if (slideChanged && diff !== 0) {\n            swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n        }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n}\nfunction loopDestroy() {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl, params = swiper.params, slides = swiper.slides;\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \",.\" + params.slideClass + \".\" + params.slideBlankClass).remove();\n    slides.removeAttr('data-swiper-slide-index');\n}\nvar loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n};\nfunction setGrabCursor(moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked))\n        return;\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n}\nfunction unsetGrabCursor() {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked))\n        return;\n    swiper.el.style.cursor = '';\n}\nvar grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n};\nfunction appendSlide(slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl, params = swiper.params;\n    if (params.loop) {\n        swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n            if (slides[i])\n                $wrapperEl.append(slides[i]);\n        }\n    }\n    else {\n        $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n        swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n        swiper.update();\n    }\n}\nfunction prependSlide(slides) {\n    var swiper = this;\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex;\n    if (params.loop) {\n        swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n            if (slides[i])\n                $wrapperEl.prepend(slides[i]);\n        }\n        newActiveIndex = activeIndex + slides.length;\n    }\n    else {\n        $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n        swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n        swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n}\nfunction addSlide(index$$1, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl, params = swiper.params, activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n    }\n    var baseLength = swiper.slides.length;\n    if (index$$1 <= 0) {\n        swiper.prependSlide(slides);\n        return;\n    }\n    if (index$$1 >= baseLength) {\n        swiper.appendSlide(slides);\n        return;\n    }\n    var newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index$$1; i -= 1) {\n        var currentSlide = swiper.slides.eq(i);\n        currentSlide.remove();\n        slidesBuffer.unshift(currentSlide);\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n            if (slides[i])\n                $wrapperEl.append(slides[i]);\n        }\n        newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    }\n    else {\n        $wrapperEl.append(slides);\n    }\n    for (var i = 0; i < slidesBuffer.length; i += 1) {\n        $wrapperEl.append(slidesBuffer[i]);\n    }\n    if (params.loop) {\n        swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n        swiper.update();\n    }\n    if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    }\n    else {\n        swiper.slideTo(newActiveIndex, 0, false);\n    }\n}\nfunction removeSlide(slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n        for (var i = 0; i < slidesIndexes.length; i += 1) {\n            indexToRemove = slidesIndexes[i];\n            if (swiper.slides[indexToRemove])\n                swiper.slides.eq(indexToRemove).remove();\n            if (indexToRemove < newActiveIndex)\n                newActiveIndex -= 1;\n        }\n        newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n    else {\n        indexToRemove = slidesIndexes;\n        if (swiper.slides[indexToRemove])\n            swiper.slides.eq(indexToRemove).remove();\n        if (indexToRemove < newActiveIndex)\n            newActiveIndex -= 1;\n        newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n    if (params.loop) {\n        swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n        swiper.update();\n    }\n    if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    }\n    else {\n        swiper.slideTo(newActiveIndex, 0, false);\n    }\n}\nfunction removeAllSlides() {\n    var swiper = this;\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n        slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n}\nvar manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n};\nvar Device = (function Device() {\n    var ua = win.navigator.userAgent;\n    var device = {\n        ios: false,\n        android: false,\n        androidChrome: false,\n        desktop: false,\n        windows: false,\n        iphone: false,\n        ipod: false,\n        ipad: false,\n        cordova: win.cordova || win.phonegap,\n        phonegap: win.cordova || win.phonegap,\n    };\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n    // Windows\n    if (windows) {\n        device.os = 'windows';\n        device.osVersion = windows[2];\n        device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n        device.os = 'android';\n        device.osVersion = android[2];\n        device.android = true;\n        device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n        device.os = 'ios';\n        device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n        device.osVersion = iphone[2].replace(/_/g, '.');\n        device.iphone = true;\n    }\n    if (ipad) {\n        device.osVersion = ipad[2].replace(/_/g, '.');\n        device.ipad = true;\n    }\n    if (ipod) {\n        device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n        if (device.osVersion.split('.')[0] === '10') {\n            device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n        }\n    }\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n        var osVersionArr = device.osVersion.split('.');\n        var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n        device.minimalUi = !device.webView\n            && (ipod || iphone)\n            && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n            && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n    // Export object\n    return device;\n}());\nfunction onTouchStart(event) {\n    var swiper = this;\n    var data$$1 = swiper.touchEventsData;\n    var params = swiper.params, touches = swiper.touches;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n        return;\n    }\n    var e = event;\n    if (e.originalEvent)\n        e = e.originalEvent;\n    data$$1.isTouchEvent = e.type === 'touchstart';\n    if (!data$$1.isTouchEvent && 'which' in e && e.which === 3)\n        return;\n    if (!data$$1.isTouchEvent && 'button' in e && e.button > 0)\n        return;\n    if (data$$1.isTouched && data$$1.isMoved)\n        return;\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : \".\" + params.noSwipingClass)[0]) {\n        swiper.allowClick = true;\n        return;\n    }\n    if (params.swipeHandler) {\n        if (!$(e).closest(params.swipeHandler)[0])\n            return;\n    }\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (edgeSwipeDetection\n        && ((startX <= edgeSwipeThreshold)\n            || (startX >= win.screen.width - edgeSwipeThreshold))) {\n        return;\n    }\n    Utils.extend(data$$1, {\n        isTouched: true,\n        isMoved: false,\n        allowTouchCallbacks: true,\n        isScrolling: undefined,\n        startMoving: undefined,\n    });\n    touches.startX = startX;\n    touches.startY = startY;\n    data$$1.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0)\n        data$$1.allowThresholdMove = false;\n    if (e.type !== 'touchstart') {\n        var preventDefault = true;\n        if ($(e.target).is(data$$1.formElements))\n            preventDefault = false;\n        if (doc.activeElement\n            && $(doc.activeElement).is(data$$1.formElements)\n            && doc.activeElement !== e.target) {\n            doc.activeElement.blur();\n        }\n        var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n        if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n            e.preventDefault();\n        }\n    }\n    swiper.emit('touchStart', e);\n}\nfunction onTouchMove(event) {\n    var swiper = this;\n    var data$$1 = swiper.touchEventsData;\n    var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent)\n        e = e.originalEvent;\n    if (!data$$1.isTouched) {\n        if (data$$1.startMoving && data$$1.isScrolling) {\n            swiper.emit('touchMoveOpposite', e);\n        }\n        return;\n    }\n    if (data$$1.isTouchEvent && e.type === 'mousemove')\n        return;\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n        touches.startX = pageX;\n        touches.startY = pageY;\n        return;\n    }\n    if (!swiper.allowTouchMove) {\n        // isMoved = true;\n        swiper.allowClick = false;\n        if (data$$1.isTouched) {\n            Utils.extend(touches, {\n                startX: pageX,\n                startY: pageY,\n                currentX: pageX,\n                currentY: pageY,\n            });\n            data$$1.touchStartTime = Utils.now();\n        }\n        return;\n    }\n    if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n        if (swiper.isVertical()) {\n            // Vertical\n            if ((pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n                || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())) {\n                data$$1.isTouched = false;\n                data$$1.isMoved = false;\n                return;\n            }\n        }\n        else if ((pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n            || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())) {\n            return;\n        }\n    }\n    if (data$$1.isTouchEvent && doc.activeElement) {\n        if (e.target === doc.activeElement && $(e.target).is(data$$1.formElements)) {\n            data$$1.isMoved = true;\n            swiper.allowClick = false;\n            return;\n        }\n    }\n    if (data$$1.allowTouchCallbacks) {\n        swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1)\n        return;\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow(diffX, 2)) + (Math.pow(diffY, 2))) < swiper.params.threshold)\n        return;\n    if (typeof data$$1.isScrolling === 'undefined') {\n        var touchAngle = void 0;\n        if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n            data$$1.isScrolling = false;\n        }\n        else {\n            // eslint-disable-next-line\n            if ((diffX * diffX) + (diffY * diffY) >= 25) {\n                touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n                data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n            }\n        }\n    }\n    if (data$$1.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data$$1.startMoving === 'undefined') {\n        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n            data$$1.startMoving = true;\n        }\n    }\n    if (data$$1.isScrolling) {\n        data$$1.isTouched = false;\n        return;\n    }\n    if (!data$$1.startMoving) {\n        return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n        e.stopPropagation();\n    }\n    if (!data$$1.isMoved) {\n        if (params.loop) {\n            swiper.loopFix();\n        }\n        data$$1.startTranslate = swiper.getTranslate();\n        swiper.setTransition(0);\n        if (swiper.animating) {\n            swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n        }\n        data$$1.allowMomentumBounce = false;\n        // Grab Cursor\n        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n            swiper.setGrabCursor(true);\n        }\n        swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data$$1.isMoved = true;\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n    diff *= params.touchRatio;\n    if (rtl)\n        diff = -diff;\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data$$1.currentTranslate = diff + data$$1.startTranslate;\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n        resistanceRatio = 0;\n    }\n    if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n        disableParentSwiper = false;\n        if (params.resistance)\n            data$$1.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow((-swiper.minTranslate() + data$$1.startTranslate + diff), resistanceRatio));\n    }\n    else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n        disableParentSwiper = false;\n        if (params.resistance)\n            data$$1.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow((swiper.maxTranslate() - data$$1.startTranslate - diff), resistanceRatio));\n    }\n    if (disableParentSwiper) {\n        e.preventedByNestedSwiper = true;\n    }\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n        data$$1.currentTranslate = data$$1.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n        data$$1.currentTranslate = data$$1.startTranslate;\n    }\n    // Threshold\n    if (params.threshold > 0) {\n        if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n            if (!data$$1.allowThresholdMove) {\n                data$$1.allowThresholdMove = true;\n                touches.startX = touches.currentX;\n                touches.startY = touches.currentY;\n                data$$1.currentTranslate = data$$1.startTranslate;\n                touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n                return;\n            }\n        }\n        else {\n            data$$1.currentTranslate = data$$1.startTranslate;\n            return;\n        }\n    }\n    if (!params.followFinger)\n        return;\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n        // Velocity\n        if (data$$1.velocities.length === 0) {\n            data$$1.velocities.push({\n                position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n                time: data$$1.touchStartTime,\n            });\n        }\n        data$$1.velocities.push({\n            position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n            time: Utils.now(),\n        });\n    }\n    // Update progress\n    swiper.updateProgress(data$$1.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data$$1.currentTranslate);\n}\nfunction onTouchEnd(event) {\n    var swiper = this;\n    var data$$1 = swiper.touchEventsData;\n    var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate, $wrapperEl = swiper.$wrapperEl, slidesGrid = swiper.slidesGrid, snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent)\n        e = e.originalEvent;\n    if (data$$1.allowTouchCallbacks) {\n        swiper.emit('touchEnd', e);\n    }\n    data$$1.allowTouchCallbacks = false;\n    if (!data$$1.isTouched) {\n        if (data$$1.isMoved && params.grabCursor) {\n            swiper.setGrabCursor(false);\n        }\n        data$$1.isMoved = false;\n        data$$1.startMoving = false;\n        return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(false);\n    }\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data$$1.touchStartTime;\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n        swiper.updateClickedSlide(e);\n        swiper.emit('tap', e);\n        if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n            if (data$$1.clickTimeout)\n                clearTimeout(data$$1.clickTimeout);\n            data$$1.clickTimeout = Utils.nextTick(function () {\n                if (!swiper || swiper.destroyed)\n                    return;\n                swiper.emit('click', e);\n            }, 300);\n        }\n        if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n            if (data$$1.clickTimeout)\n                clearTimeout(data$$1.clickTimeout);\n            swiper.emit('doubleTap', e);\n        }\n    }\n    data$$1.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n        if (!swiper.destroyed)\n            swiper.allowClick = true;\n    });\n    if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        data$$1.startMoving = false;\n        return;\n    }\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    var currentPos;\n    if (params.followFinger) {\n        currentPos = rtl ? swiper.translate : -swiper.translate;\n    }\n    else {\n        currentPos = -data$$1.currentTranslate;\n    }\n    if (params.freeMode) {\n        if (currentPos < -swiper.minTranslate()) {\n            swiper.slideTo(swiper.activeIndex);\n            return;\n        }\n        if (currentPos > -swiper.maxTranslate()) {\n            if (swiper.slides.length < snapGrid.length) {\n                swiper.slideTo(snapGrid.length - 1);\n            }\n            else {\n                swiper.slideTo(swiper.slides.length - 1);\n            }\n            return;\n        }\n        if (params.freeModeMomentum) {\n            if (data$$1.velocities.length > 1) {\n                var lastMoveEvent = data$$1.velocities.pop();\n                var velocityEvent = data$$1.velocities.pop();\n                var distance = lastMoveEvent.position - velocityEvent.position;\n                var time = lastMoveEvent.time - velocityEvent.time;\n                swiper.velocity = distance / time;\n                swiper.velocity /= 2;\n                if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n                    swiper.velocity = 0;\n                }\n                // this implies that the user stopped moving a finger then released.\n                // There would be no events with distance zero, so the last event is stale.\n                if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n                    swiper.velocity = 0;\n                }\n            }\n            else {\n                swiper.velocity = 0;\n            }\n            swiper.velocity *= params.freeModeMomentumVelocityRatio;\n            data$$1.velocities.length = 0;\n            var momentumDuration = 1000 * params.freeModeMomentumRatio;\n            var momentumDistance = swiper.velocity * momentumDuration;\n            var newPosition = swiper.translate + momentumDistance;\n            if (rtl)\n                newPosition = -newPosition;\n            var doBounce = false;\n            var afterBouncePosition_1;\n            var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n            var needsLoopFix = void 0;\n            if (newPosition < swiper.maxTranslate()) {\n                if (params.freeModeMomentumBounce) {\n                    if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n                        newPosition = swiper.maxTranslate() - bounceAmount;\n                    }\n                    afterBouncePosition_1 = swiper.maxTranslate();\n                    doBounce = true;\n                    data$$1.allowMomentumBounce = true;\n                }\n                else {\n                    newPosition = swiper.maxTranslate();\n                }\n                if (params.loop && params.centeredSlides)\n                    needsLoopFix = true;\n            }\n            else if (newPosition > swiper.minTranslate()) {\n                if (params.freeModeMomentumBounce) {\n                    if (newPosition - swiper.minTranslate() > bounceAmount) {\n                        newPosition = swiper.minTranslate() + bounceAmount;\n                    }\n                    afterBouncePosition_1 = swiper.minTranslate();\n                    doBounce = true;\n                    data$$1.allowMomentumBounce = true;\n                }\n                else {\n                    newPosition = swiper.minTranslate();\n                }\n                if (params.loop && params.centeredSlides)\n                    needsLoopFix = true;\n            }\n            else if (params.freeModeSticky) {\n                var nextSlide = void 0;\n                for (var j = 0; j < snapGrid.length; j += 1) {\n                    if (snapGrid[j] > -newPosition) {\n                        nextSlide = j;\n                        break;\n                    }\n                }\n                if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n                    newPosition = snapGrid[nextSlide];\n                }\n                else {\n                    newPosition = snapGrid[nextSlide - 1];\n                }\n                newPosition = -newPosition;\n            }\n            if (needsLoopFix) {\n                swiper.once('transitionEnd', function () {\n                    swiper.loopFix();\n                });\n            }\n            // Fix duration\n            if (swiper.velocity !== 0) {\n                if (rtl) {\n                    momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n                }\n                else {\n                    momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n                }\n            }\n            else if (params.freeModeSticky) {\n                swiper.slideToClosest();\n                return;\n            }\n            if (params.freeModeMomentumBounce && doBounce) {\n                swiper.updateProgress(afterBouncePosition_1);\n                swiper.setTransition(momentumDuration);\n                swiper.setTranslate(newPosition);\n                swiper.transitionStart(true, swiper.swipeDirection);\n                swiper.animating = true;\n                $wrapperEl.transitionEnd(function () {\n                    if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce)\n                        return;\n                    swiper.emit('momentumBounce');\n                    swiper.setTransition(params.speed);\n                    swiper.setTranslate(afterBouncePosition_1);\n                    $wrapperEl.transitionEnd(function () {\n                        if (!swiper || swiper.destroyed)\n                            return;\n                        swiper.transitionEnd();\n                    });\n                });\n            }\n            else if (swiper.velocity) {\n                swiper.updateProgress(newPosition);\n                swiper.setTransition(momentumDuration);\n                swiper.setTranslate(newPosition);\n                swiper.transitionStart(true, swiper.swipeDirection);\n                if (!swiper.animating) {\n                    swiper.animating = true;\n                    $wrapperEl.transitionEnd(function () {\n                        if (!swiper || swiper.destroyed)\n                            return;\n                        swiper.transitionEnd();\n                    });\n                }\n            }\n            else {\n                swiper.updateProgress(newPosition);\n            }\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        }\n        else if (params.freeModeSticky) {\n            swiper.slideToClosest();\n            return;\n        }\n        if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n            swiper.updateProgress();\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        }\n        return;\n    }\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n        if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n            if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n                stopIndex = i;\n                groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n            }\n        }\n        else if (currentPos >= slidesGrid[i]) {\n            stopIndex = i;\n            groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n        }\n    }\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n    if (timeDiff > params.longSwipesMs) {\n        // Long touches\n        if (!params.longSwipes) {\n            swiper.slideTo(swiper.activeIndex);\n            return;\n        }\n        if (swiper.swipeDirection === 'next') {\n            if (ratio >= params.longSwipesRatio)\n                swiper.slideTo(stopIndex + params.slidesPerGroup);\n            else\n                swiper.slideTo(stopIndex);\n        }\n        if (swiper.swipeDirection === 'prev') {\n            if (ratio > (1 - params.longSwipesRatio))\n                swiper.slideTo(stopIndex + params.slidesPerGroup);\n            else\n                swiper.slideTo(stopIndex);\n        }\n    }\n    else {\n        // Short swipes\n        if (!params.shortSwipes) {\n            swiper.slideTo(swiper.activeIndex);\n            return;\n        }\n        if (swiper.swipeDirection === 'next') {\n            swiper.slideTo(stopIndex + params.slidesPerGroup);\n        }\n        if (swiper.swipeDirection === 'prev') {\n            swiper.slideTo(stopIndex);\n        }\n    }\n}\nfunction onResize() {\n    var swiper = this;\n    var params = swiper.params, el = swiper.el;\n    if (el && el.offsetWidth === 0)\n        return;\n    // Breakpoints\n    if (params.breakpoints) {\n        swiper.setBreakpoint();\n    }\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext, allowSlidePrev = swiper.allowSlidePrev, snapGrid = swiper.snapGrid;\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n    swiper.updateSize();\n    swiper.updateSlides();\n    if (params.freeMode) {\n        var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (params.autoHeight) {\n            swiper.updateAutoHeight();\n        }\n    }\n    else {\n        swiper.updateSlidesClasses();\n        if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n            swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        }\n        else {\n            swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n    }\n}\nfunction onClick(e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n        if (swiper.params.preventClicks)\n            e.preventDefault();\n        if (swiper.params.preventClicksPropagation && swiper.animating) {\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n}\nfunction attachEvents() {\n    var swiper = this;\n    var params = swiper.params, touchEvents = swiper.touchEvents, el = swiper.el, wrapperEl = swiper.wrapperEl;\n    {\n        swiper.onTouchStart = onTouchStart.bind(swiper);\n        swiper.onTouchMove = onTouchMove.bind(swiper);\n        swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n    swiper.onClick = onClick.bind(swiper);\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n    // Touch Events\n    {\n        if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n            target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n            doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n            doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n        }\n        else {\n            if (Support.touch) {\n                var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n                target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n                target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n                target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n            }\n            if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n                target.addEventListener('mousedown', swiper.onTouchStart, false);\n                doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n                doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n            }\n        }\n        // Prevent Links Clicks\n        if (params.preventClicks || params.preventClicksPropagation) {\n            target.addEventListener('click', swiper.onClick, true);\n        }\n    }\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\nfunction detachEvents() {\n    var swiper = this;\n    var params = swiper.params, touchEvents = swiper.touchEvents, el = swiper.el, wrapperEl = swiper.wrapperEl;\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n    // Touch Events\n    {\n        if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n            target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n            doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n            doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n        }\n        else {\n            if (Support.touch) {\n                var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n                target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n                target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n                target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n            }\n            if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n                target.removeEventListener('mousedown', swiper.onTouchStart, false);\n                doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n                doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n            }\n        }\n        // Prevent Links Clicks\n        if (params.preventClicks || params.preventClicksPropagation) {\n            target.removeEventListener('click', swiper.onClick, true);\n        }\n    }\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\nvar events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n};\nfunction setBreakpoint() {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex, initialized = swiper.initialized, _a = swiper.loopedSlides, loopedSlides = _a === void 0 ? 0 : _a, params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0))\n        return;\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n        var breakpointOnlyParams_1 = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n        if (breakpointOnlyParams_1) {\n            ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach(function (param) {\n                var paramValue = breakpointOnlyParams_1[param];\n                if (typeof paramValue === 'undefined')\n                    return;\n                if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n                    breakpointOnlyParams_1[param] = 'auto';\n                }\n                else if (param === 'slidesPerView') {\n                    breakpointOnlyParams_1[param] = parseFloat(paramValue);\n                }\n                else {\n                    breakpointOnlyParams_1[param] = parseInt(paramValue, 10);\n                }\n            });\n        }\n        var breakpointParams = breakpointOnlyParams_1 || swiper.originalParams;\n        var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView);\n        Utils.extend(swiper.params, breakpointParams);\n        Utils.extend(swiper, {\n            allowTouchMove: swiper.params.allowTouchMove,\n            allowSlideNext: swiper.params.allowSlideNext,\n            allowSlidePrev: swiper.params.allowSlidePrev,\n        });\n        swiper.currentBreakpoint = breakpoint;\n        if (needsReLoop && initialized) {\n            swiper.loopDestroy();\n            swiper.loopCreate();\n            swiper.updateSlides();\n            swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n        }\n        swiper.emit('breakpoint', breakpointParams);\n    }\n}\nfunction getBreakpoint(breakpoints) {\n    var swiper = this;\n    // Get breakpoint for window width\n    if (!breakpoints)\n        return undefined;\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n        points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n        var point = points[i];\n        if (swiper.params.breakpointsInverse) {\n            if (point <= win.innerWidth) {\n                breakpoint = point;\n            }\n        }\n        else if (point >= win.innerWidth && !breakpoint) {\n            breakpoint = point;\n        }\n    }\n    return breakpoint || 'max';\n}\nvar breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\nvar Browser = (function Browser() {\n    function isSafari() {\n        var ua = win.navigator.userAgent.toLowerCase();\n        return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n        isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n        isEdge: !!win.navigator.userAgent.match(/Edge/g),\n        isSafari: isSafari(),\n        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n}());\nfunction addClasses() {\n    var swiper = this;\n    var classNames = swiper.classNames, params = swiper.params, rtl = swiper.rtl, $el = swiper.$el;\n    var suffixes = [];\n    suffixes.push(params.direction);\n    if (params.freeMode) {\n        suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n        suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n        suffixes.push('autoheight');\n    }\n    if (rtl) {\n        suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n        suffixes.push('multirow');\n    }\n    if (Device.android) {\n        suffixes.push('android');\n    }\n    if (Device.ios) {\n        suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        suffixes.push(\"wp8-\" + params.direction);\n    }\n    suffixes.forEach(function (suffix) {\n        classNames.push(params.containerModifierClass + suffix);\n    });\n    $el.addClass(classNames.join(' '));\n}\nfunction removeClasses() {\n    var swiper = this;\n    var $el = swiper.$el, classNames = swiper.classNames;\n    $el.removeClass(classNames.join(' '));\n}\nvar classes = { addClasses: addClasses, removeClasses: removeClasses };\nfunction loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n        if (callback)\n            callback();\n    }\n    if (!imageEl.complete || !checkForComplete) {\n        if (src) {\n            image = new win.Image();\n            image.onload = onReady;\n            image.onerror = onReady;\n            if (sizes) {\n                image.sizes = sizes;\n            }\n            if (srcset) {\n                image.srcset = srcset;\n            }\n            if (src) {\n                image.src = src;\n            }\n        }\n        else {\n            onReady();\n        }\n    }\n    else {\n        // image already loaded...\n        onReady();\n    }\n}\nfunction preloadImages() {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed)\n            return;\n        if (swiper.imagesLoaded !== undefined)\n            swiper.imagesLoaded += 1;\n        if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n            if (swiper.params.updateOnImagesReady)\n                swiper.update();\n            swiper.emit('imagesReady');\n        }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n        var imageEl = swiper.imagesToLoad[i];\n        swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n    }\n}\nvar images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n};\nfunction checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n    // events\n    if (wasLocked !== swiper.isLocked)\n        swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n        swiper.isEnd = false;\n        swiper.navigation.update();\n    }\n}\nvar checkOverflow$1 = { checkOverflow: checkOverflow };\nvar defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventInteractionOnTransition: false,\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n    // Autoheight\n    autoHeight: false,\n    // Set wrapper width\n    setWrapperSize: false,\n    // Virtual Translate\n    virtualTranslate: false,\n    // Effects\n    effect: 'slide',\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsInverse: false,\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0,\n    slidesOffsetAfter: 0,\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n    // Round length\n    roundLengths: false,\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n    // Cursor\n    grabCursor: false,\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null,\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n    // Passive Listeners\n    passiveListeners: true,\n    // NS\n    containerModifierClass: 'swiper-container-',\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n    // Callbacks\n    runCallbacksOnInit: true,\n};\nvar prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n};\nvar extendedDefaults = {};\nvar Swiper = /** @class */ (function (_super) {\n    tslib_1.__extends(Swiper, _super);\n    function Swiper() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _this = this;\n        var el;\n        var params;\n        if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n            params = args[0];\n        }\n        else {\n            el = args[0], params = args[1];\n        }\n        if (!params)\n            params = {};\n        params = Utils.extend({}, params);\n        if (el && !params.el)\n            params.el = el;\n        _this = _super.call(this, params) || this;\n        Object.keys(prototypes).forEach(function (prototypeGroup) {\n            Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n                if (!Swiper.prototype[protoMethod]) {\n                    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n                }\n            });\n        });\n        // Swiper Instance\n        var swiper = _this;\n        if (typeof swiper.modules === 'undefined') {\n            swiper.modules = {};\n        }\n        Object.keys(swiper.modules).forEach(function (moduleName) {\n            var module = swiper.modules[moduleName];\n            if (module.params) {\n                var moduleParamName = Object.keys(module.params)[0];\n                var moduleParams = module.params[moduleParamName];\n                if (typeof moduleParams !== 'object' || moduleParams === null)\n                    return;\n                if (!(moduleParamName in params && 'enabled' in moduleParams))\n                    return;\n                if (params[moduleParamName] === true) {\n                    params[moduleParamName] = { enabled: true };\n                }\n                if (typeof params[moduleParamName] === 'object'\n                    && !('enabled' in params[moduleParamName])) {\n                    params[moduleParamName].enabled = true;\n                }\n                if (!params[moduleParamName])\n                    params[moduleParamName] = { enabled: false };\n            }\n        });\n        // Extend defaults with modules params\n        var swiperParams = Utils.extend({}, defaults);\n        swiper.useModulesParams(swiperParams);\n        // Extend defaults with passed params\n        swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n        swiper.originalParams = Utils.extend({}, swiper.params);\n        swiper.passedParams = Utils.extend({}, params);\n        // Save Dom lib\n        swiper.$ = $;\n        // Find el\n        var $el = $(swiper.params.el);\n        el = $el[0];\n        if (!el) {\n            return undefined;\n        }\n        if ($el.length > 1) {\n            var swipers_1 = [];\n            $el.each(function (index$$1, containerEl) {\n                var newParams = Utils.extend({}, params, { el: containerEl });\n                swipers_1.push(new Swiper(newParams));\n            });\n            return swipers_1;\n        }\n        el.swiper = swiper;\n        $el.data('swiper', swiper);\n        // Find Wrapper\n        var $wrapperEl = $el.children(\".\" + swiper.params.wrapperClass);\n        // Extend Swiper\n        Utils.extend(swiper, {\n            $el: $el,\n            el: el,\n            $wrapperEl: $wrapperEl,\n            wrapperEl: $wrapperEl[0],\n            // Classes\n            classNames: [],\n            // Slides\n            slides: $(),\n            slidesGrid: [],\n            snapGrid: [],\n            slidesSizesGrid: [],\n            // isDirection\n            isHorizontal: function () {\n                return swiper.params.direction === 'horizontal';\n            },\n            isVertical: function () {\n                return swiper.params.direction === 'vertical';\n            },\n            // RTL\n            rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n            rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n            wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n            // Indexes\n            activeIndex: 0,\n            realIndex: 0,\n            //\n            isBeginning: true,\n            isEnd: false,\n            // Props\n            translate: 0,\n            previousTranslate: 0,\n            progress: 0,\n            velocity: 0,\n            animating: false,\n            // Locks\n            allowSlideNext: swiper.params.allowSlideNext,\n            allowSlidePrev: swiper.params.allowSlidePrev,\n            // Touch Events\n            touchEvents: (function touchEvents() {\n                var touch = ['touchstart', 'touchmove', 'touchend'];\n                var desktop = ['mousedown', 'mousemove', 'mouseup'];\n                if (Support.pointerEvents) {\n                    desktop = ['pointerdown', 'pointermove', 'pointerup'];\n                }\n                else if (Support.prefixedPointerEvents) {\n                    desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n                }\n                swiper.touchEventsTouch = {\n                    start: touch[0],\n                    move: touch[1],\n                    end: touch[2],\n                };\n                swiper.touchEventsDesktop = {\n                    start: desktop[0],\n                    move: desktop[1],\n                    end: desktop[2],\n                };\n                return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n            }()),\n            touchEventsData: {\n                isTouched: undefined,\n                isMoved: undefined,\n                allowTouchCallbacks: undefined,\n                touchStartTime: undefined,\n                isScrolling: undefined,\n                currentTranslate: undefined,\n                startTranslate: undefined,\n                allowThresholdMove: undefined,\n                // Form elements to match\n                formElements: 'input, select, option, textarea, button, video',\n                // Last click time\n                lastClickTime: Utils.now(),\n                clickTimeout: undefined,\n                // Velocities\n                velocities: [],\n                allowMomentumBounce: undefined,\n                isTouchEvent: undefined,\n                startMoving: undefined,\n            },\n            // Clicks\n            allowClick: true,\n            // Touches\n            allowTouchMove: swiper.params.allowTouchMove,\n            touches: {\n                startX: 0,\n                startY: 0,\n                currentX: 0,\n                currentY: 0,\n                diff: 0,\n            },\n            // Images\n            imagesToLoad: [],\n            imagesLoaded: 0,\n        });\n        // Install Modules\n        swiper.useModules();\n        // Init\n        if (swiper.params.init) {\n            swiper.init();\n        }\n        // Return app instance\n        return swiper;\n    }\n    Swiper.prototype.slidesPerViewDynamic = function () {\n        var swiper = this;\n        var params = swiper.params, slides = swiper.slides, slidesGrid = swiper.slidesGrid, swiperSize = swiper.size, activeIndex = swiper.activeIndex;\n        var spv = 1;\n        if (params.centeredSlides) {\n            var slideSize = slides[activeIndex].swiperSlideSize;\n            var breakLoop = void 0;\n            for (var i = activeIndex + 1; i < slides.length; i += 1) {\n                if (slides[i] && !breakLoop) {\n                    slideSize += slides[i].swiperSlideSize;\n                    spv += 1;\n                    if (slideSize > swiperSize)\n                        breakLoop = true;\n                }\n            }\n            for (var i = activeIndex - 1; i >= 0; i -= 1) {\n                if (slides[i] && !breakLoop) {\n                    slideSize += slides[i].swiperSlideSize;\n                    spv += 1;\n                    if (slideSize > swiperSize)\n                        breakLoop = true;\n                }\n            }\n        }\n        else {\n            for (var i = activeIndex + 1; i < slides.length; i += 1) {\n                if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n                    spv += 1;\n                }\n            }\n        }\n        return spv;\n    };\n    Swiper.prototype.update = function () {\n        var swiper = this;\n        if (!swiper || swiper.destroyed)\n            return;\n        var snapGrid = swiper.snapGrid, params = swiper.params;\n        // Breakpoints\n        if (params.breakpoints) {\n            swiper.setBreakpoint();\n        }\n        swiper.updateSize();\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        function setTranslate() {\n            var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n            var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n            swiper.setTranslate(newTranslate);\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        }\n        var translated;\n        if (swiper.params.freeMode) {\n            setTranslate();\n            if (swiper.params.autoHeight) {\n                swiper.updateAutoHeight();\n            }\n        }\n        else {\n            if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n                translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n            }\n            else {\n                translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n            }\n            if (!translated) {\n                setTranslate();\n            }\n        }\n        if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n            swiper.checkOverflow();\n        }\n        swiper.emit('update');\n    };\n    Swiper.prototype.init = function () {\n        var swiper = this;\n        if (swiper.initialized)\n            return;\n        swiper.emit('beforeInit');\n        // Set breakpoint\n        if (swiper.params.breakpoints) {\n            swiper.setBreakpoint();\n        }\n        // Add Classes\n        swiper.addClasses();\n        // Create loop\n        if (swiper.params.loop) {\n            swiper.loopCreate();\n        }\n        // Update size\n        swiper.updateSize();\n        // Update slides\n        swiper.updateSlides();\n        if (swiper.params.watchOverflow) {\n            swiper.checkOverflow();\n        }\n        // Set Grab Cursor\n        if (swiper.params.grabCursor) {\n            swiper.setGrabCursor();\n        }\n        if (swiper.params.preloadImages) {\n            swiper.preloadImages();\n        }\n        // Slide To Initial Slide\n        if (swiper.params.loop) {\n            swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n        }\n        else {\n            swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n        }\n        // Attach events\n        swiper.attachEvents();\n        // Init Flag\n        swiper.initialized = true;\n        // Emit\n        swiper.emit('init');\n    };\n    Swiper.prototype.destroy = function (deleteInstance, cleanStyles) {\n        if (deleteInstance === void 0) { deleteInstance = true; }\n        if (cleanStyles === void 0) { cleanStyles = true; }\n        var swiper = this;\n        var params = swiper.params, $el = swiper.$el, $wrapperEl = swiper.$wrapperEl, slides = swiper.slides;\n        if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n            return null;\n        }\n        swiper.emit('beforeDestroy');\n        // Init Flag\n        swiper.initialized = false;\n        // Detach events\n        swiper.detachEvents();\n        // Destroy loop\n        if (params.loop) {\n            swiper.loopDestroy();\n        }\n        // Cleanup styles\n        if (cleanStyles) {\n            swiper.removeClasses();\n            $el.removeAttr('style');\n            $wrapperEl.removeAttr('style');\n            if (slides && slides.length) {\n                slides\n                    .removeClass([\n                    params.slideVisibleClass,\n                    params.slideActiveClass,\n                    params.slideNextClass,\n                    params.slidePrevClass,\n                ].join(' '))\n                    .removeAttr('style')\n                    .removeAttr('data-swiper-slide-index')\n                    .removeAttr('data-swiper-column')\n                    .removeAttr('data-swiper-row');\n            }\n        }\n        swiper.emit('destroy');\n        // Detach emitter events\n        Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n            swiper.off(eventName);\n        });\n        if (deleteInstance !== false) {\n            swiper.$el[0].swiper = null;\n            swiper.$el.data('swiper', null);\n            Utils.deleteProps(swiper);\n        }\n        swiper.destroyed = true;\n        return null;\n    };\n    Swiper.extendDefaults = function (newDefaults) {\n        Utils.extend(extendedDefaults, newDefaults);\n    };\n    Object.defineProperty(Swiper, \"extendedDefaults\", {\n        get: function () {\n            return extendedDefaults;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Swiper, \"defaults\", {\n        get: function () {\n            return defaults;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Swiper, \"Class\", {\n        get: function () {\n            return SwiperClass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Swiper, \"$\", {\n        get: function () {\n            return $;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Swiper;\n}(SwiperClass));\nvar Device$1 = {\n    name: 'device',\n    proto: {\n        device: Device,\n    },\n    static: {\n        device: Device,\n    },\n};\nvar Support$1 = {\n    name: 'support',\n    proto: {\n        support: Support,\n    },\n    static: {\n        support: Support,\n    },\n};\nvar Browser$1 = {\n    name: 'browser',\n    proto: {\n        browser: Browser,\n    },\n    static: {\n        browser: Browser,\n    },\n};\nvar Resize = {\n    name: 'resize',\n    create: function () {\n        var swiper = this;\n        Utils.extend(swiper, {\n            resize: {\n                resizeHandler: function () {\n                    if (!swiper || swiper.destroyed || !swiper.initialized)\n                        return;\n                    swiper.emit('beforeResize');\n                    swiper.emit('resize');\n                },\n                orientationChangeHandler: function () {\n                    if (!swiper || swiper.destroyed || !swiper.initialized)\n                        return;\n                    swiper.emit('orientationchange');\n                },\n            },\n        });\n    },\n    on: {\n        init: function () {\n            var swiper = this;\n            // Emit resize\n            win.addEventListener('resize', swiper.resize.resizeHandler);\n            // Emit orientationchange\n            win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n        },\n        destroy: function () {\n            var swiper = this;\n            win.removeEventListener('resize', swiper.resize.resizeHandler);\n            win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n        },\n    },\n};\nvar Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function (target, options) {\n        if (options === void 0) { options = {}; }\n        var swiper = this;\n        var ObserverFunc = Observer.func;\n        var observer = new ObserverFunc(function (mutations) {\n            // The observerUpdate event should only be triggered\n            // once despite the number of mutations.  Additional\n            // triggers are redundant and are very costly\n            if (mutations.length === 1) {\n                swiper.emit('observerUpdate', mutations[0]);\n                return;\n            }\n            var observerUpdate = function observerUpdate() {\n                swiper.emit('observerUpdate', mutations[0]);\n            };\n            if (win.requestAnimationFrame) {\n                win.requestAnimationFrame(observerUpdate);\n            }\n            else {\n                win.setTimeout(observerUpdate, 0);\n            }\n        });\n        observer.observe(target, {\n            attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n            childList: typeof options.childList === 'undefined' ? true : options.childList,\n            characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n        });\n        swiper.observer.observers.push(observer);\n    },\n    init: function () {\n        var swiper = this;\n        if (!Support.observer || !swiper.params.observer)\n            return;\n        if (swiper.params.observeParents) {\n            var containerParents = swiper.$el.parents();\n            for (var i = 0; i < containerParents.length; i += 1) {\n                swiper.observer.attach(containerParents[i]);\n            }\n        }\n        // Observe container\n        swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n        // Observe wrapper\n        swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function () {\n        var swiper = this;\n        swiper.observer.observers.forEach(function (observer) {\n            observer.disconnect();\n        });\n        swiper.observer.observers = [];\n    },\n};\nvar Observer$1 = {\n    name: 'observer',\n    params: {\n        observer: false,\n        observeParents: false,\n        observeSlideChildren: false,\n    },\n    create: function () {\n        var swiper = this;\n        Utils.extend(swiper, {\n            observer: {\n                init: Observer.init.bind(swiper),\n                attach: Observer.attach.bind(swiper),\n                destroy: Observer.destroy.bind(swiper),\n                observers: [],\n            },\n        });\n    },\n    on: {\n        init: function () {\n            var swiper = this;\n            swiper.observer.init();\n        },\n        destroy: function () {\n            var swiper = this;\n            swiper.observer.destroy();\n        },\n    },\n};\nfunction isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n    if (!isSupported) {\n        var element = doc.createElement('div');\n        element.setAttribute(eventName, 'return;');\n        isSupported = typeof element[eventName] === 'function';\n    }\n    if (!isSupported\n        && doc.implementation\n        && doc.implementation.hasFeature\n        // always returns true in newer browsers as per the standard.\n        // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n        && doc.implementation.hasFeature('', '') !== true) {\n        // This is the only way to test support for the `wheel` event in IE9+.\n        isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n    return isSupported;\n}\nvar Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n        if (win.navigator.userAgent.indexOf('firefox') > -1)\n            return 'DOMMouseScroll';\n        return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function (e) {\n        // Reasonable defaults\n        var PIXEL_STEP = 10;\n        var LINE_HEIGHT = 40;\n        var PAGE_HEIGHT = 800;\n        var sX = 0;\n        var sY = 0; // spinX, spinY\n        var pX = 0;\n        var pY = 0; // pixelX, pixelY\n        // Legacy\n        if ('detail' in e) {\n            sY = e.detail;\n        }\n        if ('wheelDelta' in e) {\n            sY = -e.wheelDelta / 120;\n        }\n        if ('wheelDeltaY' in e) {\n            sY = -e.wheelDeltaY / 120;\n        }\n        if ('wheelDeltaX' in e) {\n            sX = -e.wheelDeltaX / 120;\n        }\n        // side scrolling on FF with DOMMouseScroll\n        if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n            sX = sY;\n            sY = 0;\n        }\n        pX = sX * PIXEL_STEP;\n        pY = sY * PIXEL_STEP;\n        if ('deltaY' in e) {\n            pY = e.deltaY;\n        }\n        if ('deltaX' in e) {\n            pX = e.deltaX;\n        }\n        if ((pX || pY) && e.deltaMode) {\n            if (e.deltaMode === 1) { // delta in LINE units\n                pX *= LINE_HEIGHT;\n                pY *= LINE_HEIGHT;\n            }\n            else { // delta in PAGE units\n                pX *= PAGE_HEIGHT;\n                pY *= PAGE_HEIGHT;\n            }\n        }\n        // Fall-back if spin cannot be determined\n        if (pX && !sX) {\n            sX = (pX < 1) ? -1 : 1;\n        }\n        if (pY && !sY) {\n            sY = (pY < 1) ? -1 : 1;\n        }\n        return {\n            spinX: sX,\n            spinY: sY,\n            pixelX: pX,\n            pixelY: pY,\n        };\n    },\n    handleMouseEnter: function () {\n        var swiper = this;\n        swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function () {\n        var swiper = this;\n        swiper.mouseEntered = false;\n    },\n    handle: function (event) {\n        var e = event;\n        var swiper = this;\n        var params = swiper.params.mousewheel;\n        if (!swiper.mouseEntered && !params.releaseOnEdges)\n            return true;\n        if (e.originalEvent)\n            e = e.originalEvent; // jquery fix\n        var delta = 0;\n        var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n        var data$$1 = Mousewheel.normalize(e);\n        if (params.forceToAxis) {\n            if (swiper.isHorizontal()) {\n                if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY))\n                    delta = data$$1.pixelX * rtlFactor;\n                else\n                    return true;\n            }\n            else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX))\n                delta = data$$1.pixelY;\n            else\n                return true;\n        }\n        else {\n            delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n        }\n        if (delta === 0)\n            return true;\n        if (params.invert)\n            delta = -delta;\n        if (!swiper.params.freeMode) {\n            if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n                if (delta < 0) {\n                    if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n                        swiper.slideNext();\n                        swiper.emit('scroll', e);\n                    }\n                    else if (params.releaseOnEdges)\n                        return true;\n                }\n                else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n                    swiper.slidePrev();\n                    swiper.emit('scroll', e);\n                }\n                else if (params.releaseOnEdges)\n                    return true;\n            }\n            swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n        }\n        else {\n            // Freemode or scrollContainer:\n            if (swiper.params.loop) {\n                swiper.loopFix();\n            }\n            var position = swiper.getTranslate() + (delta * params.sensitivity);\n            var wasBeginning = swiper.isBeginning;\n            var wasEnd = swiper.isEnd;\n            if (position >= swiper.minTranslate())\n                position = swiper.minTranslate();\n            if (position <= swiper.maxTranslate())\n                position = swiper.maxTranslate();\n            swiper.setTransition(0);\n            swiper.setTranslate(position);\n            swiper.updateProgress();\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n            if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n                swiper.updateSlidesClasses();\n            }\n            if (swiper.params.freeModeSticky) {\n                clearTimeout(swiper.mousewheel.timeout);\n                swiper.mousewheel.timeout = Utils.nextTick(function () {\n                    swiper.slideToClosest();\n                }, 300);\n            }\n            // Emit event\n            swiper.emit('scroll', e);\n            // Stop autoplay\n            if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction)\n                swiper.autoplay.stop();\n            // Return page scroll on edge positions\n            if (position === swiper.minTranslate() || position === swiper.maxTranslate())\n                return true;\n        }\n        if (e.preventDefault)\n            e.preventDefault();\n        else\n            e.returnValue = false;\n        return false;\n    },\n    enable: function () {\n        var swiper = this;\n        if (!Mousewheel.event)\n            return false;\n        if (swiper.mousewheel.enabled)\n            return false;\n        var target = swiper.$el;\n        if (swiper.params.mousewheel.eventsTarged !== 'container') {\n            target = $(swiper.params.mousewheel.eventsTarged);\n        }\n        target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n        target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n        target.on(Mousewheel.event, swiper.mousewheel.handle);\n        swiper.mousewheel.enabled = true;\n        return true;\n    },\n    disable: function () {\n        var swiper = this;\n        if (!Mousewheel.event)\n            return false;\n        if (!swiper.mousewheel.enabled)\n            return false;\n        var target = swiper.$el;\n        if (swiper.params.mousewheel.eventsTarged !== 'container') {\n            target = $(swiper.params.mousewheel.eventsTarged);\n        }\n        target.off(Mousewheel.event, swiper.mousewheel.handle);\n        swiper.mousewheel.enabled = false;\n        return true;\n    },\n};\nvar Pagination = {\n    update: function () {\n        // Render || Update Pagination bullets/items\n        var swiper = this;\n        var rtl = swiper.rtl;\n        var params = swiper.params.pagination;\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0)\n            return;\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        var $el = swiper.pagination.$el;\n        // Current/Total\n        var current;\n        var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        if (swiper.params.loop) {\n            current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n            if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n                current -= (slidesLength - (swiper.loopedSlides * 2));\n            }\n            if (current > total - 1)\n                current -= total;\n            if (current < 0 && swiper.params.paginationType !== 'bullets')\n                current = total + current;\n        }\n        else if (typeof swiper.snapIndex !== 'undefined') {\n            current = swiper.snapIndex;\n        }\n        else {\n            current = swiper.activeIndex || 0;\n        }\n        // Types\n        if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n            var bullets = swiper.pagination.bullets;\n            var firstIndex_1;\n            var lastIndex_1;\n            var midIndex = void 0;\n            if (params.dynamicBullets) {\n                swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n                $el.css(swiper.isHorizontal() ? 'width' : 'height', swiper.pagination.bulletSize * (params.dynamicMainBullets + 4) + \"px\");\n                if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n                    swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n                    if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n                        swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n                    }\n                    else if (swiper.pagination.dynamicBulletIndex < 0) {\n                        swiper.pagination.dynamicBulletIndex = 0;\n                    }\n                }\n                firstIndex_1 = current - swiper.pagination.dynamicBulletIndex;\n                lastIndex_1 = firstIndex_1 + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n                midIndex = (lastIndex_1 + firstIndex_1) / 2;\n            }\n            bullets.removeClass(params.bulletActiveClass + \" \" + params.bulletActiveClass + \"-next \" + params.bulletActiveClass + \"-next-next \" + params.bulletActiveClass + \"-prev \" + params.bulletActiveClass + \"-prev-prev \" + params.bulletActiveClass + \"-main\");\n            if ($el.length > 1) {\n                bullets.each(function (index$$1, bullet) {\n                    var $bullet = $(bullet);\n                    var bulletIndex = $bullet.index();\n                    if (bulletIndex === current) {\n                        $bullet.addClass(params.bulletActiveClass);\n                    }\n                    if (params.dynamicBullets) {\n                        if (bulletIndex >= firstIndex_1 && bulletIndex <= lastIndex_1) {\n                            $bullet.addClass(params.bulletActiveClass + \"-main\");\n                        }\n                        if (bulletIndex === firstIndex_1) {\n                            $bullet\n                                .prev()\n                                .addClass(params.bulletActiveClass + \"-prev\")\n                                .prev()\n                                .addClass(params.bulletActiveClass + \"-prev-prev\");\n                        }\n                        if (bulletIndex === lastIndex_1) {\n                            $bullet\n                                .next()\n                                .addClass(params.bulletActiveClass + \"-next\")\n                                .next()\n                                .addClass(params.bulletActiveClass + \"-next-next\");\n                        }\n                    }\n                });\n            }\n            else {\n                var $bullet = bullets.eq(current);\n                $bullet.addClass(params.bulletActiveClass);\n                if (params.dynamicBullets) {\n                    var $firstDisplayedBullet = bullets.eq(firstIndex_1);\n                    var $lastDisplayedBullet = bullets.eq(lastIndex_1);\n                    for (var i = firstIndex_1; i <= lastIndex_1; i += 1) {\n                        bullets.eq(i).addClass(params.bulletActiveClass + \"-main\");\n                    }\n                    $firstDisplayedBullet\n                        .prev()\n                        .addClass(params.bulletActiveClass + \"-prev\")\n                        .prev()\n                        .addClass(params.bulletActiveClass + \"-prev-prev\");\n                    $lastDisplayedBullet\n                        .next()\n                        .addClass(params.bulletActiveClass + \"-next\")\n                        .next()\n                        .addClass(params.bulletActiveClass + \"-next-next\");\n                }\n            }\n            if (params.dynamicBullets) {\n                var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n                var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n                var offsetProp = rtl ? 'right' : 'left';\n                bullets.css(swiper.isHorizontal() ? offsetProp : 'top', bulletsOffset + \"px\");\n            }\n        }\n        if (params.type === 'fraction') {\n            $el.find(\".\" + params.currentClass).text(params.formatFractionCurrent(current + 1));\n            $el.find(\".\" + params.totalClass).text(params.formatFractionTotal(total));\n        }\n        if (params.type === 'progressbar') {\n            var progressbarDirection = void 0;\n            if (params.progressbarOpposite) {\n                progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n            }\n            else {\n                progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n            }\n            var scale = (current + 1) / total;\n            var scaleX = 1;\n            var scaleY = 1;\n            if (progressbarDirection === 'horizontal') {\n                scaleX = scale;\n            }\n            else {\n                scaleY = scale;\n            }\n            $el.find(\".\" + params.progressbarFillClass).transform(\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\").transition(swiper.params.speed);\n        }\n        if (params.type === 'custom' && params.renderCustom) {\n            $el.html(params.renderCustom(swiper, current + 1, total));\n            swiper.emit('paginationRender', swiper, $el[0]);\n        }\n        else {\n            swiper.emit('paginationUpdate', swiper, $el[0]);\n        }\n        $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function () {\n        // Render Container\n        var swiper = this;\n        var params = swiper.params.pagination;\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0)\n            return;\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        var $el = swiper.pagination.$el;\n        var paginationHTML = '';\n        if (params.type === 'bullets') {\n            var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n            for (var i = 0; i < numberOfBullets; i += 1) {\n                if (params.renderBullet) {\n                    paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n                }\n                else {\n                    paginationHTML += \"<\" + params.bulletElement + \" class=\\\"\" + params.bulletClass + \"\\\"></\" + params.bulletElement + \">\";\n                }\n            }\n            $el.html(paginationHTML);\n            swiper.pagination.bullets = $el.find(\".\" + params.bulletClass);\n        }\n        if (params.type === 'fraction') {\n            if (params.renderFraction) {\n                paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n            }\n            else {\n                paginationHTML = \"<span class=\\\"\" + params.currentClass + \"\\\"></span>\"\n                    + ' / '\n                    + (\"<span class=\\\"\" + params.totalClass + \"\\\"></span>\");\n            }\n            $el.html(paginationHTML);\n        }\n        if (params.type === 'progressbar') {\n            if (params.renderProgressbar) {\n                paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n            }\n            else {\n                paginationHTML = \"<span class=\\\"\" + params.progressbarFillClass + \"\\\"></span>\";\n            }\n            $el.html(paginationHTML);\n        }\n        if (params.type !== 'custom') {\n            swiper.emit('paginationRender', swiper.pagination.$el[0]);\n        }\n    },\n    init: function () {\n        var swiper = this;\n        var params = swiper.params.pagination;\n        if (!params.el)\n            return;\n        var $el = $(params.el);\n        if ($el.length === 0)\n            return;\n        if (swiper.params.uniqueNavElements\n            && typeof params.el === 'string'\n            && $el.length > 1\n            && swiper.$el.find(params.el).length === 1) {\n            $el = swiper.$el.find(params.el);\n        }\n        if (params.type === 'bullets' && params.clickable) {\n            $el.addClass(params.clickableClass);\n        }\n        $el.addClass(params.modifierClass + params.type);\n        if (params.type === 'bullets' && params.dynamicBullets) {\n            $el.addClass(\"\" + params.modifierClass + params.type + \"-dynamic\");\n            swiper.pagination.dynamicBulletIndex = 0;\n            if (params.dynamicMainBullets < 1) {\n                params.dynamicMainBullets = 1;\n            }\n        }\n        if (params.type === 'progressbar' && params.progressbarOpposite) {\n            $el.addClass(params.progressbarOppositeClass);\n        }\n        if (params.clickable) {\n            $el.on('click', \".\" + params.bulletClass, function onClick(e) {\n                e.preventDefault();\n                var index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n                if (swiper.params.loop)\n                    index$$1 += swiper.loopedSlides;\n                swiper.slideTo(index$$1);\n            });\n        }\n        Utils.extend(swiper.pagination, {\n            $el: $el,\n            el: $el[0],\n        });\n    },\n    destroy: function () {\n        var swiper = this;\n        var params = swiper.params.pagination;\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0)\n            return;\n        var $el = swiper.pagination.$el;\n        $el.removeClass(params.hiddenClass);\n        $el.removeClass(params.modifierClass + params.type);\n        if (swiper.pagination.bullets)\n            swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n        if (params.clickable) {\n            $el.off('click', \".\" + params.bulletClass);\n        }\n    },\n};\nvar pagination = {\n    name: 'pagination',\n    params: {\n        pagination: {\n            el: null,\n            bulletElement: 'span',\n            clickable: false,\n            hideOnClick: false,\n            renderBullet: null,\n            renderProgressbar: null,\n            renderFraction: null,\n            renderCustom: null,\n            progressbarOpposite: false,\n            type: 'bullets',\n            dynamicBullets: false,\n            dynamicMainBullets: 1,\n            formatFractionCurrent: function (number) { return number; },\n            formatFractionTotal: function (number) { return number; },\n            bulletClass: 'swiper-pagination-bullet',\n            bulletActiveClass: 'swiper-pagination-bullet-active',\n            modifierClass: 'swiper-pagination-',\n            currentClass: 'swiper-pagination-current',\n            totalClass: 'swiper-pagination-total',\n            hiddenClass: 'swiper-pagination-hidden',\n            progressbarFillClass: 'swiper-pagination-progressbar-fill',\n            progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n            clickableClass: 'swiper-pagination-clickable',\n            lockClass: 'swiper-pagination-lock',\n        },\n    },\n    create: function () {\n        var swiper = this;\n        Utils.extend(swiper, {\n            pagination: {\n                init: Pagination.init.bind(swiper),\n                render: Pagination.render.bind(swiper),\n                update: Pagination.update.bind(swiper),\n                destroy: Pagination.destroy.bind(swiper),\n                dynamicBulletIndex: 0,\n            },\n        });\n    },\n    on: {\n        init: function () {\n            var swiper = this;\n            swiper.pagination.init();\n            swiper.pagination.render();\n            swiper.pagination.update();\n        },\n        activeIndexChange: function () {\n            var swiper = this;\n            if (swiper.params.loop) {\n                swiper.pagination.update();\n            }\n            else if (typeof swiper.snapIndex === 'undefined') {\n                swiper.pagination.update();\n            }\n        },\n        snapIndexChange: function () {\n            var swiper = this;\n            if (!swiper.params.loop) {\n                swiper.pagination.update();\n            }\n        },\n        slidesLengthChange: function () {\n            var swiper = this;\n            if (swiper.params.loop) {\n                swiper.pagination.render();\n                swiper.pagination.update();\n            }\n        },\n        snapGridLengthChange: function () {\n            var swiper = this;\n            if (!swiper.params.loop) {\n                swiper.pagination.render();\n                swiper.pagination.update();\n            }\n        },\n        destroy: function () {\n            var swiper = this;\n            swiper.pagination.destroy();\n        },\n        click: function (e) {\n            var swiper = this;\n            if (swiper.params.pagination.el\n                && swiper.params.pagination.hideOnClick\n                && swiper.pagination.$el.length > 0\n                && !$(e.target).hasClass(swiper.params.pagination.bulletClass)) {\n                swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n            }\n        },\n    },\n};\nvar Scrollbar = {\n    setTranslate: function () {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)\n            return;\n        var scrollbar = swiper.scrollbar, rtl = swiper.rtlTranslate, progress = swiper.progress;\n        var dragSize = scrollbar.dragSize, trackSize = scrollbar.trackSize, $dragEl = scrollbar.$dragEl, $el = scrollbar.$el;\n        var params = swiper.params.scrollbar;\n        var newSize = dragSize;\n        var newPos = (trackSize - dragSize) * progress;\n        if (rtl) {\n            newPos = -newPos;\n            if (newPos > 0) {\n                newSize = dragSize - newPos;\n                newPos = 0;\n            }\n            else if (-newPos + dragSize > trackSize) {\n                newSize = trackSize + newPos;\n            }\n        }\n        else if (newPos < 0) {\n            newSize = dragSize + newPos;\n            newPos = 0;\n        }\n        else if (newPos + dragSize > trackSize) {\n            newSize = trackSize - newPos;\n        }\n        if (swiper.isHorizontal()) {\n            if (Support.transforms3d) {\n                $dragEl.transform(\"translate3d(\" + newPos + \"px, 0, 0)\");\n            }\n            else {\n                $dragEl.transform(\"translateX(\" + newPos + \"px)\");\n            }\n            $dragEl[0].style.width = newSize + \"px\";\n        }\n        else {\n            if (Support.transforms3d) {\n                $dragEl.transform(\"translate3d(0px, \" + newPos + \"px, 0)\");\n            }\n            else {\n                $dragEl.transform(\"translateY(\" + newPos + \"px)\");\n            }\n            $dragEl[0].style.height = newSize + \"px\";\n        }\n        if (params.hide) {\n            clearTimeout(swiper.scrollbar.timeout);\n            $el[0].style.opacity = 1;\n            swiper.scrollbar.timeout = setTimeout(function () {\n                $el[0].style.opacity = 0;\n                $el.transition(400);\n            }, 1000);\n        }\n    },\n    setTransition: function (duration) {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)\n            return;\n        swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function () {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)\n            return;\n        var scrollbar = swiper.scrollbar;\n        var $dragEl = scrollbar.$dragEl, $el = scrollbar.$el;\n        $dragEl[0].style.width = '';\n        $dragEl[0].style.height = '';\n        var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n        var divider = swiper.size / swiper.virtualSize;\n        var moveDivider = divider * (trackSize / swiper.size);\n        var dragSize;\n        if (swiper.params.scrollbar.dragSize === 'auto') {\n            dragSize = trackSize * divider;\n        }\n        else {\n            dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n        }\n        if (swiper.isHorizontal()) {\n            $dragEl[0].style.width = dragSize + \"px\";\n        }\n        else {\n            $dragEl[0].style.height = dragSize + \"px\";\n        }\n        if (divider >= 1) {\n            $el[0].style.display = 'none';\n        }\n        else {\n            $el[0].style.display = '';\n        }\n        if (swiper.params.scrollbarHide) {\n            $el[0].style.opacity = 0;\n        }\n        Utils.extend(scrollbar, {\n            trackSize: trackSize,\n            divider: divider,\n            moveDivider: moveDivider,\n            dragSize: dragSize,\n        });\n        scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function (e) {\n        var swiper = this;\n        var scrollbar = swiper.scrollbar, rtl = swiper.rtlTranslate;\n        var $el = scrollbar.$el, dragSize = scrollbar.dragSize, trackSize = scrollbar.trackSize;\n        var pointerPosition;\n        if (swiper.isHorizontal()) {\n            pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n        }\n        else {\n            pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n        }\n        var positionRatio;\n        positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n        positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n        if (rtl) {\n            positionRatio = 1 - positionRatio;\n        }\n        var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n        swiper.updateProgress(position);\n        swiper.setTranslate(position);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n    },\n    onDragStart: function (e) {\n        var swiper = this;\n        var params = swiper.params.scrollbar;\n        var scrollbar = swiper.scrollbar, $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el, $dragEl = scrollbar.$dragEl;\n        swiper.scrollbar.isTouched = true;\n        e.preventDefault();\n        e.stopPropagation();\n        $wrapperEl.transition(100);\n        $dragEl.transition(100);\n        scrollbar.setDragPosition(e);\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        $el.transition(0);\n        if (params.hide) {\n            $el.css('opacity', 1);\n        }\n        swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function (e) {\n        var swiper = this;\n        var scrollbar = swiper.scrollbar, $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el, $dragEl = scrollbar.$dragEl;\n        if (!swiper.scrollbar.isTouched)\n            return;\n        if (e.preventDefault)\n            e.preventDefault();\n        else\n            e.returnValue = false;\n        scrollbar.setDragPosition(e);\n        $wrapperEl.transition(0);\n        $el.transition(0);\n        $dragEl.transition(0);\n        swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function (e) {\n        var swiper = this;\n        var params = swiper.params.scrollbar;\n        var scrollbar = swiper.scrollbar;\n        var $el = scrollbar.$el;\n        if (!swiper.scrollbar.isTouched)\n            return;\n        swiper.scrollbar.isTouched = false;\n        if (params.hide) {\n            clearTimeout(swiper.scrollbar.dragTimeout);\n            swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n                $el.css('opacity', 0);\n                $el.transition(400);\n            }, 1000);\n        }\n        swiper.emit('scrollbarDragEnd', e);\n        if (params.snapOnRelease) {\n            swiper.slideToClosest();\n        }\n    },\n    enableDraggable: function () {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el)\n            return;\n        var scrollbar = swiper.scrollbar, touchEventsTouch = swiper.touchEventsTouch, touchEventsDesktop = swiper.touchEventsDesktop, params = swiper.params;\n        var $el = scrollbar.$el;\n        var target = $el[0];\n        var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n        var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        if (!Support.touch) {\n            target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n            doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n            doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        else {\n            target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n            target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n            target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n    },\n    disableDraggable: function () {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el)\n            return;\n        var scrollbar = swiper.scrollbar, touchEventsTouch = swiper.touchEventsTouch, touchEventsDesktop = swiper.touchEventsDesktop, params = swiper.params;\n        var $el = scrollbar.$el;\n        var target = $el[0];\n        var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n        var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        if (!Support.touch) {\n            target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n            doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n            doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        else {\n            target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n            target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n            target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n    },\n    init: function () {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el)\n            return;\n        var scrollbar = swiper.scrollbar, $swiperEl = swiper.$el;\n        var params = swiper.params.scrollbar;\n        var $el = $(params.el);\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n            $el = $swiperEl.find(params.el);\n        }\n        var $dragEl = $el.find(\".\" + swiper.params.scrollbar.dragClass);\n        if ($dragEl.length === 0) {\n            $dragEl = $(\"<div class=\\\"\" + swiper.params.scrollbar.dragClass + \"\\\"></div>\");\n            $el.append($dragEl);\n        }\n        Utils.extend(scrollbar, {\n            $el: $el,\n            el: $el[0],\n            $dragEl: $dragEl,\n            dragEl: $dragEl[0],\n        });\n        if (params.draggable) {\n            scrollbar.enableDraggable();\n        }\n    },\n    destroy: function () {\n        var swiper = this;\n        swiper.scrollbar.disableDraggable();\n    },\n};\nvar scrollbar = {\n    name: 'scrollbar',\n    params: {\n        scrollbar: {\n            el: null,\n            dragSize: 'auto',\n            hide: false,\n            draggable: false,\n            snapOnRelease: true,\n            lockClass: 'swiper-scrollbar-lock',\n            dragClass: 'swiper-scrollbar-drag',\n        },\n    },\n    create: function () {\n        var swiper = this;\n        Utils.extend(swiper, {\n            scrollbar: {\n                init: Scrollbar.init.bind(swiper),\n                destroy: Scrollbar.destroy.bind(swiper),\n                updateSize: Scrollbar.updateSize.bind(swiper),\n                setTranslate: Scrollbar.setTranslate.bind(swiper),\n                setTransition: Scrollbar.setTransition.bind(swiper),\n                enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n                disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n                setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n                onDragStart: Scrollbar.onDragStart.bind(swiper),\n                onDragMove: Scrollbar.onDragMove.bind(swiper),\n                onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n                isTouched: false,\n                timeout: null,\n                dragTimeout: null,\n            },\n        });\n    },\n    on: {\n        init: function () {\n            var swiper = this;\n            swiper.scrollbar.init();\n            swiper.scrollbar.updateSize();\n            swiper.scrollbar.setTranslate();\n        },\n        update: function () {\n            var swiper = this;\n            swiper.scrollbar.updateSize();\n        },\n        resize: function () {\n            var swiper = this;\n            swiper.scrollbar.updateSize();\n        },\n        observerUpdate: function () {\n            var swiper = this;\n            swiper.scrollbar.updateSize();\n        },\n        setTranslate: function () {\n            var swiper = this;\n            swiper.scrollbar.setTranslate();\n        },\n        setTransition: function (duration) {\n            var swiper = this;\n            swiper.scrollbar.setTransition(duration);\n        },\n        destroy: function () {\n            var swiper = this;\n            swiper.scrollbar.destroy();\n        },\n    },\n};\nvar Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function (e) {\n        if (e.targetTouches.length < 2)\n            return 1;\n        var x1 = e.targetTouches[0].pageX;\n        var y1 = e.targetTouches[0].pageY;\n        var x2 = e.targetTouches[1].pageX;\n        var y2 = e.targetTouches[1].pageY;\n        var distance = Math.sqrt((Math.pow((x2 - x1), 2)) + (Math.pow((y2 - y1), 2)));\n        return distance;\n    },\n    // Events\n    onGestureStart: function (e) {\n        var swiper = this;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n        if (!Support.gestures) {\n            if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n                return;\n            }\n            zoom.fakeGestureTouched = true;\n            gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n        }\n        if (!gesture.$slideEl || !gesture.$slideEl.length) {\n            gesture.$slideEl = $(e.target).closest('.swiper-slide');\n            if (gesture.$slideEl.length === 0)\n                gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n            gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n            gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n            gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n            if (gesture.$imageWrapEl.length === 0) {\n                gesture.$imageEl = undefined;\n                return;\n            }\n        }\n        gesture.$imageEl.transition(0);\n        swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function (e) {\n        var swiper = this;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        if (!Support.gestures) {\n            if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n                return;\n            }\n            zoom.fakeGestureMoved = true;\n            gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        if (Support.gestures) {\n            zoom.scale = e.scale * zoom.currentScale;\n        }\n        else {\n            zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n        }\n        if (zoom.scale > gesture.maxRatio) {\n            zoom.scale = (gesture.maxRatio - 1) + (Math.pow(((zoom.scale - gesture.maxRatio) + 1), 0.5));\n        }\n        if (zoom.scale < params.minRatio) {\n            zoom.scale = (params.minRatio + 1) - (Math.pow(((params.minRatio - zoom.scale) + 1), 0.5));\n        }\n        gesture.$imageEl.transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n    },\n    onGestureEnd: function (e) {\n        var swiper = this;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        if (!Support.gestures) {\n            if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n                return;\n            }\n            if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n                return;\n            }\n            zoom.fakeGestureTouched = false;\n            zoom.fakeGestureMoved = false;\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n        gesture.$imageEl.transition(swiper.params.speed).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n        zoom.currentScale = zoom.scale;\n        zoom.isScaling = false;\n        if (zoom.scale === 1)\n            gesture.$slideEl = undefined;\n    },\n    onTouchStart: function (e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture, image = zoom.image;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        if (image.isTouched)\n            return;\n        if (Device.android)\n            e.preventDefault();\n        image.isTouched = true;\n        image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n        image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function (e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture, image = zoom.image, velocity = zoom.velocity;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        swiper.allowClick = false;\n        if (!image.isTouched || !gesture.$slideEl)\n            return;\n        if (!image.isMoved) {\n            image.width = gesture.$imageEl[0].offsetWidth;\n            image.height = gesture.$imageEl[0].offsetHeight;\n            image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n            image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n            gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n            gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n            gesture.$imageWrapEl.transition(0);\n            if (swiper.rtl) {\n                image.startX = -image.startX;\n                image.startY = -image.startY;\n            }\n        }\n        // Define if we need image drag\n        var scaledWidth = image.width * zoom.scale;\n        var scaledHeight = image.height * zoom.scale;\n        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight)\n            return;\n        image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n        image.maxY = -image.minY;\n        image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n        image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n        if (!image.isMoved && !zoom.isScaling) {\n            if (swiper.isHorizontal()\n                && ((Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n                    || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x))) {\n                image.isTouched = false;\n                return;\n            }\n            if (!swiper.isHorizontal()\n                && ((Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n                    || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y))) {\n                image.isTouched = false;\n                return;\n            }\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        image.isMoved = true;\n        image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n        image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n        if (image.currentX < image.minX) {\n            image.currentX = (image.minX + 1) - (Math.pow(((image.minX - image.currentX) + 1), 0.8));\n        }\n        if (image.currentX > image.maxX) {\n            image.currentX = (image.maxX - 1) + (Math.pow(((image.currentX - image.maxX) + 1), 0.8));\n        }\n        if (image.currentY < image.minY) {\n            image.currentY = (image.minY + 1) - (Math.pow(((image.minY - image.currentY) + 1), 0.8));\n        }\n        if (image.currentY > image.maxY) {\n            image.currentY = (image.maxY - 1) + (Math.pow(((image.currentY - image.maxY) + 1), 0.8));\n        }\n        // Velocity\n        if (!velocity.prevPositionX)\n            velocity.prevPositionX = image.touchesCurrent.x;\n        if (!velocity.prevPositionY)\n            velocity.prevPositionY = image.touchesCurrent.y;\n        if (!velocity.prevTime)\n            velocity.prevTime = Date.now();\n        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2)\n            velocity.x = 0;\n        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2)\n            velocity.y = 0;\n        velocity.prevPositionX = image.touchesCurrent.x;\n        velocity.prevPositionY = image.touchesCurrent.y;\n        velocity.prevTime = Date.now();\n        gesture.$imageWrapEl.transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n    },\n    onTouchEnd: function () {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture, image = zoom.image, velocity = zoom.velocity;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        if (!image.isTouched || !image.isMoved) {\n            image.isTouched = false;\n            image.isMoved = false;\n            return;\n        }\n        image.isTouched = false;\n        image.isMoved = false;\n        var momentumDurationX = 300;\n        var momentumDurationY = 300;\n        var momentumDistanceX = velocity.x * momentumDurationX;\n        var newPositionX = image.currentX + momentumDistanceX;\n        var momentumDistanceY = velocity.y * momentumDurationY;\n        var newPositionY = image.currentY + momentumDistanceY;\n        // Fix duration\n        if (velocity.x !== 0)\n            momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n        if (velocity.y !== 0)\n            momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n        var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n        image.currentX = newPositionX;\n        image.currentY = newPositionY;\n        // Define if we need image drag\n        var scaledWidth = image.width * zoom.scale;\n        var scaledHeight = image.height * zoom.scale;\n        image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n        image.maxY = -image.minY;\n        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n        gesture.$imageWrapEl.transition(momentumDuration).transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n    },\n    onTransitionEnd: function () {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n            gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n            gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n            zoom.scale = 1;\n            zoom.currentScale = 1;\n            gesture.$slideEl = undefined;\n            gesture.$imageEl = undefined;\n            gesture.$imageWrapEl = undefined;\n        }\n    },\n    // Toggle Zoom\n    toggle: function (e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        if (zoom.scale && zoom.scale !== 1) {\n            // Zoom Out\n            zoom.out();\n        }\n        else {\n            // Zoom In\n            zoom.in(e);\n        }\n    },\n    in: function (e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var params = swiper.params.zoom;\n        var gesture = zoom.gesture, image = zoom.image;\n        if (!gesture.$slideEl) {\n            gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n            gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n            gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        gesture.$slideEl.addClass(\"\" + params.zoomedSlideClass);\n        var touchX;\n        var touchY;\n        var offsetX;\n        var offsetY;\n        var diffX;\n        var diffY;\n        var translateX;\n        var translateY;\n        var imageWidth;\n        var imageHeight;\n        var scaledWidth;\n        var scaledHeight;\n        var translateMinX;\n        var translateMinY;\n        var translateMaxX;\n        var translateMaxY;\n        var slideWidth;\n        var slideHeight;\n        if (typeof image.touchesStart.x === 'undefined' && e) {\n            touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n            touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n        }\n        else {\n            touchX = image.touchesStart.x;\n            touchY = image.touchesStart.y;\n        }\n        zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (e) {\n            slideWidth = gesture.$slideEl[0].offsetWidth;\n            slideHeight = gesture.$slideEl[0].offsetHeight;\n            offsetX = gesture.$slideEl.offset().left;\n            offsetY = gesture.$slideEl.offset().top;\n            diffX = (offsetX + (slideWidth / 2)) - touchX;\n            diffY = (offsetY + (slideHeight / 2)) - touchY;\n            imageWidth = gesture.$imageEl[0].offsetWidth;\n            imageHeight = gesture.$imageEl[0].offsetHeight;\n            scaledWidth = imageWidth * zoom.scale;\n            scaledHeight = imageHeight * zoom.scale;\n            translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n            translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n            translateMaxX = -translateMinX;\n            translateMaxY = -translateMinY;\n            translateX = diffX * zoom.scale;\n            translateY = diffY * zoom.scale;\n            if (translateX < translateMinX) {\n                translateX = translateMinX;\n            }\n            if (translateX > translateMaxX) {\n                translateX = translateMaxX;\n            }\n            if (translateY < translateMinY) {\n                translateY = translateMinY;\n            }\n            if (translateY > translateMaxY) {\n                translateY = translateMaxY;\n            }\n        }\n        else {\n            translateX = 0;\n            translateY = 0;\n        }\n        gesture.$imageWrapEl.transition(300).transform(\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\");\n        gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n    },\n    out: function () {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var params = swiper.params.zoom;\n        var gesture = zoom.gesture;\n        if (!gesture.$slideEl) {\n            gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n            gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n            gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n        gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n        gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n        gesture.$slideEl.removeClass(\"\" + params.zoomedSlideClass);\n        gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function () {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        if (zoom.enabled)\n            return;\n        zoom.enabled = true;\n        var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n        // Scale image\n        if (Support.gestures) {\n            swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n            swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n            swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n        }\n        else if (swiper.touchEvents.start === 'touchstart') {\n            swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n            swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n            swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n        }\n        // Move image\n        swiper.$wrapperEl.on(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove);\n    },\n    disable: function () {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        if (!zoom.enabled)\n            return;\n        swiper.zoom.enabled = false;\n        var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n        // Scale image\n        if (Support.gestures) {\n            swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n            swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n            swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n        }\n        else if (swiper.touchEvents.start === 'touchstart') {\n            swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n            swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n            swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n        }\n        // Move image\n        swiper.$wrapperEl.off(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove);\n    },\n};\nvar zoom = {\n    name: 'zoom',\n    params: {\n        zoom: {\n            enabled: false,\n            maxRatio: 3,\n            minRatio: 1,\n            toggle: true,\n            containerClass: 'swiper-zoom-container',\n            zoomedSlideClass: 'swiper-slide-zoomed',\n        },\n    },\n    create: function () {\n        var swiper = this;\n        var zoom = {\n            enabled: false,\n            scale: 1,\n            currentScale: 1,\n            isScaling: false,\n            gesture: {\n                $slideEl: undefined,\n                slideWidth: undefined,\n                slideHeight: undefined,\n                $imageEl: undefined,\n                $imageWrapEl: undefined,\n                maxRatio: 3,\n            },\n            image: {\n                isTouched: undefined,\n                isMoved: undefined,\n                currentX: undefined,\n                currentY: undefined,\n                minX: undefined,\n                minY: undefined,\n                maxX: undefined,\n                maxY: undefined,\n                width: undefined,\n                height: undefined,\n                startX: undefined,\n                startY: undefined,\n                touchesStart: {},\n                touchesCurrent: {},\n            },\n            velocity: {\n                x: undefined,\n                y: undefined,\n                prevPositionX: undefined,\n                prevPositionY: undefined,\n                prevTime: undefined,\n            },\n        };\n        ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n            zoom[methodName] = Zoom[methodName].bind(swiper);\n        });\n        Utils.extend(swiper, {\n            zoom: zoom,\n        });\n        var scale = 1;\n        Object.defineProperty(swiper.zoom, 'scale', {\n            get: function () {\n                return scale;\n            },\n            set: function (value) {\n                if (scale !== value) {\n                    var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n                    var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n                    swiper.emit('zoomChange', value, imageEl, slideEl);\n                }\n                scale = value;\n            },\n        });\n    },\n    on: {\n        init: function () {\n            var swiper = this;\n            if (swiper.params.zoom.enabled) {\n                swiper.zoom.enable();\n            }\n        },\n        destroy: function () {\n            var swiper = this;\n            swiper.zoom.disable();\n        },\n        touchStart: function (e) {\n            var swiper = this;\n            if (!swiper.zoom.enabled)\n                return;\n            swiper.zoom.onTouchStart(e);\n        },\n        touchEnd: function (e) {\n            var swiper = this;\n            if (!swiper.zoom.enabled)\n                return;\n            swiper.zoom.onTouchEnd(e);\n        },\n        doubleTap: function (e) {\n            var swiper = this;\n            if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n                swiper.zoom.toggle(e);\n            }\n        },\n        transitionEnd: function () {\n            var swiper = this;\n            if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n                swiper.zoom.onTransitionEnd();\n            }\n        },\n    },\n};\n/* eslint no-underscore-dangle: \"off\" */\nvar Autoplay = {\n    run: function () {\n        var swiper = this;\n        var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n        var delay = swiper.params.autoplay.delay;\n        if ($activeSlideEl.attr('data-swiper-autoplay')) {\n            delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n        }\n        swiper.autoplay.timeout = Utils.nextTick(function () {\n            if (swiper.params.autoplay.reverseDirection) {\n                if (swiper.params.loop) {\n                    swiper.loopFix();\n                    swiper.slidePrev(swiper.params.speed, true, true);\n                    swiper.emit('autoplay');\n                }\n                else if (!swiper.isBeginning) {\n                    swiper.slidePrev(swiper.params.speed, true, true);\n                    swiper.emit('autoplay');\n                }\n                else if (!swiper.params.autoplay.stopOnLastSlide) {\n                    swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n                    swiper.emit('autoplay');\n                }\n                else {\n                    swiper.autoplay.stop();\n                }\n            }\n            else if (swiper.params.loop) {\n                swiper.loopFix();\n                swiper.slideNext(swiper.params.speed, true, true);\n                swiper.emit('autoplay');\n            }\n            else if (!swiper.isEnd) {\n                swiper.slideNext(swiper.params.speed, true, true);\n                swiper.emit('autoplay');\n            }\n            else if (!swiper.params.autoplay.stopOnLastSlide) {\n                swiper.slideTo(0, swiper.params.speed, true, true);\n                swiper.emit('autoplay');\n            }\n            else {\n                swiper.autoplay.stop();\n            }\n        }, delay);\n    },\n    start: function () {\n        var swiper = this;\n        if (typeof swiper.autoplay.timeout !== 'undefined')\n            return false;\n        if (swiper.autoplay.running)\n            return false;\n        swiper.autoplay.running = true;\n        swiper.emit('autoplayStart');\n        swiper.autoplay.run();\n        return true;\n    },\n    stop: function () {\n        var swiper = this;\n        if (!swiper.autoplay.running)\n            return false;\n        if (typeof swiper.autoplay.timeout === 'undefined')\n            return false;\n        if (swiper.autoplay.timeout) {\n            clearTimeout(swiper.autoplay.timeout);\n            swiper.autoplay.timeout = undefined;\n        }\n        swiper.autoplay.running = false;\n        swiper.emit('autoplayStop');\n        return true;\n    },\n    pause: function (speed) {\n        var swiper = this;\n        if (!swiper.autoplay.running)\n            return;\n        if (swiper.autoplay.paused)\n            return;\n        if (swiper.autoplay.timeout)\n            clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.paused = true;\n        if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n            swiper.autoplay.paused = false;\n            swiper.autoplay.run();\n        }\n        else {\n            swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n        }\n    },\n};\nvar autoplay = {\n    name: 'autoplay',\n    params: {\n        autoplay: {\n            enabled: false,\n            delay: 3000,\n            waitForTransition: true,\n            disableOnInteraction: true,\n            stopOnLastSlide: false,\n            reverseDirection: false,\n        },\n    },\n    create: function () {\n        var swiper = this;\n        Utils.extend(swiper, {\n            autoplay: {\n                running: false,\n                paused: false,\n                run: Autoplay.run.bind(swiper),\n                start: Autoplay.start.bind(swiper),\n                stop: Autoplay.stop.bind(swiper),\n                pause: Autoplay.pause.bind(swiper),\n                onTransitionEnd: function (e) {\n                    if (!swiper || swiper.destroyed || !swiper.$wrapperEl)\n                        return;\n                    if (e.target !== this)\n                        return;\n                    swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n                    swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n                    swiper.autoplay.paused = false;\n                    if (!swiper.autoplay.running) {\n                        swiper.autoplay.stop();\n                    }\n                    else {\n                        swiper.autoplay.run();\n                    }\n                },\n            },\n        });\n    },\n    on: {\n        init: function () {\n            var swiper = this;\n            if (swiper.params.autoplay.enabled) {\n                swiper.autoplay.start();\n            }\n        },\n        beforeTransitionStart: function (speed, internal) {\n            var swiper = this;\n            if (swiper.autoplay.running) {\n                if (internal || !swiper.params.autoplay.disableOnInteraction) {\n                    swiper.autoplay.pause(speed);\n                }\n                else {\n                    swiper.autoplay.stop();\n                }\n            }\n        },\n        sliderFirstMove: function () {\n            var swiper = this;\n            if (swiper.autoplay.running) {\n                if (swiper.params.autoplay.disableOnInteraction) {\n                    swiper.autoplay.stop();\n                }\n                else {\n                    swiper.autoplay.pause();\n                }\n            }\n        },\n        destroy: function () {\n            var swiper = this;\n            if (swiper.autoplay.running) {\n                swiper.autoplay.stop();\n            }\n        },\n    },\n};\n// Swiper Class\nvar components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n];\nif (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n}\nSwiper.use(components);\nSwiper.use([pagination, scrollbar, autoplay, zoom]);\nexport { Swiper };\n"],"sourceRoot":""}