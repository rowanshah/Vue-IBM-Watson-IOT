{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/legacy/focus-visible-70161a50.js"],"names":["__webpack_require__","r","__webpack_exports__","d","startFocusVisible","ION_FOCUSED","ION_FOCUSABLE","FOCUS_KEYS","currentFocus","keyboardMode","doc","document","setFocus","elements","forEach","el","classList","remove","add","pointerDown","addEventListener","ev","includes","key","composedPath","toFocus","filter","contains","activeElement","body"],"mappings":"gHAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,sCAAAE,IAAA,IAAAC,EAAA,cACAC,EAAA,gBACAC,EAAA,4FACAH,EAAA,WACA,IAAAI,EAAA,GACAC,GAAA,EACAC,EAAAC,SACAC,EAAA,SAAAC,GACAL,EAAAM,QAAA,SAAAC,GAA4C,OAAAA,EAAAC,UAAAC,OAAAZ,KAC5CQ,EAAAC,QAAA,SAAAC,GAAwC,OAAAA,EAAAC,UAAAE,IAAAb,KACxCG,EAAAK,GAEAM,EAAA,WACAV,GAAA,EACAG,EAAA,KAEAF,EAAAU,iBAAA,mBAAAC,GACAZ,EAAAF,EAAAe,SAAAD,EAAAE,KACAd,GACAG,EAAA,MAGAF,EAAAU,iBAAA,mBAAAC,GACA,GAAAZ,GAAAY,EAAAG,aAAA,CACA,IAAAC,EAAAJ,EAAAG,eAAAE,OAAA,SAAAX,GACA,QAAAA,EAAAC,WACAD,EAAAC,UAAAW,SAAArB,KAIAM,EAAAa,MAGAf,EAAAU,iBAAA,sBACAV,EAAAkB,gBAAAlB,EAAAmB,MACAjB,EAAA,MAGAF,EAAAU,iBAAA,aAAAD,GACAT,EAAAU,iBAAA,YAAAD","file":"js/chunk-2d2167a8.420f5b6a.js","sourcesContent":["var ION_FOCUSED = 'ion-focused';\nvar ION_FOCUSABLE = 'ion-focusable';\nvar FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp'];\nvar startFocusVisible = function () {\n    var currentFocus = [];\n    var keyboardMode = true;\n    var doc = document;\n    var setFocus = function (elements) {\n        currentFocus.forEach(function (el) { return el.classList.remove(ION_FOCUSED); });\n        elements.forEach(function (el) { return el.classList.add(ION_FOCUSED); });\n        currentFocus = elements;\n    };\n    var pointerDown = function () {\n        keyboardMode = false;\n        setFocus([]);\n    };\n    doc.addEventListener('keydown', function (ev) {\n        keyboardMode = FOCUS_KEYS.includes(ev.key);\n        if (!keyboardMode) {\n            setFocus([]);\n        }\n    });\n    doc.addEventListener('focusin', function (ev) {\n        if (keyboardMode && ev.composedPath) {\n            var toFocus = ev.composedPath().filter(function (el) {\n                if (el.classList) {\n                    return el.classList.contains(ION_FOCUSABLE);\n                }\n                return false;\n            });\n            setFocus(toFocus);\n        }\n    });\n    doc.addEventListener('focusout', function () {\n        if (doc.activeElement === doc.body) {\n            setFocus([]);\n        }\n    });\n    doc.addEventListener('touchstart', pointerDown);\n    doc.addEventListener('mousedown', pointerDown);\n};\nexport { startFocusVisible };\n"],"sourceRoot":""}