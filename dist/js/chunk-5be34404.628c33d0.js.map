{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/legacy/ion-radio_2-md.entry.js","webpack:///./node_modules/@ionic/core/dist/esm/legacy/chunk-c90aaa66.js","webpack:///./node_modules/@ionic/core/dist/esm/legacy/chunk-ba834eff.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Radio","RadioGroup","_chunk_09ec7fc0_js__WEBPACK_IMPORTED_MODULE_0__","_chunk_ba834eff_js__WEBPACK_IMPORTED_MODULE_2__","_chunk_c90aaa66_js__WEBPACK_IMPORTED_MODULE_3__","hostRef","_this","this","Object","inputId","radioButtonIds","name","disabled","checked","onFocus","ionFocus","emit","onBlur","ionBlur","onClick","ionDeselect","ionRadioDidLoad","ionRadioDidUnload","ionStyle","ionSelect","prototype","colorChanged","emitStyle","checkedChanged","isChecked","value","disabledChanged","componentWillLoad","undefined","componentDidLoad","componentDidUnload","radio-checked","interactive-disabled","render","_a","_b","color","el","mode","labelId","label","id","role","aria-disabled","aria-checked","aria-labelledby","class","assign","type","defineProperty","get","enumerable","configurable","radioGroupIds","radios","allowEmptySelection","ionChange","valueChanged","updateRadios","onRadioDidLoad","ev","radio","target","push","onRadioDidUnload","index","indexOf","splice","onRadioSelect","selectedRadio","onRadioDeselect","header","querySelector","hasChecked","_i","length","hostData","rIC","assert","clamp","debounceEvent","debounce","findItemLabel","hasShadowDom","isEndSide","now","pointerCoord","renderHiddenInput","callback","window","requestIdleCallback","setTimeout","shadowRoot","attachShadow","componentEl","itemEl","closest","always","container","input","ownerDocument","createElement","classList","add","appendChild","min","n","max","Math","actual","reason","message","console","error","Error","timeStamp","Date","changedTouches","touch","x","clientX","y","clientY","pageX","pageY","side","isRTL","document","dir","event","wait","original","_original","bind","func","timer","args","arguments","clearTimeout","apply","concat","createColorClasses","getClassMap","hostContext","openURL","tslib__WEBPACK_IMPORTED_MODULE_0__","selector","ion-color","getClassList","classes","array","Array","isArray","split","filter","c","map","trim","forEach","SCHEME","url","direction","router","test","preventDefault","componentOnReady","sent"],"mappings":"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","file":"js/chunk-5be34404.628c33d0.js","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, H as Host, e as getElement } from './chunk-09ec7fc0.js';\nimport './chunk-1074393c.js';\nimport { c as createColorClasses, h as hostContext } from './chunk-ba834eff.js';\nimport { f as findItemLabel } from './chunk-c90aaa66.js';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nvar Radio = /** @class */ (function () {\n    function Radio(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.inputId = \"ion-rb-\" + radioButtonIds++;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot interact with the radio.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the radio is selected.\n         */\n        this.checked = false;\n        this.onFocus = function () {\n            _this.ionFocus.emit();\n        };\n        this.onBlur = function () {\n            _this.ionBlur.emit();\n        };\n        this.onClick = function () {\n            if (_this.checked) {\n                _this.ionDeselect.emit();\n            }\n            else {\n                _this.checked = true;\n            }\n        };\n        this.ionRadioDidLoad = createEvent(this, \"ionRadioDidLoad\", 7);\n        this.ionRadioDidUnload = createEvent(this, \"ionRadioDidUnload\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\n        this.ionDeselect = createEvent(this, \"ionDeselect\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    }\n    Radio.prototype.colorChanged = function () {\n        this.emitStyle();\n    };\n    Radio.prototype.checkedChanged = function (isChecked) {\n        if (isChecked) {\n            this.ionSelect.emit({\n                checked: true,\n                value: this.value\n            });\n        }\n        this.emitStyle();\n    };\n    Radio.prototype.disabledChanged = function () {\n        this.emitStyle();\n    };\n    Radio.prototype.componentWillLoad = function () {\n        if (this.value === undefined) {\n            this.value = this.inputId;\n        }\n        this.emitStyle();\n    };\n    Radio.prototype.componentDidLoad = function () {\n        this.ionRadioDidLoad.emit();\n    };\n    Radio.prototype.componentDidUnload = function () {\n        this.ionRadioDidUnload.emit();\n    };\n    Radio.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'radio-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    };\n    Radio.prototype.render = function () {\n        var _a;\n        var _b = this, inputId = _b.inputId, disabled = _b.disabled, checked = _b.checked, color = _b.color, el = _b.el;\n        var mode = getIonMode(this);\n        var labelId = inputId + '-lbl';\n        var label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { onClick: this.onClick, role: \"radio\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": \"\" + checked, \"aria-labelledby\": labelId, class: Object.assign({}, createColorClasses(color), (_a = {}, _a[mode] = true, _a['in-item'] = hostContext('ion-item', el), _a['interactive'] = true, _a['radio-checked'] = checked, _a['radio-disabled'] = disabled, _a)) }, h(\"div\", { class: \"radio-icon\" }, h(\"div\", { class: \"radio-inner\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled })));\n    };\n    Object.defineProperty(Radio.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Radio, \"watchers\", {\n        get: function () {\n            return {\n                \"color\": [\"colorChanged\"],\n                \"checked\": [\"checkedChanged\"],\n                \"disabled\": [\"disabledChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Radio, \"style\", {\n        get: function () { return \":host{display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;contain:layout size style}.radio-icon,button{width:100%;height:100%}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color:var(--ion-color-step-400,#999);--color-checked:var(--ion-color-primary,#3880ff);--border-width:2px;--border-style:solid;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:50%;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:50%;width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0,0,0);transform:scale3d(0,0,0);-webkit-transition:-webkit-transform .28s cubic-bezier(.4,0,.2,1);transition:-webkit-transform .28s cubic-bezier(.4,0,.2,1);transition:transform .28s cubic-bezier(.4,0,.2,1);transition:transform .28s cubic-bezier(.4,0,.2,1),-webkit-transform .28s cubic-bezier(.4,0,.2,1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scaleX(1);transform:scaleX(1)}:host(.radio-disabled){opacity:.3}:host(.ion-focused) .radio-icon:after{border-radius:50%;left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint,#4c8dff);content:\\\"\\\";opacity:.2}:host-context([dir=rtl]).ion-focused .radio-icon:after,:host-context([dir=rtl]):host(.ion-focused) .radio-icon:after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Radio;\n}());\nvar radioButtonIds = 0;\nvar RadioGroup = /** @class */ (function () {\n    function RadioGroup(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = \"ion-rg-\" + radioGroupIds++;\n        this.labelId = this.inputId + \"-lbl\";\n        this.radios = [];\n        /**\n         * If `true`, the radios can be deselected.\n         */\n        this.allowEmptySelection = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n    }\n    RadioGroup.prototype.valueChanged = function (value) {\n        this.updateRadios();\n        this.ionChange.emit({ value: value });\n    };\n    RadioGroup.prototype.onRadioDidLoad = function (ev) {\n        var radio = ev.target;\n        radio.name = this.name;\n        // add radio to internal list\n        this.radios.push(radio);\n        // this radio-group does not have a value\n        // but this radio is checked, so let's set the\n        // radio-group's value from the checked radio\n        if (this.value == null && radio.checked) {\n            this.value = radio.value;\n        }\n        else {\n            this.updateRadios();\n        }\n    };\n    RadioGroup.prototype.onRadioDidUnload = function (ev) {\n        var index = this.radios.indexOf(ev.target);\n        if (index > -1) {\n            this.radios.splice(index, 1);\n        }\n    };\n    RadioGroup.prototype.onRadioSelect = function (ev) {\n        var selectedRadio = ev.target;\n        if (selectedRadio) {\n            this.value = selectedRadio.value;\n        }\n    };\n    RadioGroup.prototype.onRadioDeselect = function (ev) {\n        if (this.allowEmptySelection) {\n            var selectedRadio = ev.target;\n            if (selectedRadio) {\n                selectedRadio.checked = false;\n                this.value = undefined;\n            }\n        }\n    };\n    RadioGroup.prototype.componentDidLoad = function () {\n        // Get the list header if it exists and set the id\n        // this is used to set aria-labelledby\n        var header = this.el.querySelector('ion-list-header');\n        if (!header) {\n            header = this.el.querySelector('ion-item-divider');\n        }\n        if (header) {\n            var label = header.querySelector('ion-label');\n            if (label) {\n                this.labelId = label.id = this.name + '-lbl';\n            }\n        }\n        this.updateRadios();\n    };\n    RadioGroup.prototype.updateRadios = function () {\n        var value = this.value;\n        var hasChecked = false;\n        for (var _i = 0, _a = this.radios; _i < _a.length; _i++) {\n            var radio = _a[_i];\n            if (!hasChecked && radio.value === value) {\n                // correct value for this radio\n                // but this radio isn't checked yet\n                // and we haven't found a checked yet\n                hasChecked = true;\n                radio.checked = true;\n            }\n            else {\n                // this radio doesn't have the correct value\n                // or the radio group has been already checked\n                radio.checked = false;\n            }\n        }\n    };\n    RadioGroup.prototype.hostData = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return {\n            'role': 'radiogroup',\n            'aria-labelledby': this.labelId,\n            class: (_a = {},\n                _a[mode] = true,\n                _a)\n        };\n    };\n    Object.defineProperty(RadioGroup.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadioGroup, \"watchers\", {\n        get: function () {\n            return {\n                \"value\": [\"valueChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RadioGroup.prototype.render = function () { return h(Host, this.hostData()); };\n    return RadioGroup;\n}());\nvar radioGroupIds = 0;\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n","var rIC = function (callback) {\n    if ('requestIdleCallback' in window) {\n        window.requestIdleCallback(callback);\n    }\n    else {\n        setTimeout(callback, 32);\n    }\n};\nvar hasShadowDom = function (el) {\n    return !!el.shadowRoot && !!el.attachShadow;\n};\nvar findItemLabel = function (componentEl) {\n    var itemEl = componentEl.closest('ion-item');\n    if (itemEl) {\n        return itemEl.querySelector('ion-label');\n    }\n    return null;\n};\nvar renderHiddenInput = function (always, container, name, value, disabled) {\n    if (always || hasShadowDom(container)) {\n        var input = container.querySelector('input.aux-input');\n        if (!input) {\n            input = container.ownerDocument.createElement('input');\n            input.type = 'hidden';\n            input.classList.add('aux-input');\n            container.appendChild(input);\n        }\n        input.disabled = disabled;\n        input.name = name;\n        input.value = value || '';\n    }\n};\nvar clamp = function (min, n, max) {\n    return Math.max(min, Math.min(n, max));\n};\nvar assert = function (actual, reason) {\n    if (!actual) {\n        var message = 'ASSERT: ' + reason;\n        console.error(message);\n        debugger; // tslint:disable-line\n        throw new Error(message);\n    }\n};\nvar now = function (ev) {\n    return ev.timeStamp || Date.now();\n};\nvar pointerCoord = function (ev) {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    if (ev) {\n        var changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            var touch = changedTouches[0];\n            return { x: touch.clientX, y: touch.clientY };\n        }\n        if (ev.pageX !== undefined) {\n            return { x: ev.pageX, y: ev.pageY };\n        }\n    }\n    return { x: 0, y: 0 };\n};\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\nvar isEndSide = function (side) {\n    var isRTL = document.dir === 'rtl';\n    switch (side) {\n        case 'start': return isRTL;\n        case 'end': return !isRTL;\n        default:\n            throw new Error(\"\\\"\" + side + \"\\\" is not a valid value for [side]. Use \\\"start\\\" or \\\"end\\\" instead.\");\n    }\n};\nvar debounceEvent = function (event, wait) {\n    var original = event._original || event;\n    return {\n        _original: event,\n        emit: debounce(original.emit.bind(original), wait)\n    };\n};\nvar debounce = function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timer;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timer);\n        timer = setTimeout.apply(void 0, [func, wait].concat(args));\n    };\n};\nexport { rIC as a, assert as b, clamp as c, debounceEvent as d, debounce as e, findItemLabel as f, hasShadowDom as h, isEndSide as i, now as n, pointerCoord as p, renderHiddenInput as r };\n","var _this = this;\nimport * as tslib_1 from \"tslib\";\nvar hostContext = function (selector, el) {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nvar createColorClasses = function (color) {\n    var _a;\n    return (typeof color === 'string' && color.length > 0) ? (_a = {\n            'ion-color': true\n        },\n        _a[\"ion-color-\" + color] = true,\n        _a) : undefined;\n};\nvar getClassList = function (classes) {\n    if (classes !== undefined) {\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(function (c) { return c != null; })\n            .map(function (c) { return c.trim(); })\n            .filter(function (c) { return c !== ''; });\n    }\n    return [];\n};\nvar getClassMap = function (classes) {\n    var map = {};\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\n    return map;\n};\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nvar openURL = function (url, ev, direction) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n    var router;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(url != null && url[0] !== '#' && !SCHEME.test(url))) return [3 /*break*/, 2];\n                router = document.querySelector('ion-router');\n                if (!router) return [3 /*break*/, 2];\n                if (ev != null) {\n                    ev.preventDefault();\n                }\n                return [4 /*yield*/, router.componentOnReady()];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, router.push(url, direction)];\n            case 2: return [2 /*return*/, false];\n        }\n    });\n}); };\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}