{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/legacy/css-shim-3ea8955c-3ea8955c.js"],"names":["StyleNode","this","start","end","previous","parent","rules","parsedCssText","cssText","atRule","type","keyframesName","selector","parsedSelector","parse","text","clean","parseCss","lex","replace","RX","comments","port","root","length","n","i","l","OPEN_BRACE","p","push","CLOSE_BRACE","node","t","substring","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","indexOf","AT_START","MEDIA_START","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","customProp","mixinProp","mixinApply","varApply","findRegex","regex","offset","VAR_USAGE_START","VAR_ASSIGN_START","COMMENTS","TRAILING_LINES","resolveVar","props","prop","fallback","executeTemplate","findVarEndIndex","count","c","parseVar","varPos","endVar","varContent","_a","propName","slice","join","undefined","compileVar","template","varMeta","compileTemplate","params","final","findEndValue","onStr","double","removeCustomAssigns","assignPos","index","segments","resolveValues","selectors","forEach","declarations","dec","value","propsValues","entries","Object","_loop_1","dirty","key","propValue","state_1","getSelectors","filter","rule","getDeclarations","specificity","computeSpecificity","nu","_selector","IMPORTANT","FIND_DECLARATIONS","xArray","exec","normalizeValue","important","endsWith","substr","getActiveSelectors","hostEl","hostScopeMap","globalScopes","scopes","concat","getScopesForElement","selectorSet","getSelectorsForScopes","activeSelectors","matches","sortSelectors","hostTemplateMap","scope","get","parentElement","apply","sort","a","b","el","parseCSS","original","ast","usesCssVars","addGlobalStyle","styleEl","css","innerHTML","updateGlobalScopes","reScope","scopeId","map","segment","replaceScope","sel","assign","oldScopeId","newScopeId","replaceAll","input","find","RegExp","loadDocument","doc","loadDocumentStyles","loadDocumentLinks","promises","linkElms","querySelectorAll","addGlobalLink","Promise","all","styleElms","linkElm","url","href","fetch","then","rsp","hasCssVariables","parentNode","hasRelativeUrls","fixRelativeUrls","createElement","setAttribute","insertBefore","remove","catch","err","console","error","CSS_VARIABLE_REGEXP","test","CSS_URL_REGEXP","lastIndex","originalUrl","basePath","fullMatch","relativeUrl","CustomStyle","win","hostStyleMap","WeakMap","scopesMap","Map","prototype","initShim","_this","resolve","requestAnimationFrame","addLink","linkEl","updateGlobal","createHostStyle","cssScopeId","isScoped","has","Error","baseScope","registerHostTemplate","set","removeHost","delete","updateHost","window","needsShim","CSS","supports","__stencil_cssshim","document"],"mappings":"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","file":"js/chunk-74addb0e.7e7de919.js","sourcesContent":["/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n/** @unrestricted */\nvar StyleNode = /** @class */ (function () {\n    function StyleNode() {\n        this.start = 0;\n        this.end = 0;\n        this.previous = null;\n        this.parent = null;\n        this.rules = null;\n        this.parsedCssText = '';\n        this.cssText = '';\n        this.atRule = false;\n        this.type = 0;\n        this.keyframesName = '';\n        this.selector = '';\n        this.parsedSelector = '';\n    }\n    return StyleNode;\n}());\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parse(text) {\n    text = clean(text);\n    return parseCss(lex(text), text);\n}\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n    return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n    var root = new StyleNode();\n    root['start'] = 0;\n    root['end'] = text.length;\n    var n = root;\n    for (var i = 0, l = text.length; i < l; i++) {\n        if (text[i] === OPEN_BRACE) {\n            if (!n['rules']) {\n                n['rules'] = [];\n            }\n            var p = n;\n            var previous = p['rules'][p['rules'].length - 1] || null;\n            n = new StyleNode();\n            n['start'] = i + 1;\n            n['parent'] = p;\n            n['previous'] = previous;\n            p['rules'].push(n);\n        }\n        else if (text[i] === CLOSE_BRACE) {\n            n['end'] = i + 1;\n            n = n['parent'] || root;\n        }\n    }\n    return root;\n}\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n    var t = text.substring(node['start'], node['end'] - 1);\n    node['parsedCssText'] = node['cssText'] = t.trim();\n    if (node.parent) {\n        var ss = node.previous ? node.previous['end'] : node.parent['start'];\n        t = text.substring(ss, node['start'] - 1);\n        t = _expandUnicodeEscapes(t);\n        t = t.replace(RX.multipleSpaces, ' ');\n        // TODO(sorvell): ad hoc; make selector include only after last ;\n        // helps with mixin syntax\n        t = t.substring(t.lastIndexOf(';') + 1);\n        var s = node['parsedSelector'] = node['selector'] = t.trim();\n        node['atRule'] = (s.indexOf(AT_START) === 0);\n        // note, support a subset of rule types...\n        if (node['atRule']) {\n            if (s.indexOf(MEDIA_START) === 0) {\n                node['type'] = types.MEDIA_RULE;\n            }\n            else if (s.match(RX.keyframesRule)) {\n                node['type'] = types.KEYFRAMES_RULE;\n                node['keyframesName'] = node['selector'].split(RX.multipleSpaces).pop();\n            }\n        }\n        else {\n            if (s.indexOf(VAR_START) === 0) {\n                node['type'] = types.MIXIN_RULE;\n            }\n            else {\n                node['type'] = types.STYLE_RULE;\n            }\n        }\n    }\n    var r$ = node['rules'];\n    if (r$) {\n        for (var i = 0, l = r$.length, r = void 0; (i < l) && (r = r$[i]); i++) {\n            parseCss(r, text);\n        }\n    }\n    return node;\n}\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n    return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function () {\n        var code = arguments[1], repeat = 6 - code.length;\n        while (repeat--) {\n            code = '0' + code;\n        }\n        return '\\\\' + code;\n    });\n}\n/** @enum {number} */\nvar types = {\n    STYLE_RULE: 1,\n    KEYFRAMES_RULE: 7,\n    MEDIA_RULE: 4,\n    MIXIN_RULE: 1000\n};\nvar OPEN_BRACE = '{';\nvar CLOSE_BRACE = '}';\n// helper regexp's\nvar RX = {\n    comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n    port: /@import[^;]*;/gim,\n    customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n    mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n    mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n    varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n    keyframesRule: /^@[^\\s]*keyframes/,\n    multipleSpaces: /\\s+/g\n};\nvar VAR_START = '--';\nvar MEDIA_START = '@media';\nvar AT_START = '@';\nfunction findRegex(regex, cssText, offset) {\n    regex['lastIndex'] = 0;\n    var r = cssText.substring(offset).match(regex);\n    if (r) {\n        var start = offset + r['index'];\n        return {\n            start: start,\n            end: start + r[0].length\n        };\n    }\n    return null;\n}\nvar VAR_USAGE_START = /\\bvar\\(/;\nvar VAR_ASSIGN_START = /\\B--[\\w-]+\\s*:/;\nvar COMMENTS = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim;\nvar TRAILING_LINES = /^[\\t ]+\\n/gm;\nfunction resolveVar(props, prop, fallback) {\n    if (props[prop]) {\n        return props[prop];\n    }\n    if (fallback) {\n        return executeTemplate(fallback, props);\n    }\n    return '';\n}\nfunction findVarEndIndex(cssText, offset) {\n    var count = 0;\n    var i = offset;\n    for (; i < cssText.length; i++) {\n        var c = cssText[i];\n        if (c === '(') {\n            count++;\n        }\n        else if (c === ')') {\n            count--;\n            if (count <= 0) {\n                return i + 1;\n            }\n        }\n    }\n    return i;\n}\nfunction parseVar(cssText, offset) {\n    var varPos = findRegex(VAR_USAGE_START, cssText, offset);\n    if (!varPos) {\n        return null;\n    }\n    var endVar = findVarEndIndex(cssText, varPos.start);\n    var varContent = cssText.substring(varPos.end, endVar - 1);\n    var _a = varContent.split(','), propName = _a[0], fallback = _a.slice(1);\n    return {\n        start: varPos.start,\n        end: endVar,\n        propName: propName.trim(),\n        fallback: fallback.length > 0 ? fallback.join(',').trim() : undefined\n    };\n}\nfunction compileVar(cssText, template, offset) {\n    var varMeta = parseVar(cssText, offset);\n    if (!varMeta) {\n        template.push(cssText.substring(offset, cssText.length));\n        return cssText.length;\n    }\n    var propName = varMeta.propName;\n    var fallback = varMeta.fallback != null ? compileTemplate(varMeta.fallback) : undefined;\n    template.push(cssText.substring(offset, varMeta.start), function (params) { return resolveVar(params, propName, fallback); });\n    return varMeta.end;\n}\nfunction executeTemplate(template, props) {\n    var final = '';\n    for (var i = 0; i < template.length; i++) {\n        var s = template[i];\n        final += (typeof s === 'string')\n            ? s\n            : s(props);\n    }\n    return final;\n}\nfunction findEndValue(cssText, offset) {\n    var onStr = false;\n    var double = false;\n    var i = offset;\n    for (; i < cssText.length; i++) {\n        var c = cssText[i];\n        if (onStr) {\n            if (double && c === '\"') {\n                onStr = false;\n            }\n            if (!double && c === '\\'') {\n                onStr = false;\n            }\n        }\n        else {\n            if (c === '\"') {\n                onStr = true;\n                double = true;\n            }\n            else if (c === '\\'') {\n                onStr = true;\n                double = false;\n            }\n            else if (c === ';') {\n                return i + 1;\n            }\n            else if (c === '}') {\n                return i;\n            }\n        }\n    }\n    return i;\n}\nfunction removeCustomAssigns(cssText) {\n    var final = '';\n    var offset = 0;\n    while (true) {\n        var assignPos = findRegex(VAR_ASSIGN_START, cssText, offset);\n        var start = assignPos ? assignPos.start : cssText.length;\n        final += cssText.substring(offset, start);\n        if (assignPos) {\n            offset = findEndValue(cssText, start);\n        }\n        else {\n            break;\n        }\n    }\n    return final;\n}\nfunction compileTemplate(cssText) {\n    var index = 0;\n    cssText = cssText.replace(COMMENTS, '');\n    cssText = removeCustomAssigns(cssText)\n        .replace(TRAILING_LINES, '');\n    var segments = [];\n    while (index < cssText.length) {\n        index = compileVar(cssText, segments, index);\n    }\n    return segments;\n}\nfunction resolveValues(selectors) {\n    var props = {};\n    selectors.forEach(function (selector) {\n        selector.declarations.forEach(function (dec) {\n            props[dec.prop] = dec.value;\n        });\n    });\n    var propsValues = {};\n    var entries = Object.entries(props);\n    var _loop_1 = function (i) {\n        var dirty = false;\n        entries.forEach(function (_a) {\n            var key = _a[0], value = _a[1];\n            var propValue = executeTemplate(value, propsValues);\n            if (propValue !== propsValues[key]) {\n                propsValues[key] = propValue;\n                dirty = true;\n            }\n        });\n        if (!dirty) {\n            return \"break\";\n        }\n    };\n    for (var i = 0; i < 10; i++) {\n        var state_1 = _loop_1();\n        if (state_1 === \"break\")\n            break;\n    }\n    return propsValues;\n}\nfunction getSelectors(root, index) {\n    if (index === void 0) {\n        index = 0;\n    }\n    if (!root.rules) {\n        return [];\n    }\n    var selectors = [];\n    root.rules\n        .filter(function (rule) { return rule.type === types.STYLE_RULE; })\n        .forEach(function (rule) {\n        var declarations = getDeclarations(rule.cssText);\n        if (declarations.length > 0) {\n            rule.parsedSelector.split(',').forEach(function (selector) {\n                selector = selector.trim();\n                selectors.push({\n                    selector: selector,\n                    declarations: declarations,\n                    specificity: computeSpecificity(),\n                    nu: index\n                });\n            });\n        }\n        index++;\n    });\n    return selectors;\n}\nfunction computeSpecificity(_selector) {\n    return 1;\n}\nvar IMPORTANT = '!important';\nvar FIND_DECLARATIONS = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gm;\nfunction getDeclarations(cssText) {\n    var declarations = [];\n    var xArray;\n    while (xArray = FIND_DECLARATIONS.exec(cssText.trim())) {\n        var _a = normalizeValue(xArray[2]), value = _a.value, important = _a.important;\n        declarations.push({\n            prop: xArray[1].trim(),\n            value: compileTemplate(value),\n            important: important,\n        });\n    }\n    return declarations;\n}\nfunction normalizeValue(value) {\n    var regex = /\\s+/gim;\n    value = value.replace(regex, ' ').trim();\n    var important = value.endsWith(IMPORTANT);\n    if (important) {\n        value = value.substr(0, value.length - IMPORTANT.length).trim();\n    }\n    return {\n        value: value,\n        important: important\n    };\n}\nfunction getActiveSelectors(hostEl, hostScopeMap, globalScopes) {\n    // computes the css scopes that might affect this particular element\n    var scopes = globalScopes.concat(getScopesForElement(hostScopeMap, hostEl));\n    // each scope might have an array of associated selectors\n    // let's flatten the complete array of selectors from all the scopes\n    var selectorSet = getSelectorsForScopes(scopes);\n    // we filter to only the selectors that matches the hostEl\n    var activeSelectors = selectorSet.filter(function (selector) { return matches(hostEl, selector.selector); });\n    // sort selectors by specifity\n    return sortSelectors(activeSelectors);\n}\nfunction getScopesForElement(hostTemplateMap, node) {\n    var scopes = [];\n    while (node) {\n        var scope = hostTemplateMap.get(node);\n        if (scope) {\n            scopes.push(scope);\n        }\n        node = node.parentElement;\n    }\n    return scopes;\n}\nfunction getSelectorsForScopes(scopes) {\n    var selectors = [];\n    scopes.forEach(function (scope) {\n        selectors.push.apply(selectors, scope.selectors);\n    });\n    return selectors;\n}\nfunction sortSelectors(selectors) {\n    selectors.sort(function (a, b) {\n        if (a.specificity === b.specificity) {\n            return a.nu - b.nu;\n        }\n        return a.specificity - b.specificity;\n    });\n    return selectors;\n}\nfunction matches(el, selector) {\n    return selector === ':root' || selector === 'html' || el.matches(selector);\n}\nfunction parseCSS(original) {\n    var ast = parse(original);\n    var template = compileTemplate(original);\n    var selectors = getSelectors(ast);\n    return {\n        original: original,\n        template: template,\n        selectors: selectors,\n        usesCssVars: template.length > 1\n    };\n}\nfunction addGlobalStyle(globalScopes, styleEl) {\n    var css = parseCSS(styleEl.innerHTML);\n    css.styleEl = styleEl;\n    globalScopes.push(css);\n}\nfunction updateGlobalScopes(scopes) {\n    var selectors = getSelectorsForScopes(scopes);\n    var props = resolveValues(selectors);\n    scopes.forEach(function (scope) {\n        if (scope.usesCssVars) {\n            scope.styleEl.innerHTML = executeTemplate(scope.template, props);\n        }\n    });\n}\nfunction reScope(scope, scopeId) {\n    var template = scope.template.map(function (segment) {\n        return (typeof segment === 'string')\n            ? replaceScope(segment, scope.scopeId, scopeId)\n            : segment;\n    });\n    var selectors = scope.selectors.map(function (sel) {\n        return Object.assign({}, sel, { selector: replaceScope(sel.selector, scope.scopeId, scopeId) });\n    });\n    return Object.assign({}, scope, { template: template,\n        selectors: selectors,\n        scopeId: scopeId });\n}\nfunction replaceScope(original, oldScopeId, newScopeId) {\n    original = replaceAll(original, \"\\\\.\" + oldScopeId, \".\" + newScopeId);\n    return original;\n}\nfunction replaceAll(input, find, replace) {\n    return input.replace(new RegExp(find, 'g'), replace);\n}\nfunction loadDocument(doc, globalScopes) {\n    loadDocumentStyles(doc, globalScopes);\n    return loadDocumentLinks(doc, globalScopes);\n}\nfunction loadDocumentLinks(doc, globalScopes) {\n    var promises = [];\n    var linkElms = doc.querySelectorAll('link[rel=\"stylesheet\"][href]');\n    for (var i = 0; i < linkElms.length; i++) {\n        promises.push(addGlobalLink(doc, globalScopes, linkElms[i]));\n    }\n    return Promise.all(promises);\n}\nfunction loadDocumentStyles(doc, globalScopes) {\n    var styleElms = doc.querySelectorAll('style:not([data-styles])');\n    for (var i = 0; i < styleElms.length; i++) {\n        addGlobalStyle(globalScopes, styleElms[i]);\n    }\n}\nfunction addGlobalLink(doc, globalScopes, linkElm) {\n    var url = linkElm.href;\n    return fetch(url).then(function (rsp) { return rsp.text(); }).then(function (text) {\n        if (hasCssVariables(text) && linkElm.parentNode) {\n            if (hasRelativeUrls(text)) {\n                text = fixRelativeUrls(text, url);\n            }\n            var styleEl = doc.createElement('style');\n            styleEl.setAttribute('data-styles', '');\n            styleEl.innerHTML = text;\n            addGlobalStyle(globalScopes, styleEl);\n            linkElm.parentNode.insertBefore(styleEl, linkElm);\n            linkElm.remove();\n        }\n    }).catch(function (err) {\n        console.error(err);\n    });\n}\n// This regexp tries to determine when a variable is declared, for example:\n//\n// .my-el { --highlight-color: green; }\n//\n// but we don't want to trigger when a classname uses \"--\" or a pseudo-class is\n// used. We assume that the only characters that can preceed a variable\n// declaration are \"{\", from an opening block, \";\" from a preceeding rule, or a\n// space. This prevents the regexp from matching a word in a selector, since\n// they would need to start with a \".\" or \"#\". (We assume element names don't\n// start with \"--\").\nvar CSS_VARIABLE_REGEXP = /[\\s;{]--[-a-zA-Z0-9]+\\s*:/m;\nfunction hasCssVariables(css) {\n    return css.indexOf('var(') > -1 || CSS_VARIABLE_REGEXP.test(css);\n}\n// This regexp find all url() usages with relative urls\nvar CSS_URL_REGEXP = /url[\\s]*\\([\\s]*['\"]?(?![http|/])([^\\'\\\"\\)]*)[\\s]*['\"]?\\)[\\s]*/gim;\nfunction hasRelativeUrls(css) {\n    CSS_URL_REGEXP.lastIndex = 0;\n    return CSS_URL_REGEXP.test(css);\n}\nfunction fixRelativeUrls(css, originalUrl) {\n    // get the basepath from the original import url\n    var basePath = originalUrl.replace(/[^/]*$/, '');\n    // replace the relative url, with the new relative url\n    return css.replace(CSS_URL_REGEXP, function (fullMatch, url) {\n        // rhe new relative path is the base path + uri\n        // TODO: normalize relative URL\n        var relativeUrl = basePath + url;\n        return fullMatch.replace(url, relativeUrl);\n    });\n}\nvar CustomStyle = /** @class */ (function () {\n    function CustomStyle(win, doc) {\n        this.win = win;\n        this.doc = doc;\n        this.count = 0;\n        this.hostStyleMap = new WeakMap();\n        this.hostScopeMap = new WeakMap();\n        this.globalScopes = [];\n        this.scopesMap = new Map();\n    }\n    CustomStyle.prototype.initShim = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.win.requestAnimationFrame(function () {\n                loadDocument(_this.doc, _this.globalScopes).then(function () { return resolve(); });\n            });\n        });\n    };\n    CustomStyle.prototype.addLink = function (linkEl) {\n        var _this = this;\n        return addGlobalLink(this.doc, this.globalScopes, linkEl).then(function () {\n            _this.updateGlobal();\n        });\n    };\n    CustomStyle.prototype.addGlobalStyle = function (styleEl) {\n        addGlobalStyle(this.globalScopes, styleEl);\n        this.updateGlobal();\n    };\n    CustomStyle.prototype.createHostStyle = function (hostEl, cssScopeId, cssText, isScoped) {\n        if (this.hostScopeMap.has(hostEl)) {\n            throw new Error('host style already created');\n        }\n        var baseScope = this.registerHostTemplate(cssText, cssScopeId, isScoped);\n        var styleEl = this.doc.createElement('style');\n        if (!baseScope.usesCssVars) {\n            // This component does not use (read) css variables\n            styleEl.innerHTML = cssText;\n        }\n        else if (isScoped) {\n            // This component is dynamic: uses css var and is scoped\n            styleEl['s-sc'] = cssScopeId = baseScope.scopeId + \"-\" + this.count;\n            styleEl.innerHTML = '/*needs update*/';\n            this.hostStyleMap.set(hostEl, styleEl);\n            this.hostScopeMap.set(hostEl, reScope(baseScope, cssScopeId));\n            this.count++;\n        }\n        else {\n            // This component uses css vars, but it's no-encapsulation (global static)\n            baseScope.styleEl = styleEl;\n            if (!baseScope.usesCssVars) {\n                styleEl.innerHTML = executeTemplate(baseScope.template, {});\n            }\n            this.globalScopes.push(baseScope);\n            this.updateGlobal();\n            this.hostScopeMap.set(hostEl, baseScope);\n        }\n        return styleEl;\n    };\n    CustomStyle.prototype.removeHost = function (hostEl) {\n        var css = this.hostStyleMap.get(hostEl);\n        if (css) {\n            css.remove();\n        }\n        this.hostStyleMap.delete(hostEl);\n        this.hostScopeMap.delete(hostEl);\n    };\n    CustomStyle.prototype.updateHost = function (hostEl) {\n        var scope = this.hostScopeMap.get(hostEl);\n        if (scope && scope.usesCssVars && scope.isScoped) {\n            var styleEl = this.hostStyleMap.get(hostEl);\n            if (styleEl) {\n                var selectors = getActiveSelectors(hostEl, this.hostScopeMap, this.globalScopes);\n                var props = resolveValues(selectors);\n                styleEl.innerHTML = executeTemplate(scope.template, props);\n            }\n        }\n    };\n    CustomStyle.prototype.updateGlobal = function () {\n        updateGlobalScopes(this.globalScopes);\n    };\n    CustomStyle.prototype.registerHostTemplate = function (cssText, scopeId, isScoped) {\n        var scope = this.scopesMap.get(scopeId);\n        if (!scope) {\n            scope = parseCSS(cssText);\n            scope.scopeId = scopeId;\n            scope.isScoped = isScoped;\n            this.scopesMap.set(scopeId, scope);\n        }\n        return scope;\n    };\n    return CustomStyle;\n}());\nvar win = window;\nfunction needsShim() {\n    return !(win.CSS && win.CSS.supports && win.CSS.supports('color', 'var(--c)'));\n}\nif (!win.__stencil_cssshim && needsShim()) {\n    win.__stencil_cssshim = new CustomStyle(win, document);\n}\n"],"sourceRoot":""}