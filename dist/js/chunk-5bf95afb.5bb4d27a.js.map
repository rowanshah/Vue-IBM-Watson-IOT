{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/legacy/chunk-c90aaa66.js","webpack:///./node_modules/@ionic/core/dist/esm/legacy/chunk-ba834eff.js","webpack:///./node_modules/@ionic/core/dist/esm/legacy/ion-route_4.entry.js"],"names":["__webpack_require__","d","__webpack_exports__","rIC","assert","clamp","debounceEvent","debounce","findItemLabel","hasShadowDom","isEndSide","now","pointerCoord","renderHiddenInput","callback","window","requestIdleCallback","setTimeout","el","shadowRoot","attachShadow","componentEl","itemEl","closest","querySelector","always","container","name","value","disabled","input","ownerDocument","createElement","type","classList","add","appendChild","min","n","max","Math","actual","reason","message","console","error","Error","ev","timeStamp","Date","changedTouches","length","touch","x","clientX","y","clientY","undefined","pageX","pageY","side","isRTL","document","dir","event","wait","original","_original","emit","bind","func","timer","args","_i","arguments","clearTimeout","apply","concat","createColorClasses","getClassMap","hostContext","openURL","tslib__WEBPACK_IMPORTED_MODULE_0__","_this","selector","color","_a","ion-color","getClassList","classes","array","Array","isArray","split","filter","c","map","trim","forEach","SCHEME","url","direction","router","this","label","test","preventDefault","componentOnReady","sent","push","r","Route","RouteRedirect","Router","RouterLink","_chunk_09ec7fc0_js__WEBPACK_IMPORTED_MODULE_1__","_chunk_ba834eff_js__WEBPACK_IMPORTED_MODULE_3__","_chunk_c90aaa66_js__WEBPACK_IMPORTED_MODULE_4__","hostRef","Object","ionRouteDataChanged","prototype","onUpdate","newValue","onComponentProps","oldValue","keys1","keys","keys2","keys1_1","key","componentDidLoad","componentDidUnload","defineProperty","get","component","componentProps","enumerable","configurable","ionRouteRedirectChanged","propDidChange","from","to","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","s","join","chainToPath","chain","chain_1","route","_b","segment","param","params","slice","writePath","history","root","useHash","state","parsePath","pushState","replaceState","removePrefix","prefix","i","readPath","loc","pathname","hash","printRoutes","routes","group","_loop_1","ids","id","debug","routes_1","groupEnd","printRedirects","redirects","redirects_1","redirect","writeNavState","index","changed","outlet","result","e_1","trys","searchNavNode","setRouteId","element","markVisible","readNavState","node","getRouteId","waitUntilNavNode","body","Promise","resolve","addEventListener","once","QUERY","matches","matchesRedirect","expected","routeRedirect","find","matchesIDs","len","toLowerCase","matchesPath","inputPath","allparams","RouterSegments","matchesDefault","path_1","data","next","mergeParams","a","b","assign","routerIDsToChain","chains","match","maxMatches","plainIDs","chains_1","score","routerPathToChain","chains_2","matchedChain","computePriority","level","chain_2","pow","shift","readRedirects","children","tagName","readProp","readRoutes","flattenRouterTree","readRouteNodes","prop","hasAttribute","getAttribute","nodes","nodes_1","flattenNode","sub","previousPath","busy","lastState","ionRouteWillChange","ionRouteDidChange","componentWillLoad","onRoutesChanged","onRedirectChanged","onPopState","historyDirection","getPath","writeNavStateRoot","onBackButton","detail","register","back","startsWith","URL","location","href","setPath","waitPromise","printDebug","navChanged","warn","safeWriteNavState","win","title","redirectFrom","unlock","e_2","lock","p","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","routerDirection","onClick","render","mode","attrs","rel","target","class"],"mappings":"kHAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAAR,EAAAC,EAAAC,EAAA,sBAAAO,IAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,IAAAV,EAAAC,EAAAC,EAAA,sBAAAS,IAAAX,EAAAC,EAAAC,EAAA,sBAAAU,IAAAZ,EAAAC,EAAAC,EAAA,sBAAAW,IAAA,IAAAV,EAAA,SAAAW,GACA,wBAAAC,OACAA,OAAAC,oBAAAF,GAGAG,WAAAH,EAAA,KAGAL,EAAA,SAAAS,GACA,QAAAA,EAAAC,cAAAD,EAAAE,cAEAZ,EAAA,SAAAa,GACA,IAAAC,EAAAD,EAAAE,QAAA,YACA,OAAAD,EACAA,EAAAE,cAAA,aAEA,MAEAX,EAAA,SAAAY,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAJ,GAAAhB,EAAAiB,GAAA,CACA,IAAAI,EAAAJ,EAAAF,cAAA,mBACAM,IACAA,EAAAJ,EAAAK,cAAAC,cAAA,SACAF,EAAAG,KAAA,SACAH,EAAAI,UAAAC,IAAA,aACAT,EAAAU,YAAAN,IAEAA,EAAAD,WACAC,EAAAH,OACAG,EAAAF,SAAA,KAGAvB,EAAA,SAAAgC,EAAAC,EAAAC,GACA,OAAAC,KAAAD,IAAAF,EAAAG,KAAAH,IAAAC,EAAAC,KAEAnC,EAAA,SAAAqC,EAAAC,GACA,IAAAD,EAAA,CACA,IAAAE,EAAA,WAAAD,EAGA,MAFAE,QAAAC,MAAAF,GAEA,IAAAG,MAAAH,KAGAhC,EAAA,SAAAoC,GACA,OAAAA,EAAAC,WAAAC,KAAAtC,OAEAC,EAAA,SAAAmC,GAGA,GAAAA,EAAA,CACA,IAAAG,EAAAH,EAAAG,eACA,GAAAA,KAAAC,OAAA,GACA,IAAAC,EAAAF,EAAA,GACA,OAAoBG,EAAAD,EAAAE,QAAAC,EAAAH,EAAAI,SAEpB,QAAAC,IAAAV,EAAAW,MACA,OAAoBL,EAAAN,EAAAW,MAAAH,EAAAR,EAAAY,OAGpB,OAAYN,EAAA,EAAAE,EAAA,IASZ7C,EAAA,SAAAkD,GACA,IAAAC,EAAA,QAAAC,SAAAC,IACA,OAAAH,GACA,mBAAAC,EACA,iBAAAA,EACA,QACA,UAAAf,MAAA,IAAAc,EAAA,sEAGAtD,EAAA,SAAA0D,EAAAC,GACA,IAAAC,EAAAF,EAAAG,WAAAH,EACA,OACAG,UAAAH,EACAI,KAAA7D,EAAA2D,EAAAE,KAAAC,KAAAH,GAAAD,KAGA1D,EAAA,SAAA+D,EAAAL,GAEA,IAAAM,EACA,YAFA,IAAAN,IAA0BA,EAAA,GAE1B,WAEA,IADA,IAAAO,EAAA,GACAC,EAAA,EAAwBA,EAAAC,UAAAvB,OAAuBsB,IAC/CD,EAAAC,GAAAC,UAAAD,GAEAE,aAAAJ,GACAA,EAAAtD,WAAA2D,WAAA,GAAAN,EAAAL,GAAAY,OAAAL,yCC7FAxE,EAAAC,EAAAC,EAAA,sBAAA4E,IAAA9E,EAAAC,EAAAC,EAAA,sBAAA6E,IAAA/E,EAAAC,EAAAC,EAAA,sBAAA8E,IAAAhF,EAAAC,EAAAC,EAAA,sBAAA+E,IAAA,IAAAC,EAAAlF,EAAA,QAAAmF,OAAY1B,EAEZuB,EAAA,SAAAI,EAAAlE,GACA,cAAAA,EAAAK,QAAA6D,IAKAN,EAAA,SAAAO,GACA,IAAAC,EACA,wBAAAD,KAAAlC,OAAA,GAAAmC,EAAA,CACAC,aAAA,GAEAD,EAAA,aAAAD,IAAA,EACAC,QAAA7B,GAEA+B,EAAA,SAAAC,GACA,QAAAhC,IAAAgC,EAAA,CACA,IAAAC,EAAAC,MAAAC,QAAAH,OAAAI,MAAA,KACA,OAAAH,EACAI,OAAA,SAAAC,GAAkC,aAAAA,IAClCC,IAAA,SAAAD,GAA+B,OAAAA,EAAAE,SAC/BH,OAAA,SAAAC,GAAkC,WAAAA,IAElC,UAEAhB,EAAA,SAAAU,GACA,IAAAO,EAAA,GAEA,OADAR,EAAAC,GAAAS,QAAA,SAAAH,GAAgD,OAAAC,EAAAD,IAAA,IAChDC,GAEAG,EAAA,uBACAlB,EAAA,SAAAmB,EAAArD,EAAAsD,GAA6C,OAAQnB,EAAA,KAAiBC,OAAA,oBACtE,IAAAmB,EACA,OAAWpB,EAAA,KAAmBqB,KAAA,SAAAjB,GAC9B,OAAAA,EAAAkB,OACA,OACA,aAAAJ,GAAA,MAAAA,EAAA,IAAAD,EAAAM,KAAAL,GAAA,OACAE,EAAAxC,SAAAtC,cAAA,cACA8E,GACA,MAAAvD,GACAA,EAAA2D,iBAEA,GAAAJ,EAAAK,qBAJA,OAKA,OAEA,OADArB,EAAAsB,OACA,GAAAN,EAAAO,KAAAT,EAAAC,IACA,6DC/CArG,EAAA8G,EAAA5G,GAAAF,EAAAC,EAAAC,EAAA,8BAAA6G,IAAA/G,EAAAC,EAAAC,EAAA,uCAAA8G,IAAAhH,EAAAC,EAAAC,EAAA,+BAAA+G,IAAAjH,EAAAC,EAAAC,EAAA,oCAAAgH,IAAA,IAAAhC,EAAAlF,EAAA,QAAAmH,EAAAnH,EAAA,QAAAoH,GAAApH,EAAA,QAAAA,EAAA,SAAAqH,EAAArH,EAAA,QAAAmF,OAAY1B,EAMZsD,EAAA,WACA,SAAAA,EAAAO,GACQC,OAAAJ,EAAA,KAAAI,CAAgBhB,KAAAe,GAOxBf,KAAAH,IAAA,GACAG,KAAAiB,oBAAmCD,OAAAJ,EAAA,KAAAI,CAAWhB,KAAA,yBAwC9C,OAtCAQ,EAAAU,UAAAC,SAAA,SAAAC,GACApB,KAAAiB,oBAAApD,KAAAuD,IAEAZ,EAAAU,UAAAG,iBAAA,SAAAD,EAAAE,GACA,GAAAF,IAAAE,EAAA,CAGA,IAAAC,EAAAH,EAAAJ,OAAAQ,KAAAJ,GAAA,GACAK,EAAAH,EAAAN,OAAAQ,KAAAF,GAAA,GACA,GAAAC,EAAA3E,SAAA6E,EAAA7E,OAIA,QAAAsB,EAAA,EAAAwD,EAAAH,EAAyCrD,EAAAwD,EAAA9E,OAAqBsB,IAAA,CAC9D,IAAAyD,EAAAD,EAAAxD,GACA,GAAAkD,EAAAO,KAAAL,EAAAK,GAEA,YADA3B,KAAAmB,SAAAC,QANApB,KAAAmB,SAAAC,KAWAZ,EAAAU,UAAAU,iBAAA,WACA5B,KAAAiB,oBAAApD,QAEA2C,EAAAU,UAAAW,mBAAA,WACA7B,KAAAiB,oBAAApD,QAEAmD,OAAAc,eAAAtB,EAAA,YACAuB,IAAA,WACA,OACAlC,IAAA,aACAmC,UAAA,aACAC,eAAA,uBAGAC,YAAA,EACAC,cAAA,IAEA3B,EAlDA,GAoDAC,EAAA,WACA,SAAAA,EAAAM,GACQC,OAAAJ,EAAA,KAAAI,CAAgBhB,KAAAe,GACxBf,KAAAoC,wBAAuCpB,OAAAJ,EAAA,KAAAI,CAAWhB,KAAA,6BAqBlD,OAnBAS,EAAAS,UAAAmB,cAAA,WACArC,KAAAoC,wBAAAvE,QAEA4C,EAAAS,UAAAU,iBAAA,WACA5B,KAAAoC,wBAAAvE,QAEA4C,EAAAS,UAAAW,mBAAA,WACA7B,KAAAoC,wBAAAvE,QAEAmD,OAAAc,eAAArB,EAAA,YACAsB,IAAA,WACA,OACAO,KAAA,kBACAC,GAAA,oBAGAL,YAAA,EACAC,cAAA,IAEA1B,EAxBA,GA0BA+B,EAAA,OACAC,EAAA,UACAC,EAAA,OACAC,EAAA,SAAAC,GACA,IAAAC,EAAAD,EACArD,OAAA,SAAAuD,GAA8B,OAAAA,EAAAlG,OAAA,IAC9BmG,KAAA,KACA,UAAAF,GAEAG,EAAA,SAAAC,GAEA,IADA,IAAAJ,EAAA,GACA3E,EAAA,EAAAgF,EAAAD,EAAqC/E,EAAAgF,EAAAtG,OAAqBsB,IAE1D,IADA,IAAAiF,EAAAD,EAAAhF,GACAa,EAAA,EAAAqE,EAAAD,EAAAN,KAAyC9D,EAAAqE,EAAAxG,OAAgBmC,IAAA,CACzD,IAAAsE,EAAAD,EAAArE,GACA,SAAAsE,EAAA,IACA,IAAAC,EAAAH,EAAAI,QAAAJ,EAAAI,OAAAF,EAAAG,MAAA,IACA,IAAAF,EACA,YAEAT,EAAAvC,KAAAgD,OAEA,KAAAD,GACAR,EAAAvC,KAAA+C,GAIA,OAAAR,GAEAY,EAAA,SAAAC,EAAAC,EAAAC,EAAAf,EAAA/C,EAAA+D,GACA,IAAAhE,EAAA8C,EAAAmB,EAAAH,GAAArF,OAAAuE,IACAe,IACA/D,EAAA,IAAAA,GAEAC,IAAA2C,EACAiB,EAAAK,UAAAF,EAAA,GAAAhE,GAGA6D,EAAAM,aAAAH,EAAA,GAAAhE,IAGAoE,EAAA,SAAAC,EAAArB,GACA,GAAAqB,EAAAtH,OAAAiG,EAAAjG,OACA,YAEA,GAAAsH,EAAAtH,QAAA,QAAAsH,EAAA,GACA,OAAArB,EAEA,QAAAsB,EAAA,EAAmBA,EAAAD,EAAAtH,OAAmBuH,IACtC,GAAAD,EAAAC,GAAAvH,OAAA,GAAAsH,EAAAC,KAAAtB,EAAAsB,GACA,YAGA,OAAAtB,EAAAjG,SAAAsH,EAAAtH,OACA,KAEAiG,EAAAW,MAAAU,EAAAtH,SAEAwH,EAAA,SAAAC,EAAAV,EAAAC,GACA,IAAAU,EAAAD,EAAAC,SACA,GAAAV,EAAA,CACA,IAAAW,EAAAF,EAAAE,KACAD,EAAA,MAAAC,EAAA,GACAA,EAAAf,MAAA,GACA,GAEA,IAAAU,EAAAJ,EAAAH,GACAd,EAAAiB,EAAAQ,GACA,OAAAL,EAAAC,EAAArB,IAEAiB,EAAA,SAAAjB,GACA,SAAAA,EACA,WAEA,IAAAD,EAAAC,EAAAvD,MAAA,KACAG,IAAA,SAAAqD,GAA2B,OAAAA,EAAApD,SAC3BH,OAAA,SAAAuD,GAA8B,OAAAA,EAAAlG,OAAA,IAC9B,WAAAgG,EAAAhG,OACA,KAGAgG,GAGA4B,EAAA,SAAAC,GACApI,QAAAqI,MAAA,qBAAAD,EAAA7H,OAAA,KAOA,IANA,IAAA+H,EAAA,SAAA1B,GACA,IAAAJ,EAAA,GACAI,EAAAtD,QAAA,SAAAY,GAAoC,OAAAsC,EAAAvC,KAAAjC,MAAAwE,EAAAtC,EAAAsC,QACpC,IAAA+B,EAAA3B,EAAAxD,IAAA,SAAAc,GAA0C,OAAAA,EAAAsE,KAC1CxI,QAAAyI,MAAA,MAAAnC,EAAAE,GAAA,wCAAqE,WAAA+B,EAAA7B,KAAA,YAErE7E,EAAA,EAAA6G,EAAAN,EAAuCvG,EAAA6G,EAAAnI,OAAsBsB,IAAA,CAC7D,IAAA+E,EAAA8B,EAAA7G,GACAyG,EAAA1B,GAEA5G,QAAA2I,YAEAC,EAAA,SAAAC,GACA7I,QAAAqI,MAAA,wBAAAQ,EAAAtI,OAAA,KACA,QAAAsB,EAAA,EAAAiH,EAAAD,EAA6ChH,EAAAiH,EAAAvI,OAAyBsB,IAAA,CACtE,IAAAkH,EAAAD,EAAAjH,GACAkH,EAAA7C,IACAlG,QAAAyI,MAAA,eAAAnC,EAAAyC,EAAA9C,MAAA,kCAAAK,EAAAyC,EAAA7C,IAAA,qBAGAlG,QAAA2I,YAEAK,EAAA,SAAA1B,EAAAV,EAAAnD,EAAAwF,EAAAC,GAEA,YADA,IAAAA,IAA6BA,GAAA,GAClB5G,EAAA,KAAiBC,OAAA,oBAC5B,IAAA4G,EAAArC,EAAAsC,EAAAC,EACA,OAAe/G,EAAA,KAAmBqB,KAAA,SAAAjB,GAClC,OAAAA,EAAAkB,OACA,OAIA,OAHAlB,EAAA4G,KAAArF,KAAA,UACAkF,EAAAI,EAAAjC,GAEA2B,GAAArC,EAAArG,SAAA4I,EACA,GAAAD,GAEA,GAAAC,EAAApF,oBACA,OAGA,OAFArB,EAAAsB,OACA8C,EAAAF,EAAAqC,GACA,GAAAE,EAAAK,WAAA1C,EAAA0B,GAAA1B,EAAAI,OAAAzD,IACA,OAQA,OAPA2F,EAAA1G,EAAAsB,OAGAoF,EAAAF,UACAzF,EAAA0C,EACA+C,GAAA,GAEA,GAAAF,EAAAI,EAAAK,QAAA7C,EAAAnD,EAAAwF,EAAA,EAAAC,IACA,OAGA,OADAA,EAAAxG,EAAAsB,OACAoF,EAAAM,YACA,GAAAN,EAAAM,eADA,MAEA,OACAhH,EAAAsB,OACAtB,EAAAkB,MAAA,EACA,gBAAAsF,GACA,OAGA,OAFAG,EAAA3G,EAAAsB,OACAhE,QAAAC,MAAAoJ,GACA,OACA,uBAKAM,EAAA,SAAArC,GAAoC,OAAQhF,EAAA,KAAiBC,OAAA,oBAC7D,IAAAgG,EAAAY,EAAAS,EAAApB,EACA,OAAWlG,EAAA,KAAmBqB,KAAA,SAAAjB,GAC9B,OAAAA,EAAAkB,OACA,OACA2E,EAAA,GACAqB,EAAAtC,EACA5E,EAAAkB,MAAA,EACA,OAGA,OADAuF,EAAAI,EAAAK,GACAT,EACA,GAAAA,EAAAU,cADA,MAEA,OAEA,OADArB,EAAA9F,EAAAsB,OACAwE,GACAoB,EAAApB,EAAAiB,QACAjB,EAAAiB,aAAA5I,EACA0H,EAAAtE,KAAAuE,GAKA,OAFA,MAGA,mBACA,mBACA,iBAA2CD,MAAAY,iBAI3CW,EAAA,WACA,OAAAP,EAAArI,SAAA6I,MACAC,QAAAC,UAEA,IAAAD,QAAA,SAAAC,GACA9L,OAAA+L,iBAAA,iBAAAD,EAAA,CAA4DE,MAAA,OAG5DC,EAAA,6FACAb,EAAA,SAAAjC,GACA,GAAAA,EAAA,CAGA,GAAAA,EAAA+C,QAAAD,GACA,OAAA9C,EAEA,IAAA6B,EAAA7B,EAAA1I,cAAAwL,GACA,OAAAjB,QAAAtI,IAEAyJ,EAAA,SAAApL,EAAA4H,GACA,IAAAb,EAAAa,EAAAb,KAAAC,EAAAY,EAAAZ,GACA,QAAArF,IAAAqF,EACA,SAEA,GAAAD,EAAA1F,OAAArB,EAAAqB,OACA,SAEA,QAAAuH,EAAA,EAAmBA,EAAA7B,EAAA1F,OAAiBuH,IAAA,CACpC,IAAAyC,EAAAtE,EAAA6B,GACA,SAAAyC,EACA,SAEA,GAAAA,IAAArL,EAAA4I,GACA,SAGA,OAAA7B,EAAA1F,SAAArB,EAAAqB,QAEAiK,EAAA,SAAAhE,EAAA4B,GACA,OAAAA,EAAAqC,KAAA,SAAA3D,GAAyC,OAAAwD,EAAA9D,EAAAM,MAEzC4D,EAAA,SAAAnC,EAAA3B,GAGA,IAFA,IAAA+D,EAAA/K,KAAAH,IAAA8I,EAAAhI,OAAAqG,EAAArG,QACAuH,EAAA,EACUA,EAAA6C,EAAS7C,IACnB,GAAAS,EAAAT,GAAA8C,gBAAAhE,EAAAkB,GAAAU,GACA,MAGA,OAAAV,GAEA+C,EAAA,SAAAC,EAAAlE,GAIA,IAHA,IAEAmE,EAFAxE,EAAA,IAAAyE,EAAAF,GACAG,GAAA,EAEAnD,EAAA,EAAmBA,EAAAlB,EAAArG,OAAkBuH,IAAA,CACrC,IAAAtB,EAAAI,EAAAkB,GAAAtB,KACA,QAAAA,EAAA,GACAyE,GAAA,MAEA,CACA,QAAApJ,EAAA,EAAAqJ,EAAA1E,EAA2C3E,EAAAqJ,EAAA3K,OAAoBsB,IAAA,CAC/D,IAAAmF,EAAAkE,EAAArJ,GACAsJ,EAAA5E,EAAA6E,OAEA,SAAApE,EAAA,IACA,QAAAmE,EACA,YAEAJ,KAAA,GACA,IAAA7D,EAAA6D,EAAAjD,KAAAiD,EAAAjD,GAAA,IACAZ,EAAAF,EAAAG,MAAA,IAAAgE,OAEA,GAAAA,IAAAnE,EACA,YAGAiE,GAAA,GAGA,IAAAZ,GAAA,GACAY,KAAA,KAAA1E,EAAA6E,QAEA,OAAAf,EAGAU,EACAnE,EAAAxD,IAAA,SAAA0D,EAAAgB,GAA8C,OAC9CU,GAAA1B,EAAA0B,GACAhC,KAAAM,EAAAN,KACAU,OAAAmE,EAAAvE,EAAAI,OAAA6D,EAAAjD,OAGAlB,EATA,MAWAyE,EAAA,SAAAC,EAAAC,GACA,OAAAD,GAAAC,EACAA,EAEAD,IAAAC,EACAD,EAEAA,GAAAC,EACA5G,OAAA6G,OAAA,GAA+BF,EAAAC,QAD/B,GAKAE,EAAA,SAAAlD,EAAAmD,GAIA,IAHA,IAAAC,EAAA,KACAC,EAAA,EACAC,EAAAtD,EAAAnF,IAAA,SAAA0E,GAAyC,OAAAA,EAAAU,KACzC3G,EAAA,EAAAiK,EAAAJ,EAAuC7J,EAAAiK,EAAAvL,OAAsBsB,IAAA,CAC7D,IAAA+E,EAAAkF,EAAAjK,GACAkK,EAAArB,EAAAmB,EAAAjF,GACAmF,EAAAH,IACAD,EAAA/E,EACAgF,EAAAG,GAGA,OAAAJ,EACAA,EAAAvI,IAAA,SAAA0D,EAAAgB,GAA8C,OAC9CU,GAAA1B,EAAA0B,GACAhC,KAAAM,EAAAN,KACAU,OAAAmE,EAAAvE,EAAAI,OAAAqB,EAAAT,IAAAS,EAAAT,GAAAZ,WAGA,MAEA8E,EAAA,SAAAxF,EAAAkF,GAGA,IAFA,IAAAC,EAAA,KACAtB,EAAA,EACAxI,EAAA,EAAAoK,EAAAP,EAAuC7J,EAAAoK,EAAA1L,OAAsBsB,IAAA,CAC7D,IAAA+E,EAAAqF,EAAApK,GACAqK,EAAArB,EAAArE,EAAAI,GACA,UAAAsF,EAAA,CACA,IAAAH,EAAAI,EAAAD,GACAH,EAAA1B,IACAA,EAAA0B,EACAJ,EAAAO,IAIA,OAAAP,GAEAQ,EAAA,SAAAvF,GAGA,IAFA,IAAAmF,EAAA,EACAK,EAAA,EACAvK,EAAA,EAAAwK,EAAAzF,EAAqC/E,EAAAwK,EAAA9L,OAAqBsB,IAE1D,IADA,IAAAiF,EAAAuF,EAAAxK,GACAa,EAAA,EAAAqE,EAAAD,EAAAN,KAAyC9D,EAAAqE,EAAAxG,OAAgBmC,IAAA,CACzD,IAAA8D,EAAAO,EAAArE,GACA,MAAA8D,EAAA,GACAuF,GAAAnM,KAAA0M,IAAA,EAAAF,GAEA,KAAA5F,IACAuF,GAAAnM,KAAA0M,IAAA,EAAAF,IAEAA,IAGA,OAAAL,GAEAf,EAAA,WACA,SAAAA,EAAAxE,GACA7C,KAAA6C,OAAAW,QAQA,OANA6D,EAAAnG,UAAAuG,KAAA,WACA,OAAAzH,KAAA6C,KAAAjG,OAAA,EACAoD,KAAA6C,KAAA+F,QAEA,IAEAvB,EAVA,GAYAwB,EAAA,SAAAlF,GACA,OAAAvE,MAAAkD,KAAAqB,EAAAmF,UACAvJ,OAAA,SAAA5E,GAA+B,6BAAAA,EAAAoO,UAC/BtJ,IAAA,SAAA9E,GACA,IAAA4H,EAAAyG,EAAArO,EAAA,MACA,OACA2H,KAAAwB,EAAAkF,EAAArO,EAAA,SACA4H,GAAA,MAAAA,OAAArF,EAAA4G,EAAAvB,OAIA0G,EAAA,SAAAtF,GACA,OAAAuF,EAAAC,EAAAxF,KAEAwF,EAAA,SAAAxF,EAAAsC,GAEA,YADA,IAAAA,IAA0BA,EAAAtC,GAC1BvE,MAAAkD,KAAA2D,EAAA6C,UACAvJ,OAAA,SAAA5E,GAA+B,oBAAAA,EAAAoO,SAAApO,EAAAqH,YAC/BvC,IAAA,SAAA9E,GACA,IAAAqH,EAAAgH,EAAArO,EAAA,aACA,SAAAqH,EACA,UAAAzF,MAAA,kCAEA,OACAsG,KAAAiB,EAAAkF,EAAArO,EAAA,QACAkK,GAAA7C,EAAAiF,cACA1D,OAAA5I,EAAAsH,eACA6G,SAAAK,EAAAxF,EAAAhJ,OAIAqO,EAAA,SAAArO,EAAAyO,GACA,OAAAA,KAAAzO,EACAA,EAAAyO,GAEAzO,EAAA0O,aAAAD,GACAzO,EAAA2O,aAAAF,GAEA,MAEAF,EAAA,SAAAK,GAEA,IADA,IAAA9E,EAAA,GACAvG,EAAA,EAAAsL,EAAAD,EAAqCrL,EAAAsL,EAAA5M,OAAqBsB,IAAA,CAC1D,IAAA+H,EAAAuD,EAAAtL,GACAuL,EAAA,GAAAhF,EAAAwB,GAEA,OAAAxB,GAEAgF,EAAA,SAAAxG,EAAAwB,EAAAwB,GACA,IAAAnD,EAAAG,EAAAO,QAMA,GALAV,EAAAxC,KAAA,CACAuE,GAAAoB,EAAApB,GACAhC,KAAAoD,EAAApD,KACAU,OAAA0C,EAAA1C,SAEA,IAAA0C,EAAA6C,SAAAlM,OAIA,QAAAsB,EAAA,EAAAa,EAAAkH,EAAA6C,SAAwC5K,EAAAa,EAAAnC,OAAgBsB,IAAA,CACxD,IAAAwL,EAAA3K,EAAAb,GACAuL,EAAA3G,EAAA2B,EAAAiF,QALAjF,EAAAnE,KAAAwC,IAQApC,EAAA,WACA,SAAAA,EAAAK,GACQC,OAAAJ,EAAA,KAAAI,CAAgBhB,KAAAe,GACxBf,KAAA2J,aAAA,KACA3J,KAAA4J,MAAA,EACA5J,KAAA6D,MAAA,EACA7D,KAAA6J,UAAA,EAMA7J,KAAA2D,KAAA,IAeA3D,KAAA4D,SAAA,EACA5D,KAAA8J,mBAAkC9I,OAAAJ,EAAA,KAAAI,CAAWhB,KAAA,wBAC7CA,KAAA+J,kBAAiC/I,OAAAJ,EAAA,KAAAI,CAAWhB,KAAA,uBAuQ5C,OArQAU,EAAAQ,UAAA8I,kBAAA,WACA,OAAerL,EAAA,KAAiBqB,UAAA,oBAChC,OAAmBrB,EAAA,KAAmBqB,KAAA,SAAAjB,GACtC,OAAAA,EAAAkB,OACA,OAEA,OADA5D,QAAAyI,MAAA,iCACA,GAAAqB,KACA,OAGA,OAFApH,EAAAsB,OACAhE,QAAAyI,MAAA,0BACA,GAAA9E,KAAAiK,mBACA,OAEA,OADAlL,EAAAsB,OACA,UAKAK,EAAAQ,UAAAU,iBAAA,WACApH,OAAA+L,iBAAA,0BAA2DvF,OAAAF,EAAA,KAAAE,CAAQhB,KAAAkK,kBAAApM,KAAAkC,MAAA,KACnExF,OAAA+L,iBAAA,sBAAuDvF,OAAAF,EAAA,KAAAE,CAAQhB,KAAAiK,gBAAAnM,KAAAkC,MAAA,OAE/DU,EAAAQ,UAAAiJ,WAAA,WACA,IAAArK,EAAAE,KAAAoK,mBACAvH,EAAA7C,KAAAqK,UAEA,OADAhO,QAAAyI,MAAA,yCAAAjC,EAAA/C,GACAE,KAAAsK,kBAAAzH,EAAA/C,IAEAY,EAAAQ,UAAAqJ,aAAA,SAAA/N,GACA,IAAAoC,EAAAoB,KACAxD,EAAAgO,OAAAC,SAAA,aAA2C,OAAA7L,EAAA8L,UAQ3ChK,EAAAQ,UAAAZ,KAAA,SAAAT,EAAAC,QACA,IAAAA,IAAmCA,EAAA,WACnCD,EAAA8K,WAAA,OACA9K,EAAA,IAAA+K,IAAA/K,EAAArF,OAAAqQ,SAAAC,MAAAxG,UAEAjI,QAAAyI,MAAA,0CAAAjF,EAAAC,GACA,IAAA+C,EAAAiB,EAAAjE,GAEA,OADAG,KAAA+K,QAAAlI,EAAA/C,GACAE,KAAAsK,kBAAAzH,EAAA/C,IAKAY,EAAAQ,UAAAwJ,KAAA,WAEA,OADAlQ,OAAAkJ,QAAAgH,OACArE,QAAAC,QAAAtG,KAAAgL,cAGAtK,EAAAQ,UAAA+J,WAAA,WACA,OAAetM,EAAA,KAAiBqB,UAAA,oBAChC,OAAmBrB,EAAA,KAAmBqB,KAAA,SAAAjB,GAKtC,OAJA1C,QAAAyI,MAAA,eAAA9E,KAAAqK,WACAhO,QAAAyI,MAAA,gBAAA9E,KAAA2J,cACAnF,EAAAyE,EAAAjJ,KAAArF,KACAsK,EAAA4D,EAAA7I,KAAArF,KACA,SAKA+F,EAAAQ,UAAAgK,WAAA,SAAApL,GACA,OAAenB,EAAA,KAAiBqB,UAAA,oBAChC,IAAAjB,EAAA6F,EAAAY,EAAAf,EAAAxB,EAAAJ,EACA,OAAmBlE,EAAA,KAAmBqB,KAAA,SAAAoD,GACtC,OAAAA,EAAAnD,OACA,OACA,OAAAD,KAAA4J,MACAvN,QAAA8O,KAAA,yDACA,QAEA,GAAAnF,EAAAxL,OAAA+C,SAAA6I,OACA,OAIA,OAHArH,EAAAqE,EAAA/C,OAAAuE,EAAA7F,EAAA6F,IAAAY,EAAAzG,EAAAyG,OACAf,EAAAwE,EAAAjJ,KAAArF,IACAsI,EAAA6E,EAAAlD,EAAAH,GACAxB,GAIAJ,EAAAG,EAAAC,GACAJ,GAIAxG,QAAAyI,MAAA,yCAAAF,EAAA/B,GACA7C,KAAA+K,QAAAlI,EAAA/C,GACA,GAAAE,KAAAoL,kBAAA5F,EAAAvC,EAAAT,EAAAK,EAAA,KAAA+B,EAAAhI,WALAP,QAAA8O,KAAA,mFACA,UANA9O,QAAA8O,KAAA,oCAAAvG,EAAAnF,IAAA,SAAA0E,GAAoG,OAAAA,EAAAU,MACpG,QAUA,OAEA,OADAzB,EAAA/C,OACA,aAKAK,EAAAQ,UAAAgJ,kBAAA,WACA,IAAArH,EAAA7C,KAAAqK,UACAxH,GAAAgE,EAAAhE,EAAAgG,EAAA7I,KAAArF,MACAqF,KAAAsK,kBAAAzH,EAAAL,IAGA9B,EAAAQ,UAAA+I,gBAAA,WACA,OAAAjK,KAAAsK,kBAAAtK,KAAAqK,UAAA7H,IAEA9B,EAAAQ,UAAAkJ,iBAAA,WACA,IAAAiB,EAAA7Q,OACA,OAAA6Q,EAAA3H,QAAAG,QACA7D,KAAA6D,QACAwH,EAAA3H,QAAAM,aAAAhE,KAAA6D,MAAAwH,EAAA9N,SAAA+N,MAAAD,EAAA9N,SAAAsN,UAAAQ,EAAA9N,SAAAsN,SAAAC,OAEA,IAAAjH,EAAAwH,EAAA3H,QAAAG,MACAgG,EAAA7J,KAAA6J,UAEA,OADA7J,KAAA6J,UAAAhG,EACAA,EAAAgG,EACApH,EAEAoB,EAAAgG,EACAnH,EAGAF,GAGA9B,EAAAQ,UAAAoJ,kBAAA,SAAAzH,EAAA/C,GACA,OAAenB,EAAA,KAAiBqB,UAAA,oBAChC,IAAAkF,EAAAE,EAAAmG,EAAA9G,EAAAxB,EACA,OAAmBtE,EAAA,KAAmBqB,KAAA,SAAAjB,GACtC,OAAA8D,GAIAqC,EAAA2D,EAAA7I,KAAArF,IACAyK,EAAAyB,EAAAhE,EAAAqC,GACAqG,EAAA,KACAnG,IACApF,KAAA+K,QAAA3F,EAAA7C,GAAAzC,GACAyL,EAAAnG,EAAA9C,KACAO,EAAAuC,EAAA7C,IAEAkC,EAAAwE,EAAAjJ,KAAArF,IACAsI,EAAAoF,EAAAxF,EAAA4B,GACAxB,EAKA,GAAAjD,KAAAoL,kBAAA7N,SAAA6I,KAAAnD,EAAAnD,EAAA+C,EAAA0I,KAJAlP,QAAAC,MAAA,kDACA,UAfAD,QAAAC,MAAA,mDACA,aAqBAoE,EAAAQ,UAAAkK,kBAAA,SAAAnF,EAAAhD,EAAAnD,EAAA+C,EAAA0I,EAAAjG,GAEA,YADA,IAAAA,IAA+BA,EAAA,GAChB3G,EAAA,KAAiBqB,UAAA,oBAChC,IAAAwL,EAAAjG,EAAAkG,EACA,OAAmB9M,EAAA,KAAmBqB,KAAA,SAAAjB,GACtC,OAAAA,EAAAkB,OACA,gBAAAD,KAAA0L,QACA,OACAF,EAAAzM,EAAAsB,OACAkF,GAAA,EACAxG,EAAAkB,MAAA,EACA,OAEA,OADAlB,EAAA4G,KAAArF,KAAA,UACA,GAAAN,KAAAqF,cAAAY,EAAAhD,EAAAnD,EAAA+C,EAAA0I,EAAAjG,IACA,OAEA,OADAC,EAAAxG,EAAAsB,OACA,MACA,OAGA,OAFAoL,EAAA1M,EAAAsB,OACAhE,QAAAC,MAAAmP,GACA,MACA,OAEA,OADAD,IACA,GAAAjG,SAKA7E,EAAAQ,UAAAwK,KAAA,WACA,OAAe/M,EAAA,KAAiBqB,UAAA,oBAChC,IAAA2L,EAAArF,EACA,OAAmB3H,EAAA,KAAmBqB,KAAA,SAAAjB,GACtC,OAAAA,EAAAkB,OACA,OAGA,OAFA0L,EAAA3L,KAAAgL,YACAhL,KAAAgL,YAAA,IAAA3E,QAAA,SAAA9F,GAAqE,OAAA+F,EAAA/F,SACrErD,IAAAyO,EAAA,MACA,GAAAA,GACA,OACA5M,EAAAsB,OACAtB,EAAAkB,MAAA,EACA,gBAAAqG,SAKA5F,EAAAQ,UAAAmE,cAAA,SAAAY,EAAAhD,EAAAnD,EAAA+C,EAAA0I,EAAAjG,GAEA,YADA,IAAAA,IAA+BA,EAAA,GAChB3G,EAAA,KAAiBqB,UAAA,oBAChC,IAAA4L,EAAArG,EACA,OAAmB5G,EAAA,KAAmBqB,KAAA,SAAAjB,GACtC,OAAAA,EAAAkB,OACA,OACA,OAAAD,KAAA4J,MACAvN,QAAA8O,KAAA,yDACA,SAEAnL,KAAA4J,MAAA,EACAgC,EAAA5L,KAAA6L,iBAAAhJ,EAAA0I,GACAK,GACA5L,KAAA8J,mBAAAjM,KAAA+N,GAEA,GAAAvG,EAAAY,EAAAhD,EAAAnD,EAAAwF,KACA,OAUA,OATAC,EAAAxG,EAAAsB,OACAL,KAAA4J,MAAA,EACArE,GACAlJ,QAAAyI,MAAA,6BAAAjC,GAGA+I,GACA5L,KAAA+J,kBAAAlM,KAAA+N,GAEA,GAAArG,SAKA7E,EAAAQ,UAAA6J,QAAA,SAAAlI,EAAA/C,GACAE,KAAA6D,QACAJ,EAAAjJ,OAAAkJ,QAAA1D,KAAA2D,KAAA3D,KAAA4D,QAAAf,EAAA/C,EAAAE,KAAA6D,QAEAnD,EAAAQ,UAAAmJ,QAAA,WACA,OAAAjG,EAAA5J,OAAAqQ,SAAA7K,KAAA2D,KAAA3D,KAAA4D,UAEAlD,EAAAQ,UAAA2K,iBAAA,SAAAhJ,EAAAiJ,GACA,IAAAxJ,EAAAtC,KAAA2J,aACApH,EAAAI,EAAAE,GAEA,GADA7C,KAAA2J,aAAApH,EACAA,IAAAD,EACA,YAEA,IAAAyJ,EAAAD,EAAAnJ,EAAAmJ,GAAA,KACA,OACAxJ,OACAyJ,iBACAxJ,OAGAvB,OAAAc,eAAApB,EAAAQ,UAAA,MACAa,IAAA,WAA0B,OAAQf,OAAAJ,EAAA,KAAAI,CAAUhB,OAC5CkC,YAAA,EACAC,cAAA,IAEAzB,EApSA,GAsSAC,EAAA,WACA,SAAAA,EAAAI,GACA,IAAAnC,EAAAoB,KACQgB,OAAAJ,EAAA,KAAAI,CAAgBhB,KAAAe,GAKxBf,KAAAgM,gBAAA,UACAhM,KAAAiM,QAAA,SAAAzP,GACYwE,OAAAH,EAAA,KAAAG,CAAOpC,EAAAkM,KAAAtO,EAAAoC,EAAAoN,kBAkBnB,OAfArL,EAAAO,UAAAgL,OAAA,WACA,IAAAnN,EACAoN,EAAmBnL,OAAAJ,EAAA,KAAAI,CAAUhB,MAC7BoM,EAAA,CACAtB,KAAA9K,KAAA8K,KACAuB,IAAArM,KAAAqM,IACAC,OAAAtM,KAAAsM,QAEA,OAAgBtL,OAAAJ,EAAA,KAAhB,CAAkBA,EAAA,KAAI,CAAGqL,QAAAjM,KAAAiM,QAAAM,MAAAvL,OAAA6G,OAAA,GAAiD7G,OAAAH,EAAA,KAAAG,CAAkBhB,KAAAlB,QAAAC,EAAA,GAAsBA,EAAAoN,IAAA,EAAApN,EAAA,sBAAAA,KAAyDiC,OAAAJ,EAAA,KAAAI,CAAC,IAAAA,OAAA6G,OAAA,GAAsBuE,GAAUpL,OAAAJ,EAAA,KAAAI,CAAC,gBAE7MA,OAAAc,eAAAnB,EAAA,SACAoB,IAAA,WAA0B,gZAC1BG,YAAA,EACAC,cAAA,IAEAxB,EA5BA","file":"js/chunk-5bf95afb.5bb4d27a.js","sourcesContent":["var rIC = function (callback) {\n    if ('requestIdleCallback' in window) {\n        window.requestIdleCallback(callback);\n    }\n    else {\n        setTimeout(callback, 32);\n    }\n};\nvar hasShadowDom = function (el) {\n    return !!el.shadowRoot && !!el.attachShadow;\n};\nvar findItemLabel = function (componentEl) {\n    var itemEl = componentEl.closest('ion-item');\n    if (itemEl) {\n        return itemEl.querySelector('ion-label');\n    }\n    return null;\n};\nvar renderHiddenInput = function (always, container, name, value, disabled) {\n    if (always || hasShadowDom(container)) {\n        var input = container.querySelector('input.aux-input');\n        if (!input) {\n            input = container.ownerDocument.createElement('input');\n            input.type = 'hidden';\n            input.classList.add('aux-input');\n            container.appendChild(input);\n        }\n        input.disabled = disabled;\n        input.name = name;\n        input.value = value || '';\n    }\n};\nvar clamp = function (min, n, max) {\n    return Math.max(min, Math.min(n, max));\n};\nvar assert = function (actual, reason) {\n    if (!actual) {\n        var message = 'ASSERT: ' + reason;\n        console.error(message);\n        debugger; // tslint:disable-line\n        throw new Error(message);\n    }\n};\nvar now = function (ev) {\n    return ev.timeStamp || Date.now();\n};\nvar pointerCoord = function (ev) {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    if (ev) {\n        var changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            var touch = changedTouches[0];\n            return { x: touch.clientX, y: touch.clientY };\n        }\n        if (ev.pageX !== undefined) {\n            return { x: ev.pageX, y: ev.pageY };\n        }\n    }\n    return { x: 0, y: 0 };\n};\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\nvar isEndSide = function (side) {\n    var isRTL = document.dir === 'rtl';\n    switch (side) {\n        case 'start': return isRTL;\n        case 'end': return !isRTL;\n        default:\n            throw new Error(\"\\\"\" + side + \"\\\" is not a valid value for [side]. Use \\\"start\\\" or \\\"end\\\" instead.\");\n    }\n};\nvar debounceEvent = function (event, wait) {\n    var original = event._original || event;\n    return {\n        _original: event,\n        emit: debounce(original.emit.bind(original), wait)\n    };\n};\nvar debounce = function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timer;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timer);\n        timer = setTimeout.apply(void 0, [func, wait].concat(args));\n    };\n};\nexport { rIC as a, assert as b, clamp as c, debounceEvent as d, debounce as e, findItemLabel as f, hasShadowDom as h, isEndSide as i, now as n, pointerCoord as p, renderHiddenInput as r };\n","var _this = this;\nimport * as tslib_1 from \"tslib\";\nvar hostContext = function (selector, el) {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nvar createColorClasses = function (color) {\n    var _a;\n    return (typeof color === 'string' && color.length > 0) ? (_a = {\n            'ion-color': true\n        },\n        _a[\"ion-color-\" + color] = true,\n        _a) : undefined;\n};\nvar getClassList = function (classes) {\n    if (classes !== undefined) {\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(function (c) { return c != null; })\n            .map(function (c) { return c.trim(); })\n            .filter(function (c) { return c !== ''; });\n    }\n    return [];\n};\nvar getClassMap = function (classes) {\n    var map = {};\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\n    return map;\n};\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nvar openURL = function (url, ev, direction) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n    var router;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(url != null && url[0] !== '#' && !SCHEME.test(url))) return [3 /*break*/, 2];\n                router = document.querySelector('ion-router');\n                if (!router) return [3 /*break*/, 2];\n                if (ev != null) {\n                    ev.preventDefault();\n                }\n                return [4 /*yield*/, router.componentOnReady()];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, router.push(url, direction)];\n            case 2: return [2 /*return*/, false];\n        }\n    });\n}); };\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","var _this = this;\nimport * as tslib_1 from \"tslib\";\nimport { r as registerInstance, d as createEvent, e as getElement, c as getIonMode, h, H as Host } from './chunk-09ec7fc0.js';\nimport './chunk-1074393c.js';\nimport { o as openURL, c as createColorClasses } from './chunk-ba834eff.js';\nimport { e as debounce } from './chunk-c90aaa66.js';\nvar Route = /** @class */ (function () {\n    function Route(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Relative path that needs to match in order for this route to apply.\n         *\n         * Accepts paths similar to expressjs so that you can define parameters\n         * in the url /foo/:bar where bar would be available in incoming props.\n         */\n        this.url = '';\n        this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    }\n    Route.prototype.onUpdate = function (newValue) {\n        this.ionRouteDataChanged.emit(newValue);\n    };\n    Route.prototype.onComponentProps = function (newValue, oldValue) {\n        if (newValue === oldValue) {\n            return;\n        }\n        var keys1 = newValue ? Object.keys(newValue) : [];\n        var keys2 = oldValue ? Object.keys(oldValue) : [];\n        if (keys1.length !== keys2.length) {\n            this.onUpdate(newValue);\n            return;\n        }\n        for (var _i = 0, keys1_1 = keys1; _i < keys1_1.length; _i++) {\n            var key = keys1_1[_i];\n            if (newValue[key] !== oldValue[key]) {\n                this.onUpdate(newValue);\n                return;\n            }\n        }\n    };\n    Route.prototype.componentDidLoad = function () {\n        this.ionRouteDataChanged.emit();\n    };\n    Route.prototype.componentDidUnload = function () {\n        this.ionRouteDataChanged.emit();\n    };\n    Object.defineProperty(Route, \"watchers\", {\n        get: function () {\n            return {\n                \"url\": [\"onUpdate\"],\n                \"component\": [\"onUpdate\"],\n                \"componentProps\": [\"onComponentProps\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Route;\n}());\nvar RouteRedirect = /** @class */ (function () {\n    function RouteRedirect(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n    }\n    RouteRedirect.prototype.propDidChange = function () {\n        this.ionRouteRedirectChanged.emit();\n    };\n    RouteRedirect.prototype.componentDidLoad = function () {\n        this.ionRouteRedirectChanged.emit();\n    };\n    RouteRedirect.prototype.componentDidUnload = function () {\n        this.ionRouteRedirectChanged.emit();\n    };\n    Object.defineProperty(RouteRedirect, \"watchers\", {\n        get: function () {\n            return {\n                \"from\": [\"propDidChange\"],\n                \"to\": [\"propDidChange\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouteRedirect;\n}());\nvar ROUTER_INTENT_NONE = 'root';\nvar ROUTER_INTENT_FORWARD = 'forward';\nvar ROUTER_INTENT_BACK = 'back';\nvar generatePath = function (segments) {\n    var path = segments\n        .filter(function (s) { return s.length > 0; })\n        .join('/');\n    return '/' + path;\n};\nvar chainToPath = function (chain) {\n    var path = [];\n    for (var _i = 0, chain_1 = chain; _i < chain_1.length; _i++) {\n        var route = chain_1[_i];\n        for (var _a = 0, _b = route.path; _a < _b.length; _a++) {\n            var segment = _b[_a];\n            if (segment[0] === ':') {\n                var param = route.params && route.params[segment.slice(1)];\n                if (!param) {\n                    return null;\n                }\n                path.push(param);\n            }\n            else if (segment !== '') {\n                path.push(segment);\n            }\n        }\n    }\n    return path;\n};\nvar writePath = function (history, root, useHash, path, direction, state) {\n    var url = generatePath(parsePath(root).concat(path));\n    if (useHash) {\n        url = '#' + url;\n    }\n    if (direction === ROUTER_INTENT_FORWARD) {\n        history.pushState(state, '', url);\n    }\n    else {\n        history.replaceState(state, '', url);\n    }\n};\nvar removePrefix = function (prefix, path) {\n    if (prefix.length > path.length) {\n        return null;\n    }\n    if (prefix.length <= 1 && prefix[0] === '') {\n        return path;\n    }\n    for (var i = 0; i < prefix.length; i++) {\n        if (prefix[i].length > 0 && prefix[i] !== path[i]) {\n            return null;\n        }\n    }\n    if (path.length === prefix.length) {\n        return [''];\n    }\n    return path.slice(prefix.length);\n};\nvar readPath = function (loc, root, useHash) {\n    var pathname = loc.pathname;\n    if (useHash) {\n        var hash = loc.hash;\n        pathname = (hash[0] === '#')\n            ? hash.slice(1)\n            : '';\n    }\n    var prefix = parsePath(root);\n    var path = parsePath(pathname);\n    return removePrefix(prefix, path);\n};\nvar parsePath = function (path) {\n    if (path == null) {\n        return [''];\n    }\n    var segments = path.split('/')\n        .map(function (s) { return s.trim(); })\n        .filter(function (s) { return s.length > 0; });\n    if (segments.length === 0) {\n        return [''];\n    }\n    else {\n        return segments;\n    }\n};\nvar printRoutes = function (routes) {\n    console.group(\"[ion-core] ROUTES[\" + routes.length + \"]\");\n    var _loop_1 = function (chain) {\n        var path = [];\n        chain.forEach(function (r) { return path.push.apply(path, r.path); });\n        var ids = chain.map(function (r) { return r.id; });\n        console.debug(\"%c \" + generatePath(path), 'font-weight: bold; padding-left: 20px', '=>\\t', \"(\" + ids.join(', ') + \")\");\n    };\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var chain = routes_1[_i];\n        _loop_1(chain);\n    }\n    console.groupEnd();\n};\nvar printRedirects = function (redirects) {\n    console.group(\"[ion-core] REDIRECTS[\" + redirects.length + \"]\");\n    for (var _i = 0, redirects_1 = redirects; _i < redirects_1.length; _i++) {\n        var redirect = redirects_1[_i];\n        if (redirect.to) {\n            console.debug('FROM: ', \"$c \" + generatePath(redirect.from), 'font-weight: bold', ' TO: ', \"$c \" + generatePath(redirect.to), 'font-weight: bold');\n        }\n    }\n    console.groupEnd();\n};\nvar writeNavState = function (root, chain, direction, index, changed) {\n    if (changed === void 0) { changed = false; }\n    return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var outlet, route, result, e_1;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 6, , 7]);\n                    outlet = searchNavNode(root);\n                    // make sure we can continue interacting the DOM, otherwise abort\n                    if (index >= chain.length || !outlet) {\n                        return [2 /*return*/, changed];\n                    }\n                    return [4 /*yield*/, outlet.componentOnReady()];\n                case 1:\n                    _a.sent();\n                    route = chain[index];\n                    return [4 /*yield*/, outlet.setRouteId(route.id, route.params, direction)];\n                case 2:\n                    result = _a.sent();\n                    // if the outlet changed the page, reset navigation to neutral (no direction)\n                    // this means nested outlets will not animate\n                    if (result.changed) {\n                        direction = ROUTER_INTENT_NONE;\n                        changed = true;\n                    }\n                    return [4 /*yield*/, writeNavState(result.element, chain, direction, index + 1, changed)];\n                case 3:\n                    // recursively set nested outlets\n                    changed = _a.sent();\n                    if (!result.markVisible) return [3 /*break*/, 5];\n                    return [4 /*yield*/, result.markVisible()];\n                case 4:\n                    _a.sent();\n                    _a.label = 5;\n                case 5: return [2 /*return*/, changed];\n                case 6:\n                    e_1 = _a.sent();\n                    console.error(e_1);\n                    return [2 /*return*/, false];\n                case 7: return [2 /*return*/];\n            }\n        });\n    });\n};\nvar readNavState = function (root) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n    var ids, outlet, node, id;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                ids = [];\n                node = root;\n                _a.label = 1;\n            case 1:\n                if (!true) return [3 /*break*/, 5];\n                outlet = searchNavNode(node);\n                if (!outlet) return [3 /*break*/, 3];\n                return [4 /*yield*/, outlet.getRouteId()];\n            case 2:\n                id = _a.sent();\n                if (id) {\n                    node = id.element;\n                    id.element = undefined;\n                    ids.push(id);\n                }\n                else {\n                    return [3 /*break*/, 5];\n                }\n                return [3 /*break*/, 4];\n            case 3: return [3 /*break*/, 5];\n            case 4: return [3 /*break*/, 1];\n            case 5: return [2 /*return*/, { ids: ids, outlet: outlet }];\n        }\n    });\n}); };\nvar waitUntilNavNode = function () {\n    if (searchNavNode(document.body)) {\n        return Promise.resolve();\n    }\n    return new Promise(function (resolve) {\n        window.addEventListener('ionNavWillLoad', resolve, { once: true });\n    });\n};\nvar QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nvar searchNavNode = function (root) {\n    if (!root) {\n        return undefined;\n    }\n    if (root.matches(QUERY)) {\n        return root;\n    }\n    var outlet = root.querySelector(QUERY);\n    return outlet ? outlet : undefined;\n};\nvar matchesRedirect = function (input, route) {\n    var from = route.from, to = route.to;\n    if (to === undefined) {\n        return false;\n    }\n    if (from.length > input.length) {\n        return false;\n    }\n    for (var i = 0; i < from.length; i++) {\n        var expected = from[i];\n        if (expected === '*') {\n            return true;\n        }\n        if (expected !== input[i]) {\n            return false;\n        }\n    }\n    return from.length === input.length;\n};\nvar routeRedirect = function (path, routes) {\n    return routes.find(function (route) { return matchesRedirect(path, route); });\n};\nvar matchesIDs = function (ids, chain) {\n    var len = Math.min(ids.length, chain.length);\n    var i = 0;\n    for (; i < len; i++) {\n        if (ids[i].toLowerCase() !== chain[i].id) {\n            break;\n        }\n    }\n    return i;\n};\nvar matchesPath = function (inputPath, chain) {\n    var segments = new RouterSegments(inputPath);\n    var matchesDefault = false;\n    var allparams;\n    for (var i = 0; i < chain.length; i++) {\n        var path = chain[i].path;\n        if (path[0] === '') {\n            matchesDefault = true;\n        }\n        else {\n            for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n                var segment = path_1[_i];\n                var data = segments.next();\n                // data param\n                if (segment[0] === ':') {\n                    if (data === '') {\n                        return null;\n                    }\n                    allparams = allparams || [];\n                    var params = allparams[i] || (allparams[i] = {});\n                    params[segment.slice(1)] = data;\n                }\n                else if (data !== segment) {\n                    return null;\n                }\n            }\n            matchesDefault = false;\n        }\n    }\n    var matches = (matchesDefault)\n        ? matchesDefault === (segments.next() === '')\n        : true;\n    if (!matches) {\n        return null;\n    }\n    if (allparams) {\n        return chain.map(function (route, i) { return ({\n            id: route.id,\n            path: route.path,\n            params: mergeParams(route.params, allparams[i])\n        }); });\n    }\n    return chain;\n};\nvar mergeParams = function (a, b) {\n    if (!a && b) {\n        return b;\n    }\n    else if (a && !b) {\n        return a;\n    }\n    else if (a && b) {\n        return Object.assign({}, a, b);\n    }\n    return undefined;\n};\nvar routerIDsToChain = function (ids, chains) {\n    var match = null;\n    var maxMatches = 0;\n    var plainIDs = ids.map(function (i) { return i.id; });\n    for (var _i = 0, chains_1 = chains; _i < chains_1.length; _i++) {\n        var chain = chains_1[_i];\n        var score = matchesIDs(plainIDs, chain);\n        if (score > maxMatches) {\n            match = chain;\n            maxMatches = score;\n        }\n    }\n    if (match) {\n        return match.map(function (route, i) { return ({\n            id: route.id,\n            path: route.path,\n            params: mergeParams(route.params, ids[i] && ids[i].params)\n        }); });\n    }\n    return null;\n};\nvar routerPathToChain = function (path, chains) {\n    var match = null;\n    var matches = 0;\n    for (var _i = 0, chains_2 = chains; _i < chains_2.length; _i++) {\n        var chain = chains_2[_i];\n        var matchedChain = matchesPath(path, chain);\n        if (matchedChain !== null) {\n            var score = computePriority(matchedChain);\n            if (score > matches) {\n                matches = score;\n                match = matchedChain;\n            }\n        }\n    }\n    return match;\n};\nvar computePriority = function (chain) {\n    var score = 1;\n    var level = 1;\n    for (var _i = 0, chain_2 = chain; _i < chain_2.length; _i++) {\n        var route = chain_2[_i];\n        for (var _a = 0, _b = route.path; _a < _b.length; _a++) {\n            var path = _b[_a];\n            if (path[0] === ':') {\n                score += Math.pow(1, level);\n            }\n            else if (path !== '') {\n                score += Math.pow(2, level);\n            }\n            level++;\n        }\n    }\n    return score;\n};\nvar RouterSegments = /** @class */ (function () {\n    function RouterSegments(path) {\n        this.path = path.slice();\n    }\n    RouterSegments.prototype.next = function () {\n        if (this.path.length > 0) {\n            return this.path.shift();\n        }\n        return '';\n    };\n    return RouterSegments;\n}());\nvar readRedirects = function (root) {\n    return Array.from(root.children)\n        .filter(function (el) { return el.tagName === 'ION-ROUTE-REDIRECT'; })\n        .map(function (el) {\n        var to = readProp(el, 'to');\n        return {\n            from: parsePath(readProp(el, 'from')),\n            to: to == null ? undefined : parsePath(to),\n        };\n    });\n};\nvar readRoutes = function (root) {\n    return flattenRouterTree(readRouteNodes(root));\n};\nvar readRouteNodes = function (root, node) {\n    if (node === void 0) { node = root; }\n    return Array.from(node.children)\n        .filter(function (el) { return el.tagName === 'ION-ROUTE' && el.component; })\n        .map(function (el) {\n        var component = readProp(el, 'component');\n        if (component == null) {\n            throw new Error('component missing in ion-route');\n        }\n        return {\n            path: parsePath(readProp(el, 'url')),\n            id: component.toLowerCase(),\n            params: el.componentProps,\n            children: readRouteNodes(root, el)\n        };\n    });\n};\nvar readProp = function (el, prop) {\n    if (prop in el) {\n        return el[prop];\n    }\n    if (el.hasAttribute(prop)) {\n        return el.getAttribute(prop);\n    }\n    return null;\n};\nvar flattenRouterTree = function (nodes) {\n    var routes = [];\n    for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n        var node = nodes_1[_i];\n        flattenNode([], routes, node);\n    }\n    return routes;\n};\nvar flattenNode = function (chain, routes, node) {\n    var s = chain.slice();\n    s.push({\n        id: node.id,\n        path: node.path,\n        params: node.params\n    });\n    if (node.children.length === 0) {\n        routes.push(s);\n        return;\n    }\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var sub = _a[_i];\n        flattenNode(s, routes, sub);\n    }\n};\nvar Router = /** @class */ (function () {\n    function Router(hostRef) {\n        registerInstance(this, hostRef);\n        this.previousPath = null;\n        this.busy = false;\n        this.state = 0;\n        this.lastState = 0;\n        /**\n         * By default `ion-router` will match the routes at the root path (\"/\").\n         * That can be changed when\n         *\n         */\n        this.root = '/';\n        /**\n         * The router can work in two \"modes\":\n         * - With hash: `/index.html#/path/to/page`\n         * - Without hash: `/path/to/page`\n         *\n         * Using one or another might depend in the requirements of your app and/or where it's deployed.\n         *\n         * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n         * requires additional server-side configuration in order to properly work.\n         *\n         * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n         *\n         * By default, this property is `true`, change to `false` to allow hash-less URLs.\n         */\n        this.useHash = true;\n        this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n        this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    }\n    Router.prototype.componentWillLoad = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.debug('[ion-router] router will load');\n                        return [4 /*yield*/, waitUntilNavNode()];\n                    case 1:\n                        _a.sent();\n                        console.debug('[ion-router] found nav');\n                        return [4 /*yield*/, this.onRoutesChanged()];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Router.prototype.componentDidLoad = function () {\n        window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n        window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    };\n    Router.prototype.onPopState = function () {\n        var direction = this.historyDirection();\n        var path = this.getPath();\n        console.debug('[ion-router] URL changed -> update nav', path, direction);\n        return this.writeNavStateRoot(path, direction);\n    };\n    Router.prototype.onBackButton = function (ev) {\n        var _this = this;\n        ev.detail.register(0, function () { return _this.back(); });\n    };\n    /**\n     * Navigate to the specified URL.\n     *\n     * @param url The url to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n    Router.prototype.push = function (url, direction) {\n        if (direction === void 0) { direction = 'forward'; }\n        if (url.startsWith('.')) {\n            url = (new URL(url, window.location.href)).pathname;\n        }\n        console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n        var path = parsePath(url);\n        this.setPath(path, direction);\n        return this.writeNavStateRoot(path, direction);\n    };\n    /**\n     * Go back to previous page in the window.history.\n     */\n    Router.prototype.back = function () {\n        window.history.back();\n        return Promise.resolve(this.waitPromise);\n    };\n    /** @internal */\n    Router.prototype.printDebug = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                console.debug('CURRENT PATH', this.getPath());\n                console.debug('PREVIOUS PATH', this.previousPath);\n                printRoutes(readRoutes(this.el));\n                printRedirects(readRedirects(this.el));\n                return [2 /*return*/];\n            });\n        });\n    };\n    /** @internal */\n    Router.prototype.navChanged = function (direction) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, ids, outlet, routes, chain, path;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (this.busy) {\n                            console.warn('[ion-router] router is busy, navChanged was cancelled');\n                            return [2 /*return*/, false];\n                        }\n                        return [4 /*yield*/, readNavState(window.document.body)];\n                    case 1:\n                        _a = _b.sent(), ids = _a.ids, outlet = _a.outlet;\n                        routes = readRoutes(this.el);\n                        chain = routerIDsToChain(ids, routes);\n                        if (!chain) {\n                            console.warn('[ion-router] no matching URL for ', ids.map(function (i) { return i.id; }));\n                            return [2 /*return*/, false];\n                        }\n                        path = chainToPath(chain);\n                        if (!path) {\n                            console.warn('[ion-router] router could not match path because some required param is missing');\n                            return [2 /*return*/, false];\n                        }\n                        console.debug('[ion-router] nav changed -> update URL', ids, path);\n                        this.setPath(path, direction);\n                        return [4 /*yield*/, this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length)];\n                    case 2:\n                        _b.sent();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    Router.prototype.onRedirectChanged = function () {\n        var path = this.getPath();\n        if (path && routeRedirect(path, readRedirects(this.el))) {\n            this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n        }\n    };\n    Router.prototype.onRoutesChanged = function () {\n        return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n    };\n    Router.prototype.historyDirection = function () {\n        var win = window;\n        if (win.history.state === null) {\n            this.state++;\n            win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n        }\n        var state = win.history.state;\n        var lastState = this.lastState;\n        this.lastState = state;\n        if (state > lastState) {\n            return ROUTER_INTENT_FORWARD;\n        }\n        else if (state < lastState) {\n            return ROUTER_INTENT_BACK;\n        }\n        else {\n            return ROUTER_INTENT_NONE;\n        }\n    };\n    Router.prototype.writeNavStateRoot = function (path, direction) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var redirects, redirect, redirectFrom, routes, chain;\n            return tslib_1.__generator(this, function (_a) {\n                if (!path) {\n                    console.error('[ion-router] URL is not part of the routing set');\n                    return [2 /*return*/, false];\n                }\n                redirects = readRedirects(this.el);\n                redirect = routeRedirect(path, redirects);\n                redirectFrom = null;\n                if (redirect) {\n                    this.setPath(redirect.to, direction);\n                    redirectFrom = redirect.from;\n                    path = redirect.to;\n                }\n                routes = readRoutes(this.el);\n                chain = routerPathToChain(path, routes);\n                if (!chain) {\n                    console.error('[ion-router] the path does not match any route');\n                    return [2 /*return*/, false];\n                }\n                // write DOM give\n                return [2 /*return*/, this.safeWriteNavState(document.body, chain, direction, path, redirectFrom)];\n            });\n        });\n    };\n    Router.prototype.safeWriteNavState = function (node, chain, direction, path, redirectFrom, index) {\n        if (index === void 0) { index = 0; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var unlock, changed, e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.lock()];\n                    case 1:\n                        unlock = _a.sent();\n                        changed = false;\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this.writeNavState(node, chain, direction, path, redirectFrom, index)];\n                    case 3:\n                        changed = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        e_2 = _a.sent();\n                        console.error(e_2);\n                        return [3 /*break*/, 5];\n                    case 5:\n                        unlock();\n                        return [2 /*return*/, changed];\n                }\n            });\n        });\n    };\n    Router.prototype.lock = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var p, resolve;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        p = this.waitPromise;\n                        this.waitPromise = new Promise(function (r) { return resolve = r; });\n                        if (!(p !== undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, p];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, resolve];\n                }\n            });\n        });\n    };\n    Router.prototype.writeNavState = function (node, chain, direction, path, redirectFrom, index) {\n        if (index === void 0) { index = 0; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var routeEvent, changed;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.busy) {\n                            console.warn('[ion-router] router is busy, transition was cancelled');\n                            return [2 /*return*/, false];\n                        }\n                        this.busy = true;\n                        routeEvent = this.routeChangeEvent(path, redirectFrom);\n                        if (routeEvent) {\n                            this.ionRouteWillChange.emit(routeEvent);\n                        }\n                        return [4 /*yield*/, writeNavState(node, chain, direction, index)];\n                    case 1:\n                        changed = _a.sent();\n                        this.busy = false;\n                        if (changed) {\n                            console.debug('[ion-router] route changed', path);\n                        }\n                        // emit did change\n                        if (routeEvent) {\n                            this.ionRouteDidChange.emit(routeEvent);\n                        }\n                        return [2 /*return*/, changed];\n                }\n            });\n        });\n    };\n    Router.prototype.setPath = function (path, direction) {\n        this.state++;\n        writePath(window.history, this.root, this.useHash, path, direction, this.state);\n    };\n    Router.prototype.getPath = function () {\n        return readPath(window.location, this.root, this.useHash);\n    };\n    Router.prototype.routeChangeEvent = function (path, redirectFromPath) {\n        var from = this.previousPath;\n        var to = generatePath(path);\n        this.previousPath = to;\n        if (to === from) {\n            return null;\n        }\n        var redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n        return {\n            from: from,\n            redirectedFrom: redirectedFrom,\n            to: to,\n        };\n    };\n    Object.defineProperty(Router.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    return Router;\n}());\nvar RouterLink = /** @class */ (function () {\n    function RouterLink(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = function (ev) {\n            openURL(_this.href, ev, _this.routerDirection);\n        };\n    }\n    RouterLink.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        var attrs = {\n            href: this.href,\n            rel: this.rel,\n            target: this.target\n        };\n        return (h(Host, { onClick: this.onClick, class: Object.assign({}, createColorClasses(this.color), (_a = {}, _a[mode] = true, _a['ion-activatable'] = true, _a)) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    };\n    Object.defineProperty(RouterLink, \"style\", {\n        get: function () { return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLink;\n}());\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"],"sourceRoot":""}