{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/legacy/ion-segment_2-md.entry.js","webpack:///./node_modules/@ionic/core/dist/esm/legacy/chunk-ba834eff.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Segment","SegmentButton","_chunk_09ec7fc0_js__WEBPACK_IMPORTED_MODULE_0__","_chunk_ba834eff_js__WEBPACK_IMPORTED_MODULE_2__","hostRef","Object","this","disabled","scrollable","ionChange","ionStyle","prototype","valueChanged","value","updateButtons","emit","segmentClick","ev","selectedButton","target","componentWillLoad","emitStyle","componentDidLoad","checked","getButtons","find","b","segment","_i","_a","length","button","Array","from","el","querySelectorAll","hostData","mode","class","assign","color","defineProperty","get","enumerable","configurable","render","ids","_this","layout","type","onClick","ionSelect","checkedChanged","prev","querySelector","_b","hasIcon","hasLabel","aria-disabled","aria-pressed","createColorClasses","getClassMap","hostContext","openURL","tslib__WEBPACK_IMPORTED_MODULE_0__","undefined","selector","closest","ion-color","getClassList","classes","array","isArray","split","filter","c","map","trim","forEach","SCHEME","url","direction","router","label","test","document","preventDefault","componentOnReady","sent","push"],"mappings":"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","file":"js/chunk-5ea76ddb.10e49265.js","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, e as getElement, h, H as Host } from './chunk-09ec7fc0.js';\nimport './chunk-1074393c.js';\nimport { c as createColorClasses } from './chunk-ba834eff.js';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nvar Segment = /** @class */ (function () {\n    function Segment(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * If `true`, the user cannot interact with the segment.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the segment buttons will overflow and the user can swipe to see them.\n         */\n        this.scrollable = false;\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    Segment.prototype.valueChanged = function (value) {\n        this.updateButtons();\n        this.ionChange.emit({ value: value });\n    };\n    Segment.prototype.segmentClick = function (ev) {\n        var selectedButton = ev.target;\n        this.value = selectedButton.value;\n    };\n    Segment.prototype.componentWillLoad = function () {\n        this.emitStyle();\n    };\n    Segment.prototype.componentDidLoad = function () {\n        if (this.value == null) {\n            var checked = this.getButtons().find(function (b) { return b.checked; });\n            if (checked) {\n                this.value = checked.value;\n            }\n        }\n        this.updateButtons();\n    };\n    Segment.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'segment': true\n        });\n    };\n    Segment.prototype.updateButtons = function () {\n        var value = this.value;\n        for (var _i = 0, _a = this.getButtons(); _i < _a.length; _i++) {\n            var button = _a[_i];\n            button.checked = (button.value === value);\n        }\n    };\n    Segment.prototype.getButtons = function () {\n        return Array.from(this.el.querySelectorAll('ion-segment-button'));\n    };\n    Segment.prototype.hostData = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return {\n            class: Object.assign({}, createColorClasses(this.color), (_a = {}, _a[mode] = true, _a['segment-disabled'] = this.disabled, _a['segment-scrollable'] = this.scrollable, _a))\n        };\n    };\n    Object.defineProperty(Segment.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Segment, \"watchers\", {\n        get: function () {\n            return {\n                \"value\": [\"valueChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Segment.prototype.render = function () { return h(Host, this.hostData()); };\n    Object.defineProperty(Segment, \"style\", {\n        get: function () { return \".sc-ion-segment-md-h{--indicator-color-checked:initial;--ripple-color:currentColor;--color-activated:initial;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;font-family:var(--ion-font-family,inherit);text-align:center}.sc-ion-segment-md-s > .segment-button-disabled, .segment-disabled.sc-ion-segment-md-h{pointer-events:none}.segment-scrollable.sc-ion-segment-md-h{-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:scroll}.segment-scrollable.sc-ion-segment-md-h::-webkit-scrollbar{display:none}.sc-ion-segment-md-h{--background:none;--background-checked:none;--background-hover:rgba(var(--ion-color-primary-rgb,56,128,255),0.04);--background-activated:rgba(var(--ion-color-primary-rgb,56,128,255),0.16);--color:rgba(var(--ion-text-color-rgb,0,0,0),0.6);--color-checked:var(--ion-color-primary,#3880ff);--color-checked-disabled:var(--color-checked);--indicator-color:transparent}.segment-disabled.sc-ion-segment-md-h{opacity:.3}.sc-ion-segment-md-h.ion-color.sc-ion-segment-md-s > ion-segment-button{--background-activated:rgba(var(--ion-color-base-rgb),0.16);--ripple-color:var(--ion-color-base);background:transparent;color:rgba(var(--ion-text-color-rgb,0,0,0),.6)}.sc-ion-segment-md-h.ion-color.sc-ion-segment-md-s > .segment-button-checked{--indicator-color-checked:var(--ion-color-base);color:var(--ion-color-base)}.sc-ion-segment-md-h.ion-color.sc-ion-segment-md-s > .segment-button-checked.activated{color:var(--ion-color-base)}\\@media (any-hover:hover){.sc-ion-segment-md-h.ion-color.sc-ion-segment-md-s > ion-segment-button:hover{background:rgba(var(--ion-color-base-rgb),.04)}}.sc-ion-segment-md-hion-toolbar:not(.ion-color):not(.ion-color).sc-ion-segment-md-s > ion-segment-button, ion-toolbar:not(.ion-color) .sc-ion-segment-md-h:not(.ion-color).sc-ion-segment-md-s > ion-segment-button{color:var(--ion-toolbar-color-unchecked,var(--color))}.sc-ion-segment-md-hion-toolbar:not(.ion-color):not(.ion-color).sc-ion-segment-md-s > .segment-button-checked, ion-toolbar:not(.ion-color) .sc-ion-segment-md-h:not(.ion-color).sc-ion-segment-md-s > .segment-button-checked{--indicator-color-checked:var(--ion-toolbar-color-checked,var(--color-checked));color:var(--ion-toolbar-color-checked,var(--color-checked))}.sc-ion-segment-md-hion-toolbar.ion-color:not(.ion-color).sc-ion-segment-md-s > ion-segment-button, ion-toolbar.ion-color .sc-ion-segment-md-h:not(.ion-color).sc-ion-segment-md-s > ion-segment-button{--background-hover:rgba(var(--ion-color-contrast-rgb),0.04);--background-activated:var(--ion-color-base);--color:rgba(var(--ion-color-contrast-rgb),0.6);--color-checked:var(--ion-color-contrast);--indicator-color-checked:var(--ion-color-contrast)}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Segment;\n}());\nvar ids = 0;\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nvar SegmentButton = /** @class */ (function () {\n    function SegmentButton(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /**\n         * If `true`, the segment button is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the user cannot interact with the segment button.\n         */\n        this.disabled = false;\n        /**\n         * Set the layout of the text and icon in the segment.\n         */\n        this.layout = 'icon-top';\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        /**\n         * The value of the segment button.\n         */\n        this.value = 'ion-sb-' + (ids++);\n        this.onClick = function () {\n            _this.checked = true;\n        };\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\n    }\n    SegmentButton.prototype.checkedChanged = function (checked, prev) {\n        if (checked && !prev) {\n            this.ionSelect.emit();\n        }\n    };\n    Object.defineProperty(SegmentButton.prototype, \"hasLabel\", {\n        get: function () {\n            return !!this.el.querySelector('ion-label');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SegmentButton.prototype, \"hasIcon\", {\n        get: function () {\n            return !!this.el.querySelector('ion-icon');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SegmentButton.prototype.render = function () {\n        var _a;\n        var _b = this, checked = _b.checked, type = _b.type, disabled = _b.disabled, hasIcon = _b.hasIcon, hasLabel = _b.hasLabel, layout = _b.layout;\n        var mode = getIonMode(this);\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, class: (_a = {},\n                _a[mode] = true,\n                _a['segment-button-has-label'] = hasLabel,\n                _a['segment-button-has-icon'] = hasIcon,\n                _a['segment-button-has-label-only'] = hasLabel && !hasIcon,\n                _a['segment-button-has-icon-only'] = hasIcon && !hasLabel,\n                _a['segment-button-disabled'] = disabled,\n                _a['segment-button-checked'] = checked,\n                _a[\"segment-button-layout-\" + layout] = true,\n                _a['ion-activatable'] = true,\n                _a['ion-activatable-instant'] = true,\n                _a) }, h(\"button\", { type: type, \"aria-pressed\": checked ? 'true' : null, class: \"button-native\", disabled: disabled }, h(\"slot\", null), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { class: \"segment-button-indicator\" })));\n    };\n    Object.defineProperty(SegmentButton.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SegmentButton, \"watchers\", {\n        get: function () {\n            return {\n                \"checked\": [\"checkedChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SegmentButton, \"style\", {\n        get: function () { return \":host{--padding-start:0;--padding-end:0;display:-ms-flexbox;display:flex;-ms-flex:1 0 auto;flex:1 0 auto;-ms-flex-direction:column;flex-direction:column;height:auto;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;-webkit-font-kerning:none;font-kerning:none}:host(:first-of-type){border-top-left-radius:var(--border-radius);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--border-radius)}:host-context([dir=rtl]):first-of-type,:host-context([dir=rtl]):host(:first-of-type){border-top-left-radius:0;border-top-right-radius:var(--border-radius);border-bottom-right-radius:var(--border-radius);border-bottom-left-radius:0}:host(:not(:first-of-type)){border-left-width:0}:host-context([dir=rtl]):host(:not(:first-of-type)),:host-context([dir=rtl]):not(:first-of-type){border-right-width:0;border-left-width:var(--border-width)}:host(:last-of-type){border-top-left-radius:0;border-top-right-radius:var(--border-radius);border-bottom-right-radius:var(--border-radius);border-bottom-left-radius:0}:host-context([dir=rtl]):host(:last-of-type),:host-context([dir=rtl]):last-of-type{border-top-left-radius:var(--border-radius);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--border-radius)}.button-native{border-radius:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;cursor:pointer}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end);padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.segment-button-indicator{-ms-flex-item-align:end;align-self:flex-end;width:100%;height:2px;background-color:var(--indicator-color);opacity:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-checked) .segment-button-indicator{background-color:var(--indicator-color-checked,var(--color-checked))}:host(.activated){color:var(--color-activated,var(--color))}:host(.segment-button-disabled){color:var(--color-disabled)}:host(.segment-button-disabled.segment-button-checked){color:var(--color-checked-disabled)}::slotted(ion-icon){-ms-flex-order:-1;order:-1}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon),:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color,var(--color-checked))}:host{--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s,opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;font-size:14px;font-weight:500;letter-spacing:.06em;line-height:40px;text-transform:uppercase}:host(.activated),:host(.segment-button-checked){--border-color:var(--ion-color-primary,#3880ff);opacity:1}:host(.segment-button-disabled){opacity:.3}::slotted(ion-icon){font-size:24px}::slotted(ion-icon),::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon),:host(.segment-button-layout-icon-top) ::slotted(ion-label){margin-top:0}:host(.segment-button-layout-icon-bottom) ::slotted(ion-label),:host(.segment-button-layout-icon-top) ::slotted(ion-icon){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon),:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-checked.activated){color:var(--color-checked)}\\@media (any-hover:hover){:host(:hover){background:var(--background-hover)}}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return SegmentButton;\n}());\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n","var _this = this;\nimport * as tslib_1 from \"tslib\";\nvar hostContext = function (selector, el) {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nvar createColorClasses = function (color) {\n    var _a;\n    return (typeof color === 'string' && color.length > 0) ? (_a = {\n            'ion-color': true\n        },\n        _a[\"ion-color-\" + color] = true,\n        _a) : undefined;\n};\nvar getClassList = function (classes) {\n    if (classes !== undefined) {\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(function (c) { return c != null; })\n            .map(function (c) { return c.trim(); })\n            .filter(function (c) { return c !== ''; });\n    }\n    return [];\n};\nvar getClassMap = function (classes) {\n    var map = {};\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\n    return map;\n};\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nvar openURL = function (url, ev, direction) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n    var router;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(url != null && url[0] !== '#' && !SCHEME.test(url))) return [3 /*break*/, 2];\n                router = document.querySelector('ion-router');\n                if (!router) return [3 /*break*/, 2];\n                if (ev != null) {\n                    ev.preventDefault();\n                }\n                return [4 /*yield*/, router.componentOnReady()];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, router.push(url, direction)];\n            case 2: return [2 /*return*/, false];\n        }\n    });\n}); };\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}