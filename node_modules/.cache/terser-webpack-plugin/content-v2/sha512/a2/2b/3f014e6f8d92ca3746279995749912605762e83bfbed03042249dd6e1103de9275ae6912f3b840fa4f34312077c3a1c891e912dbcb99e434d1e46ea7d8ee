{"map":"{\"version\":3,\"sources\":[\"/Users/rowanshah/Documents/GitHub/ParentApp/node_modules/ionicons/dist/esm/legacy/shadow-css-984bac74-549b16dd.js\"],\"names\":[\"scopeCss\",\"cssText\",\"scopeId\",\"commentOriginalSelector\",\"sc\",\"ShadowCss\",\"shimCssText\",\"__webpack_require__\",\"r\",\"__webpack_exports__\",\"d\",\"this\",\"strictStyling\",\"prototype\",\"hostScopeId\",\"slotScopeId\",\"commentsWithHash\",\"extractCommentsWithHash\",\"stripComments\",\"orgSelectors\",\"processCommentedSelector_1\",\"rule\",\"placeholder\",\"length\",\"comment\",\"selector\",\"push\",\"processRules\",\"startsWith\",\"content\",\"scopedCssText\",\"_scopeCssText\",\"concat\",\"join\",\"forEach\",\"_a\",\"replace\",\"_insertPolyfillHostInCssText\",\"_convertColonHost\",\"_convertColonHostContext\",\"_convertColonSlotted\",\"_convertShadowDOMSelectors\",\"_scopeSelectors\",\"trim\",\"_convertColonRule\",\"_cssColonHostRe\",\"_colonHostPartReplacer\",\"slotAttr\",\"regExp\",\"_cssColonSlottedRe\",\"m\",\"_i\",\"arguments\",\"compound\",\"suffix\",\"sel\",\"_polyfillHostNoCombinator\",\"_cssColonHostContextRe\",\"_colonHostContextPartReplacer\",\"partReplacer\",\"parts\",\"split\",\"i\",\"p\",\"host\",\"part\",\"indexOf\",\"_polyfillHost\",\"_shadowDOMSelectorsRe\",\"reduce\",\"result\",\"pattern\",\"scopeSelector\",\"hostSelector\",\"slotSelector\",\"_this\",\"_scopeSelector\",\"CssRule\",\"strict\",\"map\",\"shallowPart\",\"_selectorNeedsScoping\",\"_applyStrictSelectorScope\",\"_applySelectorScope\",\"re\",\"_makeScopeMatcher\",\"test\",\"lre\",\"rre\",\"RegExp\",\"_selectorReSuffix\",\"_applySimpleSelectorScope\",\"_polyfillHostRe\",\"lastIndex\",\"replaceBy_1\",\"_polyfillHostNoCombinatorRe\",\"_\",\"before\",\"colon\",\"after\",\"isRe\",\"className\",\"_scopeSelectorPart\",\"scopedP\",\"t\",\"matches\",\"match\",\"safeContent\",\"SafeSelector\",\"res\",\"scopedSelector\",\"startIndex\",\"sep\",\"hasHost\",\"shouldScope\",\"exec\",\"separator\",\"part_1\",\"slice\",\"index\",\"scopedPart\",\"substring\",\"restore\",\"_colonHostContextRe\",\"_polyfillHostContext\",\"_colonHostRe\",\"_colonSlottedRe\",\"_polyfillSlotted\",\"placeholders\",\"keep\",\"replaceBy\",\"_content\",\"pseudo\",\"exp\",\"_parenSuffix\",\"_commentRe\",\"input\",\"_commentWithHashRe\",\"_ruleRe\",\"_curlyRe\",\"OPEN_CURLY\",\"CLOSE_CURLY\",\"BLOCK_PLACEHOLDER\",\"ruleCallback\",\"inputWithEscapedBlocks\",\"escapeBlocks\",\"nextBlockIndex\",\"escapedString\",\"contentPrefix\",\"blocks\",\"StringWithEscapedBlocks\",\"inputParts\",\"resultParts\",\"escapedBlocks\",\"bracketCount\",\"currentBlockParts\",\"partIndex\"],\"mappings\":\"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\",\"sourcesContent\":[\"/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n *\\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\\n */\\nfunction scopeCss(cssText, scopeId, commentOriginalSelector) {\\n    var sc = new ShadowCss();\\n    return sc.shimCssText(cssText, scopeId, scopeId + '-h', scopeId + '-s', commentOriginalSelector);\\n}\\nvar ShadowCss = /** @class */ (function () {\\n    function ShadowCss() {\\n        this.strictStyling = true;\\n    }\\n    ShadowCss.prototype.shimCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\\n        if (hostScopeId === void 0) { hostScopeId = ''; }\\n        if (slotScopeId === void 0) { slotScopeId = ''; }\\n        if (commentOriginalSelector === void 0) { commentOriginalSelector = false; }\\n        var commentsWithHash = extractCommentsWithHash(cssText);\\n        cssText = stripComments(cssText);\\n        var orgSelectors = [];\\n        if (commentOriginalSelector) {\\n            var processCommentedSelector_1 = function (rule) {\\n                var placeholder = \\\"/*!@___\\\" + orgSelectors.length + \\\"___*/\\\";\\n                var comment = \\\"/*!@\\\" + rule.selector + \\\"*/\\\";\\n                orgSelectors.push({ placeholder: placeholder, comment: comment });\\n                rule.selector = placeholder + rule.selector;\\n                return rule;\\n            };\\n            cssText = processRules(cssText, function (rule) {\\n                if (rule.selector[0] !== '@') {\\n                    return processCommentedSelector_1(rule);\\n                }\\n                else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\\n                    rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\\n                    rule.content = processRules(rule.content, processCommentedSelector_1);\\n                    return rule;\\n                }\\n                return rule;\\n            });\\n        }\\n        var scopedCssText = this._scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\\n        cssText = [scopedCssText].concat(commentsWithHash).join('\\\\n');\\n        if (commentOriginalSelector) {\\n            orgSelectors.forEach(function (_a) {\\n                var placeholder = _a.placeholder, comment = _a.comment;\\n                cssText = cssText.replace(placeholder, comment);\\n            });\\n        }\\n        return cssText;\\n    };\\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\\n        cssText = this._insertPolyfillHostInCssText(cssText);\\n        cssText = this._convertColonHost(cssText);\\n        cssText = this._convertColonHostContext(cssText);\\n        cssText = this._convertColonSlotted(cssText, slotScopeId);\\n        cssText = this._convertShadowDOMSelectors(cssText);\\n        if (scopeId) {\\n            cssText = this._scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\\n        }\\n        cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \\\".\\\" + hostScopeId);\\n        cssText = cssText.replace(/>\\\\s*\\\\*\\\\s+([^{, ]+)/gm, ' $1 ');\\n        return cssText.trim();\\n    };\\n    /*\\n     * convert a rule like :host(.foo) > .bar { }\\n     *\\n     * to\\n     *\\n     * .foo<scopeName> > .bar\\n    */\\n    ShadowCss.prototype._convertColonHost = function (cssText) {\\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\\n    };\\n    /*\\n   * convert a rule like ::slotted(.foo) { }\\n  */\\n    ShadowCss.prototype._convertColonSlotted = function (cssText, slotAttr) {\\n        var regExp = _cssColonSlottedRe;\\n        return cssText.replace(regExp, function () {\\n            var m = [];\\n            for (var _i = 0; _i < arguments.length; _i++) {\\n                m[_i] = arguments[_i];\\n            }\\n            if (m[2]) {\\n                var compound = m[2].trim();\\n                var suffix = m[3];\\n                var sel = '.' + slotAttr + ' > ' + compound + suffix;\\n                return sel;\\n            }\\n            else {\\n                return _polyfillHostNoCombinator + m[3];\\n            }\\n        });\\n    };\\n    /*\\n     * convert a rule like :host-context(.foo) > .bar { }\\n     *\\n     * to\\n     *\\n     * .foo<scopeName> > .bar, .foo scopeName > .bar { }\\n     *\\n     * and\\n     *\\n     * :host-context(.foo:host) .bar { ... }\\n     *\\n     * to\\n     *\\n     * .foo<scopeName> .bar { ... }\\n    */\\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\\n    };\\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\\n        return cssText.replace(regExp, function () {\\n            var m = [];\\n            for (var _i = 0; _i < arguments.length; _i++) {\\n                m[_i] = arguments[_i];\\n            }\\n            if (m[2]) {\\n                var parts = m[2].split(',');\\n                var r = [];\\n                for (var i = 0; i < parts.length; i++) {\\n                    var p = parts[i].trim();\\n                    if (!p)\\n                        break;\\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\\n                }\\n                return r.join(',');\\n            }\\n            else {\\n                return _polyfillHostNoCombinator + m[3];\\n            }\\n        });\\n    };\\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\\n        if (part.indexOf(_polyfillHost) > -1) {\\n            return this._colonHostPartReplacer(host, part, suffix);\\n        }\\n        else {\\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\\n        }\\n    };\\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\\n        return host + part.replace(_polyfillHost, '') + suffix;\\n    };\\n    /*\\n     * Convert combinators like ::shadow and pseudo-elements like ::content\\n     * by replacing with space.\\n    */\\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\\n    };\\n    // change a selector like 'div' to 'name div'\\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector, slotSelector, commentOriginalSelector) {\\n        var _this = this;\\n        return processRules(cssText, function (rule) {\\n            var selector = rule.selector;\\n            var content = rule.content;\\n            if (rule.selector[0] !== '@') {\\n                selector =\\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, slotSelector, _this.strictStyling);\\n            }\\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector, slotSelector, commentOriginalSelector);\\n            }\\n            selector = selector.replace(/\\\\s{2,}/g, ' ').trim();\\n            return new CssRule(selector, content);\\n        });\\n    };\\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, slotSelector, strict) {\\n        var _this = this;\\n        return selector.split(',')\\n            .map(function (shallowPart) {\\n            if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\\n                return shallowPart.trim();\\n            }\\n            if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\\n                return strict ?\\n                    _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector).trim() :\\n                    _this._applySelectorScope(shallowPart, scopeSelector, hostSelector).trim();\\n            }\\n            else {\\n                return shallowPart.trim();\\n            }\\n        })\\n            .join(', ');\\n    };\\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\\n        var re = this._makeScopeMatcher(scopeSelector);\\n        return !re.test(selector);\\n    };\\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\\n        var lre = /\\\\[/g;\\n        var rre = /\\\\]/g;\\n        scopeSelector = scopeSelector.replace(lre, '\\\\\\\\[').replace(rre, '\\\\\\\\]');\\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\\n    };\\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\\n        // Difference from webcomponents.js: scopeSelector could not be an array\\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\\n    };\\n    // scope via name and [is=name]\\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\\n        _polyfillHostRe.lastIndex = 0;\\n        if (_polyfillHostRe.test(selector)) {\\n            var replaceBy_1 = this.strictStyling ? \\\".\\\" + hostSelector : scopeSelector;\\n            return selector\\n                .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\\n                    return before + replaceBy_1 + colon + after;\\n                });\\n            })\\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\\n        }\\n        return scopeSelector + ' ' + selector;\\n    };\\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\\n        var _this = this;\\n        var isRe = /\\\\[is=([^\\\\]]*)\\\\]/g;\\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\\n            var parts = [];\\n            for (var _i = 1; _i < arguments.length; _i++) {\\n                parts[_i - 1] = arguments[_i];\\n            }\\n            return parts[0];\\n        });\\n        var className = '.' + scopeSelector;\\n        var _scopeSelectorPart = function (p) {\\n            var scopedP = p.trim();\\n            if (!scopedP) {\\n                return '';\\n            }\\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\\n            }\\n            else {\\n                // remove :host since it should be unnecessary\\n                var t = p.replace(_polyfillHostRe, '');\\n                if (t.length > 0) {\\n                    var matches = t.match(/([^:]*)(:*)(.*)/);\\n                    if (matches) {\\n                        scopedP = matches[1] + className + matches[2] + matches[3];\\n                    }\\n                }\\n            }\\n            return scopedP;\\n        };\\n        var safeContent = new SafeSelector(selector);\\n        selector = safeContent.content();\\n        var scopedSelector = '';\\n        var startIndex = 0;\\n        var res;\\n        var sep = /( |>|\\\\+|~(?!=))\\\\s*/g;\\n        // If a selector appears before :host it should not be shimmed as it\\n        // matches on ancestor elements and not on elements in the host's shadow\\n        // `:host-context(div)` is transformed to\\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\\n        // Historically `component-tag:host` was matching the component so we also want to preserve\\n        // this behavior to avoid breaking legacy apps (it should not match).\\n        // The behavior should be:\\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\\n        //   `:host-context(tag)`)\\n        var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\\n        var shouldScope = !hasHost;\\n        while ((res = sep.exec(selector)) !== null) {\\n            var separator = res[1];\\n            var part_1 = selector.slice(startIndex, res.index).trim();\\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\\n            var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\\n            scopedSelector += scopedPart + \\\" \\\" + separator + \\\" \\\";\\n            startIndex = sep.lastIndex;\\n        }\\n        var part = selector.substring(startIndex);\\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\\n        // replace the placeholders with their original values\\n        return safeContent.restore(scopedSelector);\\n    };\\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\\n        selector = selector\\n            .replace(_colonHostContextRe, _polyfillHostContext)\\n            .replace(_colonHostRe, _polyfillHost)\\n            .replace(_colonSlottedRe, _polyfillSlotted);\\n        return selector;\\n    };\\n    return ShadowCss;\\n}());\\nvar SafeSelector = /** @class */ (function () {\\n    function SafeSelector(selector) {\\n        var _this = this;\\n        this.placeholders = [];\\n        this.index = 0;\\n        // Replaces attribute selectors with placeholders.\\n        // The WS in [attr=\\\"va lue\\\"] would otherwise be interpreted as a selector separator.\\n        selector = selector.replace(/(\\\\[[^\\\\]]*\\\\])/g, function (_, keep) {\\n            var replaceBy = \\\"__ph-\\\" + _this.index + \\\"__\\\";\\n            _this.placeholders.push(keep);\\n            _this.index++;\\n            return replaceBy;\\n        });\\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\\n        // WS and \\\"+\\\" would otherwise be interpreted as selector separators.\\n        this._content = selector.replace(/(:nth-[-\\\\w]+)(\\\\([^)]+\\\\))/g, function (_, pseudo, exp) {\\n            var replaceBy = \\\"__ph-\\\" + _this.index + \\\"__\\\";\\n            _this.placeholders.push(exp);\\n            _this.index++;\\n            return pseudo + replaceBy;\\n        });\\n    }\\n    SafeSelector.prototype.restore = function (content) {\\n        var _this = this;\\n        return content.replace(/__ph-(\\\\d+)__/g, function (_, index) { return _this.placeholders[+index]; });\\n    };\\n    SafeSelector.prototype.content = function () { return this._content; };\\n    return SafeSelector;\\n}());\\nvar _polyfillHost = '-shadowcsshost';\\nvar _polyfillSlotted = '-shadowcssslotted';\\n// note: :host-context pre-processed to -shadowcsshostcontext.\\nvar _polyfillHostContext = '-shadowcsscontext';\\nvar _parenSuffix = ')(?:\\\\\\\\((' +\\n    '(?:\\\\\\\\([^)(]*\\\\\\\\)|[^)(]*)+?' +\\n    ')\\\\\\\\))?([^,{]*)';\\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\\\s]*)/;\\nvar _shadowDOMSelectorsRe = [\\n    /::shadow/g,\\n    /::content/g\\n];\\nvar _selectorReSuffix = '([>\\\\\\\\s~+\\\\[.,{:][\\\\\\\\s\\\\\\\\S]*)?$';\\nvar _polyfillHostRe = /-shadowcsshost/gim;\\nvar _colonHostRe = /:host/gim;\\nvar _colonSlottedRe = /::slotted/gim;\\nvar _colonHostContextRe = /:host-context/gim;\\nvar _commentRe = /\\\\/\\\\*\\\\s*[\\\\s\\\\S]*?\\\\*\\\\//g;\\nfunction stripComments(input) {\\n    return input.replace(_commentRe, '');\\n}\\nvar _commentWithHashRe = /\\\\/\\\\*\\\\s*#\\\\s*source(Mapping)?URL=[\\\\s\\\\S]+?\\\\*\\\\//g;\\nfunction extractCommentsWithHash(input) {\\n    return input.match(_commentWithHashRe) || [];\\n}\\nvar _ruleRe = /(\\\\s*)([^;\\\\{\\\\}]+?)(\\\\s*)((?:{%BLOCK%}?\\\\s*;?)|(?:\\\\s*;))/g;\\nvar _curlyRe = /([{}])/g;\\nvar OPEN_CURLY = '{';\\nvar CLOSE_CURLY = '}';\\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\\nvar CssRule = /** @class */ (function () {\\n    function CssRule(selector, content) {\\n        this.selector = selector;\\n        this.content = content;\\n    }\\n    return CssRule;\\n}());\\nfunction processRules(input, ruleCallback) {\\n    var inputWithEscapedBlocks = escapeBlocks(input);\\n    var nextBlockIndex = 0;\\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\\n        var m = [];\\n        for (var _i = 0; _i < arguments.length; _i++) {\\n            m[_i] = arguments[_i];\\n        }\\n        var selector = m[2];\\n        var content = '';\\n        var suffix = m[4];\\n        var contentPrefix = '';\\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\\n            contentPrefix = '{';\\n        }\\n        var rule = ruleCallback(new CssRule(selector, content));\\n        return \\\"\\\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\\n    });\\n}\\nvar StringWithEscapedBlocks = /** @class */ (function () {\\n    function StringWithEscapedBlocks(escapedString, blocks) {\\n        this.escapedString = escapedString;\\n        this.blocks = blocks;\\n    }\\n    return StringWithEscapedBlocks;\\n}());\\nfunction escapeBlocks(input) {\\n    var inputParts = input.split(_curlyRe);\\n    var resultParts = [];\\n    var escapedBlocks = [];\\n    var bracketCount = 0;\\n    var currentBlockParts = [];\\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\\n        var part = inputParts[partIndex];\\n        if (part === CLOSE_CURLY) {\\n            bracketCount--;\\n        }\\n        if (bracketCount > 0) {\\n            currentBlockParts.push(part);\\n        }\\n        else {\\n            if (currentBlockParts.length > 0) {\\n                escapedBlocks.push(currentBlockParts.join(''));\\n                resultParts.push(BLOCK_PLACEHOLDER);\\n                currentBlockParts = [];\\n            }\\n            resultParts.push(part);\\n        }\\n        if (part === OPEN_CURLY) {\\n            bracketCount++;\\n        }\\n    }\\n    if (currentBlockParts.length > 0) {\\n        escapedBlocks.push(currentBlockParts.join(''));\\n        resultParts.push(BLOCK_PLACEHOLDER);\\n    }\\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\\n}\\nexport { ShadowCss, scopeCss };\\n\"]}","code":"(window[\"webpackJsonp\"]=window[\"webpackJsonp\"]||[]).push([[\"chunk-2d21d14c\"],{d07a:function(t,e,r){\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nfunction n(t,e,r){var n=new o;return n.shimCssText(t,e,e+\"-h\",e+\"-s\",r)}r.r(e),r.d(e,\"ShadowCss\",function(){return o}),r.d(e,\"scopeCss\",function(){return n});var o=function(){function t(){this.strictStyling=!0}return t.prototype.shimCssText=function(t,e,r,n,o){void 0===r&&(r=\"\"),void 0===n&&(n=\"\"),void 0===o&&(o=!1);var c=R(t);t=w(t);var s=[];if(o){var i=function(t){var e=\"/*!@___\"+s.length+\"___*/\",r=\"/*!@\"+t.selector+\"*/\";return s.push({placeholder:e,comment:r}),t.selector=e+t.selector,t};t=j(t,function(t){return\"@\"!==t.selector[0]?i(t):t.selector.startsWith(\"@media\")||t.selector.startsWith(\"@supports\")||t.selector.startsWith(\"@page\")||t.selector.startsWith(\"@document\")?(t.content=j(t.content,i),t):t})}var p=this._scopeCssText(t,e,r,n,o);return t=[p].concat(c).join(\"\\n\"),o&&s.forEach(function(e){var r=e.placeholder,n=e.comment;t=t.replace(r,n)}),t},t.prototype._scopeCssText=function(t,e,r,n,o){return t=this._insertPolyfillHostInCssText(t),t=this._convertColonHost(t),t=this._convertColonHostContext(t),t=this._convertColonSlotted(t,n),t=this._convertShadowDOMSelectors(t),e&&(t=this._scopeSelectors(t,e,r,n,o)),t=t.replace(/-shadowcsshost-no-combinator/g,\".\"+r),t=t.replace(/>\\s*\\*\\s+([^{, ]+)/gm,\" $1 \"),t.trim()},t.prototype._convertColonHost=function(t){return this._convertColonRule(t,a,this._colonHostPartReplacer)},t.prototype._convertColonSlotted=function(t,e){var r=h;return t.replace(r,function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];if(t[2]){var n=t[2].trim(),o=t[3],c=\".\"+e+\" > \"+n+o;return c}return f+t[3]})},t.prototype._convertColonHostContext=function(t){return this._convertColonRule(t,u,this._colonHostContextPartReplacer)},t.prototype._convertColonRule=function(t,e,r){return t.replace(e,function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(t[2]){for(var n=t[2].split(\",\"),o=[],c=0;c<n.length;c++){var s=n[c].trim();if(!s)break;o.push(r(f,s,t[3]))}return o.join(\",\")}return f+t[3]})},t.prototype._colonHostContextPartReplacer=function(t,e,r){return e.indexOf(s)>-1?this._colonHostPartReplacer(t,e,r):t+e+r+\", \"+e+\" \"+t+r},t.prototype._colonHostPartReplacer=function(t,e,r){return t+e.replace(s,\"\")+r},t.prototype._convertShadowDOMSelectors=function(t){return _.reduce(function(t,e){return t.replace(e,\" \")},t)},t.prototype._scopeSelectors=function(t,e,r,n,o){var c=this;return j(t,function(t){var s=t.selector,i=t.content;return\"@\"!==t.selector[0]?s=c._scopeSelector(t.selector,e,r,n,c.strictStyling):(t.selector.startsWith(\"@media\")||t.selector.startsWith(\"@supports\")||t.selector.startsWith(\"@page\")||t.selector.startsWith(\"@document\"))&&(i=c._scopeSelectors(t.content,e,r,n,o)),s=s.replace(/\\s{2,}/g,\" \").trim(),new P(s,i)})},t.prototype._scopeSelector=function(t,e,r,n,o){var c=this;return t.split(\",\").map(function(t){return n&&t.indexOf(\".\"+n)>-1?t.trim():c._selectorNeedsScoping(t,e)?o?c._applyStrictSelectorScope(t,e,r).trim():c._applySelectorScope(t,e,r).trim():t.trim()}).join(\", \")},t.prototype._selectorNeedsScoping=function(t,e){var r=this._makeScopeMatcher(e);return!r.test(t)},t.prototype._makeScopeMatcher=function(t){var e=/\\[/g,r=/\\]/g;return t=t.replace(e,\"\\\\[\").replace(r,\"\\\\]\"),new RegExp(\"^(\"+t+\")\"+d,\"m\")},t.prototype._applySelectorScope=function(t,e,r){return this._applySimpleSelectorScope(t,e,r)},t.prototype._applySimpleSelectorScope=function(t,e,r){if(g.lastIndex=0,g.test(t)){var n=this.strictStyling?\".\"+r:e;return t.replace(v,function(t,e){return e.replace(/([^:]*)(:*)(.*)/,function(t,e,r,o){return e+n+r+o})}).replace(g,n+\" \")}return e+\" \"+t},t.prototype._applyStrictSelectorScope=function(t,e,r){var n=this,o=/\\[is=([^\\]]*)\\]/g;e=e.replace(o,function(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r];return e[0]});var s=\".\"+e,i=function(t){var o=t.trim();if(!o)return\"\";if(t.indexOf(f)>-1)o=n._applySimpleSelectorScope(t,e,r);else{var c=t.replace(g,\"\");if(c.length>0){var i=c.match(/([^:]*)(:*)(.*)/);i&&(o=i[1]+s+i[2]+i[3])}}return o},p=new c(t);t=p.content();var l,a=\"\",u=0,h=/( |>|\\+|~(?!=))\\s*/g,v=t.indexOf(f)>-1,_=!v;while(null!==(l=h.exec(t))){var d=l[1],S=t.slice(u,l.index).trim();_=_||S.indexOf(f)>-1;var m=_?i(S):S;a+=m+\" \"+d+\" \",u=h.lastIndex}var x=t.substring(u);return _=_||x.indexOf(f)>-1,a+=_?i(x):x,p.restore(a)},t.prototype._insertPolyfillHostInCssText=function(t){return t=t.replace(x,p).replace(S,s).replace(m,i),t},t}(),c=function(){function t(t){var e=this;this.placeholders=[],this.index=0,t=t.replace(/(\\[[^\\]]*\\])/g,function(t,r){var n=\"__ph-\"+e.index+\"__\";return e.placeholders.push(r),e.index++,n}),this._content=t.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g,function(t,r,n){var o=\"__ph-\"+e.index+\"__\";return e.placeholders.push(n),e.index++,r+o})}return t.prototype.restore=function(t){var e=this;return t.replace(/__ph-(\\d+)__/g,function(t,r){return e.placeholders[+r]})},t.prototype.content=function(){return this._content},t}(),s=\"-shadowcsshost\",i=\"-shadowcssslotted\",p=\"-shadowcsscontext\",l=\")(?:\\\\(((?:\\\\([^)(]*\\\\)|[^)(]*)+?)\\\\))?([^,{]*)\",a=new RegExp(\"(\"+s+l,\"gim\"),u=new RegExp(\"(\"+p+l,\"gim\"),h=new RegExp(\"(\"+i+l,\"gim\"),f=s+\"-no-combinator\",v=/-shadowcsshost-no-combinator([^\\s]*)/,_=[/::shadow/g,/::content/g],d=\"([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$\",g=/-shadowcsshost/gim,S=/:host/gim,m=/::slotted/gim,x=/:host-context/gim,y=/\\/\\*\\s*[\\s\\S]*?\\*\\//g;function w(t){return t.replace(y,\"\")}var C=/\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;function R(t){return t.match(C)||[]}var H=/(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g,b=/([{}])/g,O=\"{\",W=\"}\",k=\"%BLOCK%\",P=function(){function t(t,e){this.selector=t,this.content=e}return t}();function j(t,e){var r=E(t),n=0;return r.escapedString.replace(H,function(){for(var t=[],o=0;o<arguments.length;o++)t[o]=arguments[o];var c=t[2],s=\"\",i=t[4],p=\"\";i&&i.startsWith(\"{\"+k)&&(s=r.blocks[n++],i=i.substring(k.length+1),p=\"{\");var l=e(new P(c,s));return\"\"+t[1]+l.selector+t[3]+p+l.content+i})}var T=function(){function t(t,e){this.escapedString=t,this.blocks=e}return t}();function E(t){for(var e=t.split(b),r=[],n=[],o=0,c=[],s=0;s<e.length;s++){var i=e[s];i===W&&o--,o>0?c.push(i):(c.length>0&&(n.push(c.join(\"\")),r.push(k),c=[]),r.push(i)),i===O&&o++}return c.length>0&&(n.push(c.join(\"\")),r.push(k)),new T(r.join(\"\"),n)}}}]);","extractedComments":[]}